{
	"id": "f033e5ff61955325890952e62919671f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/YieldFarm.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.26;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\n\n/**\n * @title YieldFarm\n * @dev A yield farming contract where users can stake ERC-20 tokens to earn rewards.\n * It includes support for boosting rewards with NFTs and a referral system.\n */\ncontract YieldFarm is Initializable, ReentrancyGuardUpgradeable, OwnableUpgradeable {\n    using SafeERC20Upgradeable for IERC20Upgradeable;\n\n    // Struct to store staking information for each user\n    struct StakeInfo {\n        uint256 amount;      // Amount of tokens staked\n        uint256 rewardDebt;  // Reward debt for calculating pending rewards\n        uint256 lockUntil;   // Timestamp until which the stake is locked\n    }\n\n    // Struct to store information about each staking pool\n    struct PoolInfo {\n        IERC20Upgradeable stakingToken;  // Token to be staked\n        IERC20Upgradeable rewardToken;   // Token given as reward\n        uint256 rewardRate;              // Rate at which rewards are distributed\n        uint256 lockDuration;            // Duration for which stakes are locked\n        uint256 totalStaked;             // Total amount of tokens staked in this pool\n        uint256 accRewardPerShare;       // Accumulated rewards per share, scaled by 1e12\n        uint256 lastRewardTime;          // Last time rewards were distributed\n    }\n\n    PoolInfo[] public poolInfo;  // Array to store all pool information\n    mapping(uint256 => mapping(address => StakeInfo)) public poolStakes;  // Mapping of pool ID to user address to stake info\n    mapping(address => address) public referrers;  // Mapping of user address to their referrer's address\n    mapping(address => uint256) public referralRewards;  // Mapping of user address to their referral rewards\n\n    uint256 public baseRewardRate;    // Base rate for reward calculation\n    uint256 public maxMultiplier;     // Maximum multiplier for rewards\n    uint256 public multiplierDuration;  // Duration over which the multiplier increases\n    uint256 public nftBoostRate;      // Boost rate for holding NFTs\n    uint256 public referralBonus;     // Bonus for referring new users\n    uint256 public refereeBonus;      // Bonus for being referred\n    bool public paused;               // Flag to pause the contract in case of emergencies\n\n    IERC721Upgradeable public nftToken;  // NFT token for boost mechanism\n    IERC20Upgradeable public governanceToken;  // Governance token of the protocol\n\n    // Events\n    event Staked(address indexed user, uint256 indexed pid, uint256 amount, uint256 lockUntil);\n    event Unstaked(address indexed user, uint256 indexed pid, uint256 amount);\n    event RewardPaid(address indexed user, uint256 indexed pid, uint256 reward);\n    event EmergencyWithdraw(address indexed user, uint256 indexed pid, uint256 amount);\n    event ReferrerSet(address indexed user, address indexed referrer);\n    event PoolAdded(uint256 indexed pid, address stakingToken, address rewardToken, uint256 rewardRate, uint256 lockDuration);\n\n    // Modifier to prevent functions from being called while the contract is paused\n    modifier whenNotPaused() {\n        require(!paused, \"Contract is paused\");\n        _;\n    }\n\n    /**\n     * @dev Initializes the contract with initial values\n     * @param _governanceToken Address of the governance token\n     * @param _nftToken Address of the NFT token for boost mechanism\n     * @param _baseRewardRate Base rate for reward calculation\n     * @param _maxMultiplier Maximum multiplier for rewards\n     * @param _multiplierDuration Duration over which the multiplier increases\n     * @param _nftBoostRate Boost rate for holding NFTs\n     * @param _referralBonus Bonus for referring new users\n     * @param _refereeBonus Bonus for being referred\n     */\n    function initialize(\n        IERC20Upgradeable _governanceToken,\n        IERC721Upgradeable _nftToken,\n        uint256 _baseRewardRate,\n        uint256 _maxMultiplier,\n        uint256 _multiplierDuration,\n        uint256 _nftBoostRate,\n        uint256 _referralBonus,\n        uint256 _refereeBonus\n    ) external initializer {\n        __Ownable_init(msg.sender);\n        __ReentrancyGuard_init();\n        governanceToken = _governanceToken;\n        nftToken = _nftToken;\n        baseRewardRate = _baseRewardRate;\n        maxMultiplier = _maxMultiplier;\n        multiplierDuration = _multiplierDuration;\n        nftBoostRate = _nftBoostRate;\n        referralBonus = _referralBonus;\n        refereeBonus = _refereeBonus;\n    }\n\n    /**\n     * @dev Adds a new staking pool\n     * @param _stakingToken Address of the token to be staked\n     * @param _rewardToken Address of the token given as reward\n     * @param _rewardRate Rate at which rewards are distributed\n     * @param _lockDuration Duration for which stakes are locked\n     */\n    function addPool(\n        IERC20Upgradeable _stakingToken,\n        IERC20Upgradeable _rewardToken,\n        uint256 _rewardRate,\n        uint256 _lockDuration\n    ) external onlyOwner {\n        poolInfo.push(PoolInfo({\n            stakingToken: _stakingToken,\n            rewardToken: _rewardToken,\n            rewardRate: _rewardRate,\n            lockDuration: _lockDuration,\n            totalStaked: 0,\n            accRewardPerShare: 0,\n            lastRewardTime: block.timestamp\n        }));\n        emit PoolAdded(poolInfo.length - 1, address(_stakingToken), address(_rewardToken), _rewardRate, _lockDuration);\n    }\n\n    /**\n     * @dev Allows a user to stake tokens in a specific pool\n     * @param _pid Pool ID\n     * @param _amount Amount of tokens to stake\n     */\n    function stake(uint256 _pid, uint256 _amount) external nonReentrant whenNotPaused {\n        require(_amount > 0, \"Cannot stake 0\");\n\n        PoolInfo storage pool = poolInfo[_pid];\n        StakeInfo storage userStake = poolStakes[_pid][msg.sender];\n        _updatePool(_pid);\n        _updateRewards(_pid, msg.sender);\n\n        pool.stakingToken.safeTransferFrom(msg.sender, address(this), _amount);\n\n        userStake.amount += _amount;\n        userStake.lockUntil = block.timestamp + pool.lockDuration;\n        pool.totalStaked += _amount;\n\n        emit Staked(msg.sender, _pid, _amount, userStake.lockUntil);\n    }\n\n    /**\n     * @dev Allows a user to unstake tokens from a specific pool\n     * @param _pid Pool ID\n     * @param _amount Amount of tokens to unstake\n     */\n    function unstake(uint256 _pid, uint256 _amount) external nonReentrant {\n        PoolInfo storage pool = poolInfo[_pid];\n        StakeInfo storage userStake = poolStakes[_pid][msg.sender];\n        require(userStake.amount >= _amount, \"Insufficient staked amount\");\n        require(block.timestamp >= userStake.lockUntil, \"Stake is still locked\");\n\n        _updatePool(_pid);\n        _updateRewards(_pid, msg.sender);\n\n        userStake.amount -= _amount;\n        pool.totalStaked -= _amount;\n\n        pool.stakingToken.safeTransfer(msg.sender, _amount);\n\n        emit Unstaked(msg.sender, _pid, _amount);\n    }\n\n    /**\n     * @dev Allows a user to claim their rewards from a specific pool\n     * @param _pid Pool ID\n     */\n    function claimReward(uint256 _pid) external nonReentrant {\n        _updatePool(_pid);\n        _updateRewards(_pid, msg.sender);\n        uint256 reward = poolStakes[_pid][msg.sender].rewardDebt;\n        poolStakes[_pid][msg.sender].rewardDebt = 0;\n\n        poolInfo[_pid].rewardToken.safeTransfer(msg.sender, reward);\n\n        emit RewardPaid(msg.sender, _pid, reward);\n    }\n\n    /**\n     * @dev Allows a user to emergency withdraw their stake without caring about rewards\n     * @param _pid Pool ID\n     */\n    function emergencyWithdraw(uint256 _pid) external nonReentrant {\n        PoolInfo storage pool = poolInfo[_pid];\n        StakeInfo storage userStake = poolStakes[_pid][msg.sender];\n        require(userStake.amount > 0, \"No staked amount\");\n\n        uint256 amount = userStake.amount;\n        userStake.amount = 0;\n        userStake.rewardDebt = 0;\n\n        pool.totalStaked -= amount;\n        pool.stakingToken.safeTransfer(msg.sender, amount);\n\n        emit EmergencyWithdraw(msg.sender, _pid, amount);\n    }\n\n    /**\n     * @dev Allows a user to set their referrer\n     * @param _referrer Address of the referrer\n     */\n    function setReferrer(address _referrer) external {\n        require(referrers[msg.sender] == address(0), \"Referrer already set\");\n        require(_referrer != msg.sender, \"Cannot refer yourself\");\n        referrers[msg.sender] = _referrer;\n        referralRewards[_referrer] += referralBonus;\n        referralRewards[msg.sender] += refereeBonus;\n        emit ReferrerSet(msg.sender, _referrer);\n    }\n\n    /**\n     * @dev Allows the owner to set the reward rate for a specific pool\n     * @param _pid Pool ID\n     * @param _rewardRate New reward rate\n     */\n    function setRewardRate(uint256 _pid, uint256 _rewardRate) external onlyOwner {\n        poolInfo[_pid].rewardRate = _rewardRate;\n    }\n\n    /**\n     * @dev Allows the owner to set the lock duration for a specific pool\n     * @param _pid Pool ID\n     * @param _lockDuration New lock duration\n     */\n    function setLockDuration(uint256 _pid, uint256 _lockDuration) external onlyOwner {\n        poolInfo[_pid].lockDuration = _lockDuration;\n    }\n\n    /**\n     * @dev Allows the owner to set the NFT boost rate\n     * @param _nftBoostRate New NFT boost rate\n     */\n    function setNftBoostRate(uint256 _nftBoostRate) external onlyOwner {\n        nftBoostRate = _nftBoostRate;\n    }\n\n    /**\n     * @dev Allows the owner to distribute governance tokens\n     * @param _user Address of the user to receive tokens\n     * @param _amount Amount of tokens to distribute\n     */\n    function distributeGovernanceTokens(address _user, uint256 _amount) external onlyOwner {\n        governanceToken.safeTransfer(_user, _amount);\n    }\n\n    /**\n     * @dev Allows the owner to pause the contract\n     */\n    function pause() external onlyOwner {\n        paused = true;\n    }\n\n    /**\n     * @dev Allows the owner to unpause the contract\n     */\n    function unpause() external onlyOwner {\n        paused = false;\n    }\n\n    /**\n     * @dev Calculates the reward multiplier based on staking duration\n     * @param stakedDuration Duration for which tokens have been staked\n     * @return Calculated multiplier\n     */\n    function _calculateRewardMultiplier(uint256 stakedDuration) internal view returns (uint256) {\n        uint256 multiplier = stakedDuration / multiplierDuration;\n        return multiplier > maxMultiplier ? maxMultiplier : multiplier;\n    }\n\n    /**\n     * @dev Updates the reward variables of the given pool\n     * @param _pid Pool ID\n     */\n    function _updatePool(uint256 _pid) internal {\n        PoolInfo storage pool = poolInfo[_pid];\n        if (pool.totalStaked > 0) {\n            uint256 multiplier = block.timestamp - pool.lastRewardTime;\n            uint256 reward = multiplier * pool.rewardRate;\n            pool.accRewardPerShare += (reward * 1e12) / pool.totalStaked;\n        }\n        pool.lastRewardTime = block.timestamp;\n    }\n\n    /**\n     * @dev Updates the reward variables for a user on the given pool\n     * @param _pid Pool ID\n     * @param _user Address of the user\n     */\n    function _updateRewards(uint256 _pid, address _user) internal {\n        PoolInfo storage pool = poolInfo[_pid];\n        StakeInfo storage userStake = poolStakes[_pid][_user];\n        if (userStake.amount > 0) {\n            uint256 pendingReward = (userStake.amount * pool.accRewardPerShare) / 1e12 - userStake.rewardDebt;\n            uint256 stakedDuration = block.timestamp - (userStake.lockUntil - pool.lockDuration);\n            uint256 multiplier = _calculateRewardMultiplier(stakedDuration);\n            pendingReward = pendingReward * (baseRewardRate + multiplier) / baseRewardRate;\n            userStake.rewardDebt = pendingReward;\n            if (nftToken.balanceOf(_user) > 0) {\n                userStake.rewardDebt += pendingReward * nftBoostRate / 100;\n            }\n        }\n    }\n}"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20Upgradeable.sol\";\nimport \"../extensions/IERC20PermitUpgradeable.sol\";\nimport \"../../../utils/AddressUpgradeable.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20Upgradeable {\n    using AddressUpgradeable for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20Upgradeable token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20Upgradeable token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20Upgradeable token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20Upgradeable token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20Upgradeable token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20Upgradeable token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20PermitUpgradeable token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20Upgradeable token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && AddressUpgradeable.isContract(address(token));\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165Upgradeable.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721Upgradeable is IERC165Upgradeable {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165Upgradeable {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20PermitUpgradeable {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"ReentrancyGuardUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x2025ccf05f6f1f2fd4e078e552836f525a1864e3854ed555047cd732320ab29b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d27f4b23c2dee42394aebaf42bf238285230f472dfd3282a39c3f000ec28214f\",\"dweb:/ipfs/QmQa3DnvccwdWJeWrjgXPnFMTWbzWQWR39hVqC7eEwo2PC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 463,
								"contract": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 532,
								"contract": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"IERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol": {
				"IERC20PermitUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":\"IERC20PermitUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x07e881de3b9f6d2c07909f193f24b96c7fe4ea60013260f3f25aecd8bab3c2f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fed09b97ccb0ff9ba9b6a94224f1d489026bf6b4b7279bfe64fb6e8749dee4d\",\"dweb:/ipfs/QmcRAzaSP1UnGr4vrGkfJmB2L9aiTYoXfV1Lg9gqrVRWn8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
				"SafeERC20Upgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":734:7100  library SafeERC20Upgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":734:7100  library SafeERC20Upgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a28cbb739cdb68900b569221f510f5afb92dc80505593201ca5517793ad13c9764736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a28cbb739cdb68900b569221f510f5afb92dc80505593201ca5517793ad13c9764736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 DUP13 0xBB PUSH20 0x9CDB68900B569221F510F5AFB92DC80505593201 0xCA SSTORE OR PUSH26 0x3AD13C9764736F6C634300081A00330000000000000000000000 ",
							"sourceMap": "734:6366:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a28cbb739cdb68900b569221f510f5afb92dc80505593201ca5517793ad13c9764736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 DUP13 0xBB PUSH20 0x9CDB68900B569221F510F5AFB92DC80505593201 0xCA SSTORE OR PUSH26 0x3AD13C9764736F6C634300081A00330000000000000000000000 ",
							"sourceMap": "734:6366:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20Upgradeable,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20Upgradeable,bytes memory)": "infinite",
								"forceApprove(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeApprove(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safePermit(contract IERC20PermitUpgradeable,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20Upgradeable,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a28cbb739cdb68900b569221f510f5afb92dc80505593201ca5517793ad13c9764736f6c634300081a0033",
									".code": [
										{
											"begin": 734,
											"end": 7100,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 734,
											"end": 7100,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 734,
											"end": 7100,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 734,
											"end": 7100,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 734,
											"end": 7100,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 734,
											"end": 7100,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 734,
											"end": 7100,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 7100,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 734,
											"end": 7100,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"contracts/YieldFarm.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":\"SafeERC20Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x07e881de3b9f6d2c07909f193f24b96c7fe4ea60013260f3f25aecd8bab3c2f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fed09b97ccb0ff9ba9b6a94224f1d489026bf6b4b7279bfe64fb6e8749dee4d\",\"dweb:/ipfs/QmcRAzaSP1UnGr4vrGkfJmB2L9aiTYoXfV1Lg9gqrVRWn8\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x23b997be73d3dd46885262704f0f8cfc7273fdadfe303d37969a9561373972b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d03ebe5406134f0c4a017dee625ff615031194493bd1e88504e5c8fae55bc166\",\"dweb:/ipfs/QmUZV5bMbgk2PAkV3coouSeSainHN2jhqaQDJaA7hQRyu2\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol": {
				"IERC721Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":\"IERC721Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0xbe63437e37e32162d5d11ea8f11a44378c092b4bcbb05b51a813fe4bf33297d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68a514febde6ffd8afe3cb5b40815d10c0a926063237d5d167cbaa90239f75ae\",\"dweb:/ipfs/QmVBvYeR6oGBw7K7vu5FMotr8josejtaGwugM68VTZacww\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bb536a6faa0de76994331c1a5d1736f847a2b63d8d40f6afa62997cb16cf258164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bb536a6faa0de76994331c1a5d1736f847a2b63d8d40f6afa62997cb16cf258164736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB MSTORE8 PUSH11 0x6FAA0DE76994331C1A5D17 CALLDATASIZE 0xF8 SELFBALANCE LOG2 0xB6 RETURNDATASIZE DUP14 BLOCKHASH 0xF6 0xAF 0xA6 0x29 SWAP8 0xCB AND 0xCF 0x25 DUP2 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "194:9180:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bb536a6faa0de76994331c1a5d1736f847a2b63d8d40f6afa62997cb16cf258164736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB MSTORE8 PUSH11 0x6FAA0DE76994331C1A5D17 CALLDATASIZE 0xF8 SELFBALANCE LOG2 0xB6 RETURNDATASIZE DUP14 BLOCKHASH 0xF6 0xAF 0xA6 0x29 SWAP8 0xCB AND 0xCF 0x25 DUP2 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "194:9180:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bb536a6faa0de76994331c1a5d1736f847a2b63d8d40f6afa62997cb16cf258164736f6c634300081a0033",
									".code": [
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"contracts/YieldFarm.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"IERC165Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":\"IERC165Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/YieldFarm.sol": {
				"YieldFarm": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "stakingToken",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "rewardToken",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lockDuration",
									"type": "uint256"
								}
							],
							"name": "PoolAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "referrer",
									"type": "address"
								}
							],
							"name": "ReferrerSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "RewardPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lockUntil",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Unstaked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "_stakingToken",
									"type": "address"
								},
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "_rewardToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_rewardRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_lockDuration",
									"type": "uint256"
								}
							],
							"name": "addPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "baseRewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "claimReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "distributeGovernanceTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "governanceToken",
							"outputs": [
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "_governanceToken",
									"type": "address"
								},
								{
									"internalType": "contract IERC721Upgradeable",
									"name": "_nftToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_baseRewardRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maxMultiplier",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_multiplierDuration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_nftBoostRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_referralBonus",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_refereeBonus",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxMultiplier",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "multiplierDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nftBoostRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nftToken",
							"outputs": [
								{
									"internalType": "contract IERC721Upgradeable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolInfo",
							"outputs": [
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "stakingToken",
									"type": "address"
								},
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "rewardToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lockDuration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalStaked",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "accRewardPerShare",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastRewardTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "poolStakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lockUntil",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "refereeBonus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "referralBonus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "referralRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "referrers",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_lockDuration",
									"type": "uint256"
								}
							],
							"name": "setLockDuration",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_nftBoostRate",
									"type": "uint256"
								}
							],
							"name": "setNftBoostRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_referrer",
									"type": "address"
								}
							],
							"name": "setReferrer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_rewardRate",
									"type": "uint256"
								}
							],
							"name": "setRewardRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "A yield farming contract where users can stake ERC-20 tokens to earn rewards. It includes support for boosting rewards with NFTs and a referral system.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"addPool(address,address,uint256,uint256)": {
								"details": "Adds a new staking pool",
								"params": {
									"_lockDuration": "Duration for which stakes are locked",
									"_rewardRate": "Rate at which rewards are distributed",
									"_rewardToken": "Address of the token given as reward",
									"_stakingToken": "Address of the token to be staked"
								}
							},
							"claimReward(uint256)": {
								"details": "Allows a user to claim their rewards from a specific pool",
								"params": {
									"_pid": "Pool ID"
								}
							},
							"distributeGovernanceTokens(address,uint256)": {
								"details": "Allows the owner to distribute governance tokens",
								"params": {
									"_amount": "Amount of tokens to distribute",
									"_user": "Address of the user to receive tokens"
								}
							},
							"emergencyWithdraw(uint256)": {
								"details": "Allows a user to emergency withdraw their stake without caring about rewards",
								"params": {
									"_pid": "Pool ID"
								}
							},
							"initialize(address,address,uint256,uint256,uint256,uint256,uint256,uint256)": {
								"details": "Initializes the contract with initial values",
								"params": {
									"_baseRewardRate": "Base rate for reward calculation",
									"_governanceToken": "Address of the governance token",
									"_maxMultiplier": "Maximum multiplier for rewards",
									"_multiplierDuration": "Duration over which the multiplier increases",
									"_nftBoostRate": "Boost rate for holding NFTs",
									"_nftToken": "Address of the NFT token for boost mechanism",
									"_refereeBonus": "Bonus for being referred",
									"_referralBonus": "Bonus for referring new users"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"pause()": {
								"details": "Allows the owner to pause the contract"
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setLockDuration(uint256,uint256)": {
								"details": "Allows the owner to set the lock duration for a specific pool",
								"params": {
									"_lockDuration": "New lock duration",
									"_pid": "Pool ID"
								}
							},
							"setNftBoostRate(uint256)": {
								"details": "Allows the owner to set the NFT boost rate",
								"params": {
									"_nftBoostRate": "New NFT boost rate"
								}
							},
							"setReferrer(address)": {
								"details": "Allows a user to set their referrer",
								"params": {
									"_referrer": "Address of the referrer"
								}
							},
							"setRewardRate(uint256,uint256)": {
								"details": "Allows the owner to set the reward rate for a specific pool",
								"params": {
									"_pid": "Pool ID",
									"_rewardRate": "New reward rate"
								}
							},
							"stake(uint256,uint256)": {
								"details": "Allows a user to stake tokens in a specific pool",
								"params": {
									"_amount": "Amount of tokens to stake",
									"_pid": "Pool ID"
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"unpause()": {
								"details": "Allows the owner to unpause the contract"
							},
							"unstake(uint256,uint256)": {
								"details": "Allows a user to unstake tokens from a specific pool",
								"params": {
									"_amount": "Amount of tokens to unstake",
									"_pid": "Pool ID"
								}
							}
						},
						"title": "YieldFarm",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/YieldFarm.sol\":739:12457  contract YieldFarm is Initializable, ReentrancyGuardUpgradeable, OwnableUpgradeable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/YieldFarm.sol\":739:12457  contract YieldFarm is Initializable, ReentrancyGuardUpgradeable, OwnableUpgradeable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8456cb59\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xc20632ba\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xdfaae412\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xdfaae412\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xe0283faf\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xf96dae0a\n      eq\n      tag_31\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0xc20632ba\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xce7842f5\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xce98f049\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xd06fcba8\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x9e2c8a5b\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x9e2c8a5b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa18a7bfc\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xae169a50\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xafbf3440\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x8456cb59\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8ba796af\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0x3f4ba83a\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x53aaa63b\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x53aaa63b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x7b0472f0\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x3f4ba83a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x4a3b68cc\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5312ea8e\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x1526fe27\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x1526fe27\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x3462e0a8\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x381e75eb\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3b1e3eb8\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x0187aea0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x085cde2d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x126796dd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/YieldFarm.sol\":2302:2330  uint256 public maxMultiplier */\n    tag_3:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/YieldFarm.sol\":2374:2407  uint256 public multiplierDuration */\n    tag_4:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/YieldFarm.sol\":9557:9698  function setLockDuration(uint256 _pid, uint256 _lockDuration) external onlyOwner {... */\n    tag_5:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      stop\n        /* \"contracts/YieldFarm.sol\":1813:1839  PoolInfo[] public poolInfo */\n    tag_6:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_54\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/YieldFarm.sol\":9255:9388  function setRewardRate(uint256 _pid, uint256 _rewardRate) external onlyOwner {... */\n    tag_7:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      stop\n        /* \"contracts/YieldFarm.sol\":1885:1952  mapping(uint256 => mapping(address => StakeInfo)) public poolStakes */\n    tag_8:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_63\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/YieldFarm.sol\":9822:9934  function setNftBoostRate(uint256 _nftBoostRate) external onlyOwner {... */\n    tag_9:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n    tag_65:\n      stop\n        /* \"contracts/YieldFarm.sol\":10490:10559  function unpause() external onlyOwner {... */\n    tag_10:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      stop\n        /* \"contracts/YieldFarm.sol\":2011:2055  mapping(address => address) public referrers */\n    tag_11:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/YieldFarm.sol\":8066:8575  function emergencyWithdraw(uint256 _pid) external nonReentrant {... */\n    tag_12:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n    tag_76:\n      stop\n        /* \"contracts/YieldFarm.sol\":2117:2167  mapping(address => uint256) public referralRewards */\n    tag_13:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/YieldFarm.sol\":2668:2686  bool public paused */\n    tag_14:\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      stop\n        /* \"contracts/YieldFarm.sol\":6046:6662  function stake(uint256 _pid, uint256 _amount) external nonReentrant whenNotPaused {... */\n    tag_16:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      stop\n        /* \"contracts/YieldFarm.sol\":10349:10415  function pause() external onlyOwner {... */\n    tag_17:\n      tag_92\n      tag_93\n      jump\t// in\n    tag_92:\n      stop\n        /* \"contracts/YieldFarm.sol\":4231:4955  function initialize(... */\n    tag_18:\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      tag_97\n      jump\t// in\n    tag_94:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_19:\n      tag_98\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/YieldFarm.sol\":6826:7435  function unstake(uint256 _pid, uint256 _amount) external nonReentrant {... */\n    tag_20:\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n    tag_101:\n      stop\n        /* \"contracts/YieldFarm.sol\":8693:9092  function setReferrer(address _referrer) external {... */\n    tag_21:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n    tag_104:\n      stop\n        /* \"contracts/YieldFarm.sol\":7554:7928  function claimReward(uint256 _pid) external nonReentrant {... */\n    tag_22:\n      tag_107\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n    tag_107:\n      stop\n        /* \"contracts/YieldFarm.sol\":2228:2257  uint256 public baseRewardRate */\n    tag_23:\n      tag_110\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/YieldFarm.sol\":5268:5888  function addPool(... */\n    tag_24:\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      tag_116\n      jump\t// in\n    tag_113:\n      stop\n        /* \"contracts/YieldFarm.sol\":2531:2559  uint256 public referralBonus */\n    tag_25:\n      tag_117\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      tag_119\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/YieldFarm.sol\":2602:2629  uint256 public refereeBonus */\n    tag_26:\n      tag_120\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      tag_122\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/YieldFarm.sol\":2760:2794  IERC721Upgradeable public nftToken */\n    tag_27:\n      tag_123\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      tag_125\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/YieldFarm.sol\":10128:10276  function distributeGovernanceTokens(address _user, uint256 _amount) external onlyOwner {... */\n    tag_28:\n      tag_127\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_128\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      tag_130\n      jump\t// in\n    tag_127:\n      stop\n        /* \"contracts/YieldFarm.sol\":2462:2489  uint256 public nftBoostRate */\n    tag_29:\n      tag_131\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      tag_133\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_30:\n      tag_134\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_135\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_135:\n      tag_136\n      jump\t// in\n    tag_134:\n      stop\n        /* \"contracts/YieldFarm.sol\":2834:2874  IERC20Upgradeable public governanceToken */\n    tag_31:\n      tag_137\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      tag_139\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/YieldFarm.sol\":2302:2330  uint256 public maxMultiplier */\n    tag_40:\n      sload(0x37)\n      dup2\n      jump\t// out\n        /* \"contracts/YieldFarm.sol\":2374:2407  uint256 public multiplierDuration */\n    tag_44:\n      sload(0x38)\n      dup2\n      jump\t// out\n        /* \"contracts/YieldFarm.sol\":9557:9698  function setLockDuration(uint256 _pid, uint256 _lockDuration) external onlyOwner {... */\n    tag_49:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_142\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_143\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_142:\n        /* \"contracts/YieldFarm.sol\":9678:9691  _lockDuration */\n      dup1\n        /* \"contracts/YieldFarm.sol\":9648:9656  poolInfo */\n      0x32\n        /* \"contracts/YieldFarm.sol\":9657:9661  _pid */\n      dup4\n        /* \"contracts/YieldFarm.sol\":9648:9662  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_145\n      jumpi\n      tag_146\n      tag_147\n      jump\t// in\n    tag_146:\n    tag_145:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n        /* \"contracts/YieldFarm.sol\":9648:9675  poolInfo[_pid].lockDuration */\n      0x03\n      add\n        /* \"contracts/YieldFarm.sol\":9648:9691  poolInfo[_pid].lockDuration = _lockDuration */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/YieldFarm.sol\":9557:9698  function setLockDuration(uint256 _pid, uint256 _lockDuration) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/YieldFarm.sol\":1813:1839  PoolInfo[] public poolInfo */\n    tag_53:\n      0x32\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_149\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_149:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      dup1\n      0x06\n      add\n      sload\n      swap1\n      pop\n      dup8\n      jump\t// out\n        /* \"contracts/YieldFarm.sol\":9255:9388  function setRewardRate(uint256 _pid, uint256 _rewardRate) external onlyOwner {... */\n    tag_58:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_152\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_143\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_152:\n        /* \"contracts/YieldFarm.sol\":9370:9381  _rewardRate */\n      dup1\n        /* \"contracts/YieldFarm.sol\":9342:9350  poolInfo */\n      0x32\n        /* \"contracts/YieldFarm.sol\":9351:9355  _pid */\n      dup4\n        /* \"contracts/YieldFarm.sol\":9342:9356  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_154\n      jumpi\n      tag_155\n      tag_147\n      jump\t// in\n    tag_155:\n    tag_154:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n        /* \"contracts/YieldFarm.sol\":9342:9367  poolInfo[_pid].rewardRate */\n      0x02\n      add\n        /* \"contracts/YieldFarm.sol\":9342:9381  poolInfo[_pid].rewardRate = _rewardRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/YieldFarm.sol\":9255:9388  function setRewardRate(uint256 _pid, uint256 _rewardRate) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/YieldFarm.sol\":1885:1952  mapping(uint256 => mapping(address => StakeInfo)) public poolStakes */\n    tag_62:\n      mstore(0x20, 0x33)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"contracts/YieldFarm.sol\":9822:9934  function setNftBoostRate(uint256 _nftBoostRate) external onlyOwner {... */\n    tag_67:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_158\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_143\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_158:\n        /* \"contracts/YieldFarm.sol\":9914:9927  _nftBoostRate */\n      dup1\n        /* \"contracts/YieldFarm.sol\":9899:9911  nftBoostRate */\n      0x39\n        /* \"contracts/YieldFarm.sol\":9899:9927  nftBoostRate = _nftBoostRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/YieldFarm.sol\":9822:9934  function setNftBoostRate(uint256 _nftBoostRate) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/YieldFarm.sol\":10490:10559  function unpause() external onlyOwner {... */\n    tag_69:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_161\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_143\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_161:\n        /* \"contracts/YieldFarm.sol\":10547:10552  false */\n      0x00\n        /* \"contracts/YieldFarm.sol\":10538:10544  paused */\n      0x3c\n      0x00\n        /* \"contracts/YieldFarm.sol\":10538:10552  paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/YieldFarm.sol\":10490:10559  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/YieldFarm.sol\":2011:2055  mapping(address => address) public referrers */\n    tag_73:\n      mstore(0x20, 0x34)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/YieldFarm.sol\":8066:8575  function emergencyWithdraw(uint256 _pid) external nonReentrant {... */\n    tag_78:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2547  _nonReentrantBefore() */\n      tag_164\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2545  _nonReentrantBefore */\n      tag_165\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2547  _nonReentrantBefore() */\n      jump\t// in\n    tag_164:\n        /* \"contracts/YieldFarm.sol\":8139:8160  PoolInfo storage pool */\n      0x00\n        /* \"contracts/YieldFarm.sol\":8163:8171  poolInfo */\n      0x32\n        /* \"contracts/YieldFarm.sol\":8172:8176  _pid */\n      dup3\n        /* \"contracts/YieldFarm.sol\":8163:8177  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_167\n      jumpi\n      tag_168\n      tag_147\n      jump\t// in\n    tag_168:\n    tag_167:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n        /* \"contracts/YieldFarm.sol\":8139:8177  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/YieldFarm.sol\":8187:8214  StakeInfo storage userStake */\n      0x00\n        /* \"contracts/YieldFarm.sol\":8217:8227  poolStakes */\n      0x33\n        /* \"contracts/YieldFarm.sol\":8217:8233  poolStakes[_pid] */\n      0x00\n        /* \"contracts/YieldFarm.sol\":8228:8232  _pid */\n      dup5\n        /* \"contracts/YieldFarm.sol\":8217:8233  poolStakes[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/YieldFarm.sol\":8217:8245  poolStakes[_pid][msg.sender] */\n      0x00\n        /* \"contracts/YieldFarm.sol\":8234:8244  msg.sender */\n      caller\n        /* \"contracts/YieldFarm.sol\":8217:8245  poolStakes[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/YieldFarm.sol\":8187:8245  StakeInfo storage userStake = poolStakes[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/YieldFarm.sol\":8282:8283  0 */\n      0x00\n        /* \"contracts/YieldFarm.sol\":8263:8272  userStake */\n      dup2\n        /* \"contracts/YieldFarm.sol\":8263:8279  userStake.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/YieldFarm.sol\":8263:8283  userStake.amount > 0 */\n      gt\n        /* \"contracts/YieldFarm.sol\":8255:8304  require(userStake.amount > 0, \"No staked amount\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_170:\n        /* \"contracts/YieldFarm.sol\":8315:8329  uint256 amount */\n      0x00\n        /* \"contracts/YieldFarm.sol\":8332:8341  userStake */\n      dup2\n        /* \"contracts/YieldFarm.sol\":8332:8348  userStake.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/YieldFarm.sol\":8315:8348  uint256 amount = userStake.amount */\n      swap1\n      pop\n        /* \"contracts/YieldFarm.sol\":8377:8378  0 */\n      0x00\n        /* \"contracts/YieldFarm.sol\":8358:8367  userStake */\n      dup3\n        /* \"contracts/YieldFarm.sol\":8358:8374  userStake.amount */\n      0x00\n      add\n        /* \"contracts/YieldFarm.sol\":8358:8378  userStake.amount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/YieldFarm.sol\":8411:8412  0 */\n      0x00\n        /* \"contracts/YieldFarm.sol\":8388:8397  userStake */\n      dup3\n        /* \"contracts/YieldFarm.sol\":8388:8408  userStake.rewardDebt */\n      0x01\n      add\n        /* \"contracts/YieldFarm.sol\":8388:8412  userStake.rewardDebt = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/YieldFarm.sol\":8443:8449  amount */\n      dup1\n        /* \"contracts/YieldFarm.sol\":8423:8427  pool */\n      dup4\n        /* \"contracts/YieldFarm.sol\":8423:8439  pool.totalStaked */\n      0x04\n      add\n      0x00\n        /* \"contracts/YieldFarm.sol\":8423:8449  pool.totalStaked -= amount */\n      dup3\n      dup3\n      sload\n      tag_173\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/YieldFarm.sol\":8459:8509  pool.stakingToken.safeTransfer(msg.sender, amount) */\n      tag_175\n        /* \"contracts/YieldFarm.sol\":8490:8500  msg.sender */\n      caller\n        /* \"contracts/YieldFarm.sol\":8502:8508  amount */\n      dup3\n        /* \"contracts/YieldFarm.sol\":8459:8463  pool */\n      dup6\n        /* \"contracts/YieldFarm.sol\":8459:8476  pool.stakingToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/YieldFarm.sol\":8459:8489  pool.stakingToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_176\n      swap1\n        /* \"contracts/YieldFarm.sol\":8459:8509  pool.stakingToken.safeTransfer(msg.sender, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_175:\n        /* \"contracts/YieldFarm.sol\":8555:8559  _pid */\n      dup4\n        /* \"contracts/YieldFarm.sol\":8543:8553  msg.sender */\n      caller\n        /* \"contracts/YieldFarm.sol\":8525:8568  EmergencyWithdraw(msg.sender, _pid, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595\n        /* \"contracts/YieldFarm.sol\":8561:8567  amount */\n      dup4\n        /* \"contracts/YieldFarm.sol\":8525:8568  EmergencyWithdraw(msg.sender, _pid, amount) */\n      mload(0x40)\n      tag_177\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/YieldFarm.sol\":8129:8575  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2588  _nonReentrantAfter() */\n      tag_178\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2586  _nonReentrantAfter */\n      tag_179\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2588  _nonReentrantAfter() */\n      jump\t// in\n    tag_178:\n        /* \"contracts/YieldFarm.sol\":8066:8575  function emergencyWithdraw(uint256 _pid) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"contracts/YieldFarm.sol\":2117:2167  mapping(address => uint256) public referralRewards */\n    tag_81:\n      mstore(0x20, 0x35)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/YieldFarm.sol\":2668:2686  bool public paused */\n    tag_84:\n      0x3c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_88:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_181\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_143\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_183\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_184\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/YieldFarm.sol\":6046:6662  function stake(uint256 _pid, uint256 _amount) external nonReentrant whenNotPaused {... */\n    tag_91:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2547  _nonReentrantBefore() */\n      tag_186\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2545  _nonReentrantBefore */\n      tag_165\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2547  _nonReentrantBefore() */\n      jump\t// in\n    tag_186:\n        /* \"contracts/YieldFarm.sol\":3603:3609  paused */\n      0x3c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/YieldFarm.sol\":3602:3609  !paused */\n      iszero\n        /* \"contracts/YieldFarm.sol\":3594:3632  require(!paused, \"Contract is paused\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_188:\n        /* \"contracts/YieldFarm.sol\":6156:6157  0 */\n      0x00\n        /* \"contracts/YieldFarm.sol\":6146:6153  _amount */\n      dup2\n        /* \"contracts/YieldFarm.sol\":6146:6157  _amount > 0 */\n      gt\n        /* \"contracts/YieldFarm.sol\":6138:6176  require(_amount > 0, \"Cannot stake 0\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_192:\n        /* \"contracts/YieldFarm.sol\":6187:6208  PoolInfo storage pool */\n      0x00\n        /* \"contracts/YieldFarm.sol\":6211:6219  poolInfo */\n      0x32\n        /* \"contracts/YieldFarm.sol\":6220:6224  _pid */\n      dup4\n        /* \"contracts/YieldFarm.sol\":6211:6225  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_195\n      jumpi\n      tag_196\n      tag_147\n      jump\t// in\n    tag_196:\n    tag_195:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n        /* \"contracts/YieldFarm.sol\":6187:6225  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/YieldFarm.sol\":6235:6262  StakeInfo storage userStake */\n      0x00\n        /* \"contracts/YieldFarm.sol\":6265:6275  poolStakes */\n      0x33\n        /* \"contracts/YieldFarm.sol\":6265:6281  poolStakes[_pid] */\n      0x00\n        /* \"contracts/YieldFarm.sol\":6276:6280  _pid */\n      dup6\n        /* \"contracts/YieldFarm.sol\":6265:6281  poolStakes[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/YieldFarm.sol\":6265:6293  poolStakes[_pid][msg.sender] */\n      0x00\n        /* \"contracts/YieldFarm.sol\":6282:6292  msg.sender */\n      caller\n        /* \"contracts/YieldFarm.sol\":6265:6293  poolStakes[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/YieldFarm.sol\":6235:6293  StakeInfo storage userStake = poolStakes[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/YieldFarm.sol\":6303:6320  _updatePool(_pid) */\n      tag_198\n        /* \"contracts/YieldFarm.sol\":6315:6319  _pid */\n      dup5\n        /* \"contracts/YieldFarm.sol\":6303:6314  _updatePool */\n      tag_199\n        /* \"contracts/YieldFarm.sol\":6303:6320  _updatePool(_pid) */\n      jump\t// in\n    tag_198:\n        /* \"contracts/YieldFarm.sol\":6330:6362  _updateRewards(_pid, msg.sender) */\n      tag_200\n        /* \"contracts/YieldFarm.sol\":6345:6349  _pid */\n      dup5\n        /* \"contracts/YieldFarm.sol\":6351:6361  msg.sender */\n      caller\n        /* \"contracts/YieldFarm.sol\":6330:6344  _updateRewards */\n      tag_201\n        /* \"contracts/YieldFarm.sol\":6330:6362  _updateRewards(_pid, msg.sender) */\n      jump\t// in\n    tag_200:\n        /* \"contracts/YieldFarm.sol\":6373:6443  pool.stakingToken.safeTransferFrom(msg.sender, address(this), _amount) */\n      tag_202\n        /* \"contracts/YieldFarm.sol\":6408:6418  msg.sender */\n      caller\n        /* \"contracts/YieldFarm.sol\":6428:6432  this */\n      address\n        /* \"contracts/YieldFarm.sol\":6435:6442  _amount */\n      dup6\n        /* \"contracts/YieldFarm.sol\":6373:6377  pool */\n      dup6\n        /* \"contracts/YieldFarm.sol\":6373:6390  pool.stakingToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/YieldFarm.sol\":6373:6407  pool.stakingToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_203\n      swap1\n        /* \"contracts/YieldFarm.sol\":6373:6443  pool.stakingToken.safeTransferFrom(msg.sender, address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_202:\n        /* \"contracts/YieldFarm.sol\":6474:6481  _amount */\n      dup3\n        /* \"contracts/YieldFarm.sol\":6454:6463  userStake */\n      dup2\n        /* \"contracts/YieldFarm.sol\":6454:6470  userStake.amount */\n      0x00\n      add\n      0x00\n        /* \"contracts/YieldFarm.sol\":6454:6481  userStake.amount += _amount */\n      dup3\n      dup3\n      sload\n      tag_204\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/YieldFarm.sol\":6531:6535  pool */\n      dup2\n        /* \"contracts/YieldFarm.sol\":6531:6548  pool.lockDuration */\n      0x03\n      add\n      sload\n        /* \"contracts/YieldFarm.sol\":6513:6528  block.timestamp */\n      timestamp\n        /* \"contracts/YieldFarm.sol\":6513:6548  block.timestamp + pool.lockDuration */\n      tag_206\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_206:\n        /* \"contracts/YieldFarm.sol\":6491:6500  userStake */\n      dup2\n        /* \"contracts/YieldFarm.sol\":6491:6510  userStake.lockUntil */\n      0x02\n      add\n        /* \"contracts/YieldFarm.sol\":6491:6548  userStake.lockUntil = block.timestamp + pool.lockDuration */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/YieldFarm.sol\":6578:6585  _amount */\n      dup3\n        /* \"contracts/YieldFarm.sol\":6558:6562  pool */\n      dup3\n        /* \"contracts/YieldFarm.sol\":6558:6574  pool.totalStaked */\n      0x04\n      add\n      0x00\n        /* \"contracts/YieldFarm.sol\":6558:6585  pool.totalStaked += _amount */\n      dup3\n      dup3\n      sload\n      tag_207\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_207:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/YieldFarm.sol\":6620:6624  _pid */\n      dup4\n        /* \"contracts/YieldFarm.sol\":6608:6618  msg.sender */\n      caller\n        /* \"contracts/YieldFarm.sol\":6601:6655  Staked(msg.sender, _pid, _amount, userStake.lockUntil) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed\n        /* \"contracts/YieldFarm.sol\":6626:6633  _amount */\n      dup6\n        /* \"contracts/YieldFarm.sol\":6635:6644  userStake */\n      dup5\n        /* \"contracts/YieldFarm.sol\":6635:6654  userStake.lockUntil */\n      0x02\n      add\n      sload\n        /* \"contracts/YieldFarm.sol\":6601:6655  Staked(msg.sender, _pid, _amount, userStake.lockUntil) */\n      mload(0x40)\n      tag_208\n      swap3\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/YieldFarm.sol\":6128:6662  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2588  _nonReentrantAfter() */\n      tag_210\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2586  _nonReentrantAfter */\n      tag_179\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2588  _nonReentrantAfter() */\n      jump\t// in\n    tag_210:\n        /* \"contracts/YieldFarm.sol\":6046:6662  function stake(uint256 _pid, uint256 _amount) external nonReentrant whenNotPaused {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/YieldFarm.sol\":10349:10415  function pause() external onlyOwner {... */\n    tag_93:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_212\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_143\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_212:\n        /* \"contracts/YieldFarm.sol\":10404:10408  true */\n      0x01\n        /* \"contracts/YieldFarm.sol\":10395:10401  paused */\n      0x3c\n      0x00\n        /* \"contracts/YieldFarm.sol\":10395:10408  paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/YieldFarm.sol\":10349:10415  function pause() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/YieldFarm.sol\":4231:4955  function initialize(... */\n    tag_97:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_215\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_216\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4723  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4741:4742  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4737  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_217\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_217:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_218\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4839:4840  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_218:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_219\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_219:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4952  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4965  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4983:4997  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      iszero\n      tag_221\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5031:5035  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5014  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5028  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_221:\n        /* \"contracts/YieldFarm.sol\":4566:4592  __Ownable_init(msg.sender) */\n      tag_223\n        /* \"contracts/YieldFarm.sol\":4581:4591  msg.sender */\n      caller\n        /* \"contracts/YieldFarm.sol\":4566:4580  __Ownable_init */\n      tag_224\n        /* \"contracts/YieldFarm.sol\":4566:4592  __Ownable_init(msg.sender) */\n      jump\t// in\n    tag_223:\n        /* \"contracts/YieldFarm.sol\":4602:4626  __ReentrancyGuard_init() */\n      tag_225\n        /* \"contracts/YieldFarm.sol\":4602:4624  __ReentrancyGuard_init */\n      tag_226\n        /* \"contracts/YieldFarm.sol\":4602:4626  __ReentrancyGuard_init() */\n      jump\t// in\n    tag_225:\n        /* \"contracts/YieldFarm.sol\":4654:4670  _governanceToken */\n      dup13\n        /* \"contracts/YieldFarm.sol\":4636:4651  governanceToken */\n      0x3d\n      0x00\n        /* \"contracts/YieldFarm.sol\":4636:4670  governanceToken = _governanceToken */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/YieldFarm.sol\":4691:4700  _nftToken */\n      dup12\n        /* \"contracts/YieldFarm.sol\":4680:4688  nftToken */\n      0x3c\n      0x01\n        /* \"contracts/YieldFarm.sol\":4680:4700  nftToken = _nftToken */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/YieldFarm.sol\":4727:4742  _baseRewardRate */\n      dup11\n        /* \"contracts/YieldFarm.sol\":4710:4724  baseRewardRate */\n      0x36\n        /* \"contracts/YieldFarm.sol\":4710:4742  baseRewardRate = _baseRewardRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/YieldFarm.sol\":4768:4782  _maxMultiplier */\n      dup10\n        /* \"contracts/YieldFarm.sol\":4752:4765  maxMultiplier */\n      0x37\n        /* \"contracts/YieldFarm.sol\":4752:4782  maxMultiplier = _maxMultiplier */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/YieldFarm.sol\":4813:4832  _multiplierDuration */\n      dup9\n        /* \"contracts/YieldFarm.sol\":4792:4810  multiplierDuration */\n      0x38\n        /* \"contracts/YieldFarm.sol\":4792:4832  multiplierDuration = _multiplierDuration */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/YieldFarm.sol\":4857:4870  _nftBoostRate */\n      dup8\n        /* \"contracts/YieldFarm.sol\":4842:4854  nftBoostRate */\n      0x39\n        /* \"contracts/YieldFarm.sol\":4842:4870  nftBoostRate = _nftBoostRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/YieldFarm.sol\":4896:4910  _referralBonus */\n      dup7\n        /* \"contracts/YieldFarm.sol\":4880:4893  referralBonus */\n      0x3a\n        /* \"contracts/YieldFarm.sol\":4880:4910  referralBonus = _referralBonus */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/YieldFarm.sol\":4935:4948  _refereeBonus */\n      dup6\n        /* \"contracts/YieldFarm.sol\":4920:4932  refereeBonus */\n      0x3b\n        /* \"contracts/YieldFarm.sol\":4920:4948  refereeBonus = _refereeBonus */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5070:5084  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      iszero\n      tag_227\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5118:5123  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5101  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5115  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5154:5155  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      tag_228\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_228:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_227:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/YieldFarm.sol\":4231:4955  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2487:2494  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2530  OwnableStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      tag_231\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2551  _getOwnableStorage */\n      tag_232\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      jump\t// in\n    tag_231:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2553  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2571  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2563:2578  return $._owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/YieldFarm.sol\":6826:7435  function unstake(uint256 _pid, uint256 _amount) external nonReentrant {... */\n    tag_103:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2547  _nonReentrantBefore() */\n      tag_234\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2545  _nonReentrantBefore */\n      tag_165\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2547  _nonReentrantBefore() */\n      jump\t// in\n    tag_234:\n        /* \"contracts/YieldFarm.sol\":6906:6927  PoolInfo storage pool */\n      0x00\n        /* \"contracts/YieldFarm.sol\":6930:6938  poolInfo */\n      0x32\n        /* \"contracts/YieldFarm.sol\":6939:6943  _pid */\n      dup4\n        /* \"contracts/YieldFarm.sol\":6930:6944  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_236\n      jumpi\n      tag_237\n      tag_147\n      jump\t// in\n    tag_237:\n    tag_236:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n        /* \"contracts/YieldFarm.sol\":6906:6944  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/YieldFarm.sol\":6954:6981  StakeInfo storage userStake */\n      0x00\n        /* \"contracts/YieldFarm.sol\":6984:6994  poolStakes */\n      0x33\n        /* \"contracts/YieldFarm.sol\":6984:7000  poolStakes[_pid] */\n      0x00\n        /* \"contracts/YieldFarm.sol\":6995:6999  _pid */\n      dup6\n        /* \"contracts/YieldFarm.sol\":6984:7000  poolStakes[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/YieldFarm.sol\":6984:7012  poolStakes[_pid][msg.sender] */\n      0x00\n        /* \"contracts/YieldFarm.sol\":7001:7011  msg.sender */\n      caller\n        /* \"contracts/YieldFarm.sol\":6984:7012  poolStakes[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/YieldFarm.sol\":6954:7012  StakeInfo storage userStake = poolStakes[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/YieldFarm.sol\":7050:7057  _amount */\n      dup3\n        /* \"contracts/YieldFarm.sol\":7030:7039  userStake */\n      dup2\n        /* \"contracts/YieldFarm.sol\":7030:7046  userStake.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/YieldFarm.sol\":7030:7057  userStake.amount >= _amount */\n      lt\n      iszero\n        /* \"contracts/YieldFarm.sol\":7022:7088  require(userStake.amount >= _amount, \"Insufficient staked amount\") */\n      tag_239\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_240\n      swap1\n      tag_241\n      jump\t// in\n    tag_240:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_239:\n        /* \"contracts/YieldFarm.sol\":7125:7134  userStake */\n      dup1\n        /* \"contracts/YieldFarm.sol\":7125:7144  userStake.lockUntil */\n      0x02\n      add\n      sload\n        /* \"contracts/YieldFarm.sol\":7106:7121  block.timestamp */\n      timestamp\n        /* \"contracts/YieldFarm.sol\":7106:7144  block.timestamp >= userStake.lockUntil */\n      lt\n      iszero\n        /* \"contracts/YieldFarm.sol\":7098:7170  require(block.timestamp >= userStake.lockUntil, \"Stake is still locked\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_243\n      swap1\n      tag_244\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_242:\n        /* \"contracts/YieldFarm.sol\":7181:7198  _updatePool(_pid) */\n      tag_245\n        /* \"contracts/YieldFarm.sol\":7193:7197  _pid */\n      dup5\n        /* \"contracts/YieldFarm.sol\":7181:7192  _updatePool */\n      tag_199\n        /* \"contracts/YieldFarm.sol\":7181:7198  _updatePool(_pid) */\n      jump\t// in\n    tag_245:\n        /* \"contracts/YieldFarm.sol\":7208:7240  _updateRewards(_pid, msg.sender) */\n      tag_246\n        /* \"contracts/YieldFarm.sol\":7223:7227  _pid */\n      dup5\n        /* \"contracts/YieldFarm.sol\":7229:7239  msg.sender */\n      caller\n        /* \"contracts/YieldFarm.sol\":7208:7222  _updateRewards */\n      tag_201\n        /* \"contracts/YieldFarm.sol\":7208:7240  _updateRewards(_pid, msg.sender) */\n      jump\t// in\n    tag_246:\n        /* \"contracts/YieldFarm.sol\":7271:7278  _amount */\n      dup3\n        /* \"contracts/YieldFarm.sol\":7251:7260  userStake */\n      dup2\n        /* \"contracts/YieldFarm.sol\":7251:7267  userStake.amount */\n      0x00\n      add\n      0x00\n        /* \"contracts/YieldFarm.sol\":7251:7278  userStake.amount -= _amount */\n      dup3\n      dup3\n      sload\n      tag_247\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_247:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/YieldFarm.sol\":7308:7315  _amount */\n      dup3\n        /* \"contracts/YieldFarm.sol\":7288:7292  pool */\n      dup3\n        /* \"contracts/YieldFarm.sol\":7288:7304  pool.totalStaked */\n      0x04\n      add\n      0x00\n        /* \"contracts/YieldFarm.sol\":7288:7315  pool.totalStaked -= _amount */\n      dup3\n      dup3\n      sload\n      tag_248\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_248:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/YieldFarm.sol\":7326:7377  pool.stakingToken.safeTransfer(msg.sender, _amount) */\n      tag_249\n        /* \"contracts/YieldFarm.sol\":7357:7367  msg.sender */\n      caller\n        /* \"contracts/YieldFarm.sol\":7369:7376  _amount */\n      dup5\n        /* \"contracts/YieldFarm.sol\":7326:7330  pool */\n      dup5\n        /* \"contracts/YieldFarm.sol\":7326:7343  pool.stakingToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/YieldFarm.sol\":7326:7356  pool.stakingToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_176\n      swap1\n        /* \"contracts/YieldFarm.sol\":7326:7377  pool.stakingToken.safeTransfer(msg.sender, _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_249:\n        /* \"contracts/YieldFarm.sol\":7414:7418  _pid */\n      dup4\n        /* \"contracts/YieldFarm.sol\":7402:7412  msg.sender */\n      caller\n        /* \"contracts/YieldFarm.sol\":7393:7428  Unstaked(msg.sender, _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e\n        /* \"contracts/YieldFarm.sol\":7420:7427  _amount */\n      dup6\n        /* \"contracts/YieldFarm.sol\":7393:7428  Unstaked(msg.sender, _pid, _amount) */\n      mload(0x40)\n      tag_250\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/YieldFarm.sol\":6896:7435  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2588  _nonReentrantAfter() */\n      tag_251\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2586  _nonReentrantAfter */\n      tag_179\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2588  _nonReentrantAfter() */\n      jump\t// in\n    tag_251:\n        /* \"contracts/YieldFarm.sol\":6826:7435  function unstake(uint256 _pid, uint256 _amount) external nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/YieldFarm.sol\":8693:9092  function setReferrer(address _referrer) external {... */\n    tag_106:\n        /* \"contracts/YieldFarm.sol\":8793:8794  0 */\n      0x00\n        /* \"contracts/YieldFarm.sol\":8760:8795  referrers[msg.sender] == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/YieldFarm.sol\":8760:8769  referrers */\n      0x34\n        /* \"contracts/YieldFarm.sol\":8760:8781  referrers[msg.sender] */\n      0x00\n        /* \"contracts/YieldFarm.sol\":8770:8780  msg.sender */\n      caller\n        /* \"contracts/YieldFarm.sol\":8760:8781  referrers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/YieldFarm.sol\":8760:8795  referrers[msg.sender] == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/YieldFarm.sol\":8752:8820  require(referrers[msg.sender] == address(0), \"Referrer already set\") */\n      tag_253\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_254\n      swap1\n      tag_255\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_253:\n        /* \"contracts/YieldFarm.sol\":8851:8861  msg.sender */\n      caller\n        /* \"contracts/YieldFarm.sol\":8838:8861  _referrer != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/YieldFarm.sol\":8838:8847  _referrer */\n      dup2\n        /* \"contracts/YieldFarm.sol\":8838:8861  _referrer != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/YieldFarm.sol\":8830:8887  require(_referrer != msg.sender, \"Cannot refer yourself\") */\n      tag_256\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_257\n      swap1\n      tag_258\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_256:\n        /* \"contracts/YieldFarm.sol\":8921:8930  _referrer */\n      dup1\n        /* \"contracts/YieldFarm.sol\":8897:8906  referrers */\n      0x34\n        /* \"contracts/YieldFarm.sol\":8897:8918  referrers[msg.sender] */\n      0x00\n        /* \"contracts/YieldFarm.sol\":8907:8917  msg.sender */\n      caller\n        /* \"contracts/YieldFarm.sol\":8897:8918  referrers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/YieldFarm.sol\":8897:8930  referrers[msg.sender] = _referrer */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/YieldFarm.sol\":8970:8983  referralBonus */\n      sload(0x3a)\n        /* \"contracts/YieldFarm.sol\":8940:8955  referralRewards */\n      0x35\n        /* \"contracts/YieldFarm.sol\":8940:8966  referralRewards[_referrer] */\n      0x00\n        /* \"contracts/YieldFarm.sol\":8956:8965  _referrer */\n      dup4\n        /* \"contracts/YieldFarm.sol\":8940:8966  referralRewards[_referrer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/YieldFarm.sol\":8940:8983  referralRewards[_referrer] += referralBonus */\n      dup3\n      dup3\n      sload\n      tag_259\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_259:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/YieldFarm.sol\":9024:9036  refereeBonus */\n      sload(0x3b)\n        /* \"contracts/YieldFarm.sol\":8993:9008  referralRewards */\n      0x35\n        /* \"contracts/YieldFarm.sol\":8993:9020  referralRewards[msg.sender] */\n      0x00\n        /* \"contracts/YieldFarm.sol\":9009:9019  msg.sender */\n      caller\n        /* \"contracts/YieldFarm.sol\":8993:9020  referralRewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/YieldFarm.sol\":8993:9036  referralRewards[msg.sender] += refereeBonus */\n      dup3\n      dup3\n      sload\n      tag_260\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_260:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/YieldFarm.sol\":9075:9084  _referrer */\n      dup1\n        /* \"contracts/YieldFarm.sol\":9051:9085  ReferrerSet(msg.sender, _referrer) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/YieldFarm.sol\":9063:9073  msg.sender */\n      caller\n        /* \"contracts/YieldFarm.sol\":9051:9085  ReferrerSet(msg.sender, _referrer) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5f7165288eef601591cf549e15ff19ef9060b7f71b9c115be946fa1fe7ebf68a\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/YieldFarm.sol\":8693:9092  function setReferrer(address _referrer) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/YieldFarm.sol\":7554:7928  function claimReward(uint256 _pid) external nonReentrant {... */\n    tag_109:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2547  _nonReentrantBefore() */\n      tag_262\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2545  _nonReentrantBefore */\n      tag_165\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2547  _nonReentrantBefore() */\n      jump\t// in\n    tag_262:\n        /* \"contracts/YieldFarm.sol\":7621:7638  _updatePool(_pid) */\n      tag_264\n        /* \"contracts/YieldFarm.sol\":7633:7637  _pid */\n      dup2\n        /* \"contracts/YieldFarm.sol\":7621:7632  _updatePool */\n      tag_199\n        /* \"contracts/YieldFarm.sol\":7621:7638  _updatePool(_pid) */\n      jump\t// in\n    tag_264:\n        /* \"contracts/YieldFarm.sol\":7648:7680  _updateRewards(_pid, msg.sender) */\n      tag_265\n        /* \"contracts/YieldFarm.sol\":7663:7667  _pid */\n      dup2\n        /* \"contracts/YieldFarm.sol\":7669:7679  msg.sender */\n      caller\n        /* \"contracts/YieldFarm.sol\":7648:7662  _updateRewards */\n      tag_201\n        /* \"contracts/YieldFarm.sol\":7648:7680  _updateRewards(_pid, msg.sender) */\n      jump\t// in\n    tag_265:\n        /* \"contracts/YieldFarm.sol\":7690:7704  uint256 reward */\n      0x00\n        /* \"contracts/YieldFarm.sol\":7707:7717  poolStakes */\n      0x33\n        /* \"contracts/YieldFarm.sol\":7707:7723  poolStakes[_pid] */\n      0x00\n        /* \"contracts/YieldFarm.sol\":7718:7722  _pid */\n      dup4\n        /* \"contracts/YieldFarm.sol\":7707:7723  poolStakes[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/YieldFarm.sol\":7707:7735  poolStakes[_pid][msg.sender] */\n      0x00\n        /* \"contracts/YieldFarm.sol\":7724:7734  msg.sender */\n      caller\n        /* \"contracts/YieldFarm.sol\":7707:7735  poolStakes[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/YieldFarm.sol\":7707:7746  poolStakes[_pid][msg.sender].rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/YieldFarm.sol\":7690:7746  uint256 reward = poolStakes[_pid][msg.sender].rewardDebt */\n      swap1\n      pop\n        /* \"contracts/YieldFarm.sol\":7798:7799  0 */\n      0x00\n        /* \"contracts/YieldFarm.sol\":7756:7766  poolStakes */\n      0x33\n        /* \"contracts/YieldFarm.sol\":7756:7772  poolStakes[_pid] */\n      0x00\n        /* \"contracts/YieldFarm.sol\":7767:7771  _pid */\n      dup5\n        /* \"contracts/YieldFarm.sol\":7756:7772  poolStakes[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/YieldFarm.sol\":7756:7784  poolStakes[_pid][msg.sender] */\n      0x00\n        /* \"contracts/YieldFarm.sol\":7773:7783  msg.sender */\n      caller\n        /* \"contracts/YieldFarm.sol\":7756:7784  poolStakes[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/YieldFarm.sol\":7756:7795  poolStakes[_pid][msg.sender].rewardDebt */\n      0x01\n      add\n        /* \"contracts/YieldFarm.sol\":7756:7799  poolStakes[_pid][msg.sender].rewardDebt = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/YieldFarm.sol\":7810:7869  poolInfo[_pid].rewardToken.safeTransfer(msg.sender, reward) */\n      tag_266\n        /* \"contracts/YieldFarm.sol\":7850:7860  msg.sender */\n      caller\n        /* \"contracts/YieldFarm.sol\":7862:7868  reward */\n      dup3\n        /* \"contracts/YieldFarm.sol\":7810:7818  poolInfo */\n      0x32\n        /* \"contracts/YieldFarm.sol\":7819:7823  _pid */\n      dup6\n        /* \"contracts/YieldFarm.sol\":7810:7824  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_267\n      jumpi\n      tag_268\n      tag_147\n      jump\t// in\n    tag_268:\n    tag_267:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n        /* \"contracts/YieldFarm.sol\":7810:7836  poolInfo[_pid].rewardToken */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/YieldFarm.sol\":7810:7849  poolInfo[_pid].rewardToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_176\n      swap1\n        /* \"contracts/YieldFarm.sol\":7810:7869  poolInfo[_pid].rewardToken.safeTransfer(msg.sender, reward) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_266:\n        /* \"contracts/YieldFarm.sol\":7908:7912  _pid */\n      dup2\n        /* \"contracts/YieldFarm.sol\":7896:7906  msg.sender */\n      caller\n        /* \"contracts/YieldFarm.sol\":7885:7921  RewardPaid(msg.sender, _pid, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd6f2c8500df5b44f11e9e48b91ff9f1b9d81bc496d55570c2b1b75bf65243f51\n        /* \"contracts/YieldFarm.sol\":7914:7920  reward */\n      dup4\n        /* \"contracts/YieldFarm.sol\":7885:7921  RewardPaid(msg.sender, _pid, reward) */\n      mload(0x40)\n      tag_270\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_270:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/YieldFarm.sol\":7611:7928  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2588  _nonReentrantAfter() */\n      tag_271\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2586  _nonReentrantAfter */\n      tag_179\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2588  _nonReentrantAfter() */\n      jump\t// in\n    tag_271:\n        /* \"contracts/YieldFarm.sol\":7554:7928  function claimReward(uint256 _pid) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"contracts/YieldFarm.sol\":2228:2257  uint256 public baseRewardRate */\n    tag_111:\n      sload(0x36)\n      dup2\n      jump\t// out\n        /* \"contracts/YieldFarm.sol\":5268:5888  function addPool(... */\n    tag_116:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_273\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_143\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_273:\n        /* \"contracts/YieldFarm.sol\":5461:5469  poolInfo */\n      0x32\n        /* \"contracts/YieldFarm.sol\":5475:5760  PoolInfo({... */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/YieldFarm.sol\":5512:5525  _stakingToken */\n      dup7\n        /* \"contracts/YieldFarm.sol\":5475:5760  PoolInfo({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/YieldFarm.sol\":5552:5564  _rewardToken */\n      dup6\n        /* \"contracts/YieldFarm.sol\":5475:5760  PoolInfo({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/YieldFarm.sol\":5590:5601  _rewardRate */\n      dup5\n        /* \"contracts/YieldFarm.sol\":5475:5760  PoolInfo({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/YieldFarm.sol\":5629:5642  _lockDuration */\n      dup4\n        /* \"contracts/YieldFarm.sol\":5475:5760  PoolInfo({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/YieldFarm.sol\":5669:5670  0 */\n      0x00\n        /* \"contracts/YieldFarm.sol\":5475:5760  PoolInfo({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/YieldFarm.sol\":5703:5704  0 */\n      0x00\n        /* \"contracts/YieldFarm.sol\":5475:5760  PoolInfo({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/YieldFarm.sol\":5734:5749  block.timestamp */\n      timestamp\n        /* \"contracts/YieldFarm.sol\":5475:5760  PoolInfo({... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/YieldFarm.sol\":5461:5761  poolInfo.push(PoolInfo({... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      sstore\n      0xc0\n      dup3\n      add\n      mload\n      dup2\n      0x06\n      add\n      sstore\n      pop\n      pop\n        /* \"contracts/YieldFarm.sol\":5804:5805  1 */\n      0x01\n        /* \"contracts/YieldFarm.sol\":5786:5794  poolInfo */\n      0x32\n        /* \"contracts/YieldFarm.sol\":5786:5801  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/YieldFarm.sol\":5786:5805  poolInfo.length - 1 */\n      tag_276\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_276:\n        /* \"contracts/YieldFarm.sol\":5776:5881  PoolAdded(poolInfo.length - 1, address(_stakingToken), address(_rewardToken), _rewardRate, _lockDuration) */\n      0xe1111ad6e2ccaf57d3d9aa458493b64bcf6a66c2028304b95772fe72e1fc3612\n        /* \"contracts/YieldFarm.sol\":5815:5828  _stakingToken */\n      dup6\n        /* \"contracts/YieldFarm.sol\":5839:5851  _rewardToken */\n      dup6\n        /* \"contracts/YieldFarm.sol\":5854:5865  _rewardRate */\n      dup6\n        /* \"contracts/YieldFarm.sol\":5867:5880  _lockDuration */\n      dup6\n        /* \"contracts/YieldFarm.sol\":5776:5881  PoolAdded(poolInfo.length - 1, address(_stakingToken), address(_rewardToken), _rewardRate, _lockDuration) */\n      mload(0x40)\n      tag_277\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_278\n      jump\t// in\n    tag_277:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/YieldFarm.sol\":5268:5888  function addPool(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/YieldFarm.sol\":2531:2559  uint256 public referralBonus */\n    tag_118:\n      sload(0x3a)\n      dup2\n      jump\t// out\n        /* \"contracts/YieldFarm.sol\":2602:2629  uint256 public refereeBonus */\n    tag_121:\n      sload(0x3b)\n      dup2\n      jump\t// out\n        /* \"contracts/YieldFarm.sol\":2760:2794  IERC721Upgradeable public nftToken */\n    tag_124:\n      0x3c\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/YieldFarm.sol\":10128:10276  function distributeGovernanceTokens(address _user, uint256 _amount) external onlyOwner {... */\n    tag_130:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_280\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_143\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_280:\n        /* \"contracts/YieldFarm.sol\":10225:10269  governanceToken.safeTransfer(_user, _amount) */\n      tag_282\n        /* \"contracts/YieldFarm.sol\":10254:10259  _user */\n      dup3\n        /* \"contracts/YieldFarm.sol\":10261:10268  _amount */\n      dup3\n        /* \"contracts/YieldFarm.sol\":10225:10240  governanceToken */\n      0x3d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/YieldFarm.sol\":10225:10253  governanceToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_176\n      swap1\n        /* \"contracts/YieldFarm.sol\":10225:10269  governanceToken.safeTransfer(_user, _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_282:\n        /* \"contracts/YieldFarm.sol\":10128:10276  function distributeGovernanceTokens(address _user, uint256 _amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/YieldFarm.sol\":2462:2489  uint256 public nftBoostRate */\n    tag_132:\n      sload(0x39)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_136:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_284\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_143\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_284:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3509:3510  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3497  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_286\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_287\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_287:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_288\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_184\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_288:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/YieldFarm.sol\":2834:2874  IERC20Upgradeable public governanceToken */\n    tag_138:\n      0x3d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_143:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      tag_290\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2738  _msgSender */\n      tag_291\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      jump\t// in\n    tag_290:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_292\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2722  owner */\n      tag_99\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      jump\t// in\n    tag_292:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_293\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      tag_294\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2800  _msgSender */\n      tag_291\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      jump\t// in\n    tag_294:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_295\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n    tag_293:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2601:2888  function _nonReentrantBefore() private {... */\n    tag_165:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1851:1852  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2733:2740  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2733:2752  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2725:2788  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_297\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_298\n      swap1\n      tag_299\n      jump\t// in\n    tag_298:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_297:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1851:1852  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2863:2870  _status */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2863:2881  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2601:2888  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":996:1182  function safeTransfer(IERC20Upgradeable token, address to, uint256 value) internal {... */\n    tag_176:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":1089:1175  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_301\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":1109:1114  token */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":1139:1162  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":1164:1166  to */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":1168:1173  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":1116:1174  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_302\n      swap3\n      swap2\n      swap1\n      tag_303\n      jump\t// in\n    tag_302:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":1089:1108  _callOptionalReturn */\n      tag_304\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":1089:1175  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_301:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":996:1182  function safeTransfer(IERC20Upgradeable token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2894:3103  function _nonReentrantAfter() private {... */\n    tag_179:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1808:1809  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":3074:3081  _status */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":3074:3096  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2894:3103  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_184:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      tag_307\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3892  _getOwnableStorage */\n      tag_232\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      jump\t// in\n    tag_307:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3894  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3920  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3924  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3931  address oldOwner = $._owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3952:3960  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3942  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3949  $._owner */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4006:4014  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3996:4004  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/YieldFarm.sol\":11106:11503  function _updatePool(uint256 _pid) internal {... */\n    tag_199:\n        /* \"contracts/YieldFarm.sol\":11160:11181  PoolInfo storage pool */\n      0x00\n        /* \"contracts/YieldFarm.sol\":11184:11192  poolInfo */\n      0x32\n        /* \"contracts/YieldFarm.sol\":11193:11197  _pid */\n      dup3\n        /* \"contracts/YieldFarm.sol\":11184:11198  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_309\n      jumpi\n      tag_310\n      tag_147\n      jump\t// in\n    tag_310:\n    tag_309:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n        /* \"contracts/YieldFarm.sol\":11160:11198  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/YieldFarm.sol\":11231:11232  0 */\n      0x00\n        /* \"contracts/YieldFarm.sol\":11212:11216  pool */\n      dup2\n        /* \"contracts/YieldFarm.sol\":11212:11228  pool.totalStaked */\n      0x04\n      add\n      sload\n        /* \"contracts/YieldFarm.sol\":11212:11232  pool.totalStaked > 0 */\n      gt\n        /* \"contracts/YieldFarm.sol\":11208:11450  if (pool.totalStaked > 0) {... */\n      iszero\n      tag_312\n      jumpi\n        /* \"contracts/YieldFarm.sol\":11248:11266  uint256 multiplier */\n      0x00\n        /* \"contracts/YieldFarm.sol\":11287:11291  pool */\n      dup2\n        /* \"contracts/YieldFarm.sol\":11287:11306  pool.lastRewardTime */\n      0x06\n      add\n      sload\n        /* \"contracts/YieldFarm.sol\":11269:11284  block.timestamp */\n      timestamp\n        /* \"contracts/YieldFarm.sol\":11269:11306  block.timestamp - pool.lastRewardTime */\n      tag_313\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_313:\n        /* \"contracts/YieldFarm.sol\":11248:11306  uint256 multiplier = block.timestamp - pool.lastRewardTime */\n      swap1\n      pop\n        /* \"contracts/YieldFarm.sol\":11320:11334  uint256 reward */\n      0x00\n        /* \"contracts/YieldFarm.sol\":11350:11354  pool */\n      dup3\n        /* \"contracts/YieldFarm.sol\":11350:11365  pool.rewardRate */\n      0x02\n      add\n      sload\n        /* \"contracts/YieldFarm.sol\":11337:11347  multiplier */\n      dup3\n        /* \"contracts/YieldFarm.sol\":11337:11365  multiplier * pool.rewardRate */\n      tag_314\n      swap2\n      swap1\n      tag_315\n      jump\t// in\n    tag_314:\n        /* \"contracts/YieldFarm.sol\":11320:11365  uint256 reward = multiplier * pool.rewardRate */\n      swap1\n      pop\n        /* \"contracts/YieldFarm.sol\":11423:11427  pool */\n      dup3\n        /* \"contracts/YieldFarm.sol\":11423:11439  pool.totalStaked */\n      0x04\n      add\n      sload\n        /* \"contracts/YieldFarm.sol\":11415:11419  1e12 */\n      0xe8d4a51000\n        /* \"contracts/YieldFarm.sol\":11406:11412  reward */\n      dup3\n        /* \"contracts/YieldFarm.sol\":11406:11419  reward * 1e12 */\n      tag_316\n      swap2\n      swap1\n      tag_315\n      jump\t// in\n    tag_316:\n        /* \"contracts/YieldFarm.sol\":11405:11439  (reward * 1e12) / pool.totalStaked */\n      tag_317\n      swap2\n      swap1\n      tag_318\n      jump\t// in\n    tag_317:\n        /* \"contracts/YieldFarm.sol\":11379:11383  pool */\n      dup4\n        /* \"contracts/YieldFarm.sol\":11379:11401  pool.accRewardPerShare */\n      0x05\n      add\n      0x00\n        /* \"contracts/YieldFarm.sol\":11379:11439  pool.accRewardPerShare += (reward * 1e12) / pool.totalStaked */\n      dup3\n      dup3\n      sload\n      tag_319\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_319:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/YieldFarm.sol\":11234:11450  {... */\n      pop\n      pop\n        /* \"contracts/YieldFarm.sol\":11208:11450  if (pool.totalStaked > 0) {... */\n    tag_312:\n        /* \"contracts/YieldFarm.sol\":11481:11496  block.timestamp */\n      timestamp\n        /* \"contracts/YieldFarm.sol\":11459:11463  pool */\n      dup2\n        /* \"contracts/YieldFarm.sol\":11459:11478  pool.lastRewardTime */\n      0x06\n      add\n        /* \"contracts/YieldFarm.sol\":11459:11496  pool.lastRewardTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/YieldFarm.sol\":11150:11503  {... */\n      pop\n        /* \"contracts/YieldFarm.sol\":11106:11503  function _updatePool(uint256 _pid) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/YieldFarm.sol\":11662:12455  function _updateRewards(uint256 _pid, address _user) internal {... */\n    tag_201:\n        /* \"contracts/YieldFarm.sol\":11734:11755  PoolInfo storage pool */\n      0x00\n        /* \"contracts/YieldFarm.sol\":11758:11766  poolInfo */\n      0x32\n        /* \"contracts/YieldFarm.sol\":11767:11771  _pid */\n      dup4\n        /* \"contracts/YieldFarm.sol\":11758:11772  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_321\n      jumpi\n      tag_322\n      tag_147\n      jump\t// in\n    tag_322:\n    tag_321:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n        /* \"contracts/YieldFarm.sol\":11734:11772  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/YieldFarm.sol\":11782:11809  StakeInfo storage userStake */\n      0x00\n        /* \"contracts/YieldFarm.sol\":11812:11822  poolStakes */\n      0x33\n        /* \"contracts/YieldFarm.sol\":11812:11828  poolStakes[_pid] */\n      0x00\n        /* \"contracts/YieldFarm.sol\":11823:11827  _pid */\n      dup6\n        /* \"contracts/YieldFarm.sol\":11812:11828  poolStakes[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/YieldFarm.sol\":11812:11835  poolStakes[_pid][_user] */\n      0x00\n        /* \"contracts/YieldFarm.sol\":11829:11834  _user */\n      dup5\n        /* \"contracts/YieldFarm.sol\":11812:11835  poolStakes[_pid][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/YieldFarm.sol\":11782:11835  StakeInfo storage userStake = poolStakes[_pid][_user] */\n      swap1\n      pop\n        /* \"contracts/YieldFarm.sol\":11868:11869  0 */\n      0x00\n        /* \"contracts/YieldFarm.sol\":11849:11858  userStake */\n      dup2\n        /* \"contracts/YieldFarm.sol\":11849:11865  userStake.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/YieldFarm.sol\":11849:11869  userStake.amount > 0 */\n      gt\n        /* \"contracts/YieldFarm.sol\":11845:12449  if (userStake.amount > 0) {... */\n      iszero\n      tag_324\n      jumpi\n        /* \"contracts/YieldFarm.sol\":11885:11906  uint256 pendingReward */\n      0x00\n        /* \"contracts/YieldFarm.sol\":11962:11971  userStake */\n      dup2\n        /* \"contracts/YieldFarm.sol\":11962:11982  userStake.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/YieldFarm.sol\":11955:11959  1e12 */\n      0xe8d4a51000\n        /* \"contracts/YieldFarm.sol\":11929:11933  pool */\n      dup5\n        /* \"contracts/YieldFarm.sol\":11929:11951  pool.accRewardPerShare */\n      0x05\n      add\n      sload\n        /* \"contracts/YieldFarm.sol\":11910:11919  userStake */\n      dup5\n        /* \"contracts/YieldFarm.sol\":11910:11926  userStake.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/YieldFarm.sol\":11910:11951  userStake.amount * pool.accRewardPerShare */\n      tag_325\n      swap2\n      swap1\n      tag_315\n      jump\t// in\n    tag_325:\n        /* \"contracts/YieldFarm.sol\":11909:11959  (userStake.amount * pool.accRewardPerShare) / 1e12 */\n      tag_326\n      swap2\n      swap1\n      tag_318\n      jump\t// in\n    tag_326:\n        /* \"contracts/YieldFarm.sol\":11909:11982  (userStake.amount * pool.accRewardPerShare) / 1e12 - userStake.rewardDebt */\n      tag_327\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_327:\n        /* \"contracts/YieldFarm.sol\":11885:11982  uint256 pendingReward = (userStake.amount * pool.accRewardPerShare) / 1e12 - userStake.rewardDebt */\n      swap1\n      pop\n        /* \"contracts/YieldFarm.sol\":11996:12018  uint256 stakedDuration */\n      0x00\n        /* \"contracts/YieldFarm.sol\":12062:12066  pool */\n      dup4\n        /* \"contracts/YieldFarm.sol\":12062:12079  pool.lockDuration */\n      0x03\n      add\n      sload\n        /* \"contracts/YieldFarm.sol\":12040:12049  userStake */\n      dup4\n        /* \"contracts/YieldFarm.sol\":12040:12059  userStake.lockUntil */\n      0x02\n      add\n      sload\n        /* \"contracts/YieldFarm.sol\":12040:12079  userStake.lockUntil - pool.lockDuration */\n      tag_328\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_328:\n        /* \"contracts/YieldFarm.sol\":12021:12036  block.timestamp */\n      timestamp\n        /* \"contracts/YieldFarm.sol\":12021:12080  block.timestamp - (userStake.lockUntil - pool.lockDuration) */\n      tag_329\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_329:\n        /* \"contracts/YieldFarm.sol\":11996:12080  uint256 stakedDuration = block.timestamp - (userStake.lockUntil - pool.lockDuration) */\n      swap1\n      pop\n        /* \"contracts/YieldFarm.sol\":12094:12112  uint256 multiplier */\n      0x00\n        /* \"contracts/YieldFarm.sol\":12115:12157  _calculateRewardMultiplier(stakedDuration) */\n      tag_330\n        /* \"contracts/YieldFarm.sol\":12142:12156  stakedDuration */\n      dup3\n        /* \"contracts/YieldFarm.sol\":12115:12141  _calculateRewardMultiplier */\n      tag_331\n        /* \"contracts/YieldFarm.sol\":12115:12157  _calculateRewardMultiplier(stakedDuration) */\n      jump\t// in\n    tag_330:\n        /* \"contracts/YieldFarm.sol\":12094:12157  uint256 multiplier = _calculateRewardMultiplier(stakedDuration) */\n      swap1\n      pop\n        /* \"contracts/YieldFarm.sol\":12235:12249  baseRewardRate */\n      sload(0x36)\n        /* \"contracts/YieldFarm.sol\":12221:12231  multiplier */\n      dup2\n        /* \"contracts/YieldFarm.sol\":12204:12218  baseRewardRate */\n      sload(0x36)\n        /* \"contracts/YieldFarm.sol\":12204:12231  baseRewardRate + multiplier */\n      tag_332\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_332:\n        /* \"contracts/YieldFarm.sol\":12187:12200  pendingReward */\n      dup5\n        /* \"contracts/YieldFarm.sol\":12187:12232  pendingReward * (baseRewardRate + multiplier) */\n      tag_333\n      swap2\n      swap1\n      tag_315\n      jump\t// in\n    tag_333:\n        /* \"contracts/YieldFarm.sol\":12187:12249  pendingReward * (baseRewardRate + multiplier) / baseRewardRate */\n      tag_334\n      swap2\n      swap1\n      tag_318\n      jump\t// in\n    tag_334:\n        /* \"contracts/YieldFarm.sol\":12171:12249  pendingReward = pendingReward * (baseRewardRate + multiplier) / baseRewardRate */\n      swap3\n      pop\n        /* \"contracts/YieldFarm.sol\":12286:12299  pendingReward */\n      dup3\n        /* \"contracts/YieldFarm.sol\":12263:12272  userStake */\n      dup5\n        /* \"contracts/YieldFarm.sol\":12263:12283  userStake.rewardDebt */\n      0x01\n      add\n        /* \"contracts/YieldFarm.sol\":12263:12299  userStake.rewardDebt = pendingReward */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/YieldFarm.sol\":12345:12346  0 */\n      0x00\n        /* \"contracts/YieldFarm.sol\":12317:12325  nftToken */\n      0x3c\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/YieldFarm.sol\":12317:12335  nftToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/YieldFarm.sol\":12336:12341  _user */\n      dup9\n        /* \"contracts/YieldFarm.sol\":12317:12342  nftToken.balanceOf(_user) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_335\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_335:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_337\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_337:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_338\n      swap2\n      swap1\n      tag_339\n      jump\t// in\n    tag_338:\n        /* \"contracts/YieldFarm.sol\":12317:12346  nftToken.balanceOf(_user) > 0 */\n      gt\n        /* \"contracts/YieldFarm.sol\":12313:12439  if (nftToken.balanceOf(_user) > 0) {... */\n      iszero\n      tag_340\n      jumpi\n        /* \"contracts/YieldFarm.sol\":12421:12424  100 */\n      0x64\n        /* \"contracts/YieldFarm.sol\":12406:12418  nftBoostRate */\n      sload(0x39)\n        /* \"contracts/YieldFarm.sol\":12390:12403  pendingReward */\n      dup5\n        /* \"contracts/YieldFarm.sol\":12390:12418  pendingReward * nftBoostRate */\n      tag_341\n      swap2\n      swap1\n      tag_315\n      jump\t// in\n    tag_341:\n        /* \"contracts/YieldFarm.sol\":12390:12424  pendingReward * nftBoostRate / 100 */\n      tag_342\n      swap2\n      swap1\n      tag_318\n      jump\t// in\n    tag_342:\n        /* \"contracts/YieldFarm.sol\":12366:12375  userStake */\n      dup5\n        /* \"contracts/YieldFarm.sol\":12366:12386  userStake.rewardDebt */\n      0x01\n      add\n      0x00\n        /* \"contracts/YieldFarm.sol\":12366:12424  userStake.rewardDebt += pendingReward * nftBoostRate / 100 */\n      dup3\n      dup3\n      sload\n      tag_343\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_343:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/YieldFarm.sol\":12313:12439  if (nftToken.balanceOf(_user) > 0) {... */\n    tag_340:\n        /* \"contracts/YieldFarm.sol\":11871:12449  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/YieldFarm.sol\":11845:12449  if (userStake.amount > 0) {... */\n    tag_324:\n        /* \"contracts/YieldFarm.sol\":11724:12455  {... */\n      pop\n      pop\n        /* \"contracts/YieldFarm.sol\":11662:12455  function _updateRewards(uint256 _pid, address _user) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":1421:1635  function safeTransferFrom(IERC20Upgradeable token, address from, address to, uint256 value) internal {... */\n    tag_203:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":1532:1628  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_345\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":1552:1557  token */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":1582:1609  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":1611:1615  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":1617:1619  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":1621:1626  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":1559:1627  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_346\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_347\n      jump\t// in\n    tag_346:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":1532:1551  _callOptionalReturn */\n      tag_304\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":1532:1628  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_345:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":1421:1635  function safeTransferFrom(IERC20Upgradeable token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_216:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_224:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_350\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_351\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_350:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_353\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_354\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n    tag_353:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1889:2000  function __ReentrancyGuard_init() internal onlyInitializing {... */\n    tag_226:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_356\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_351\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_356:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1959:1993  __ReentrancyGuard_init_unchained() */\n      tag_358\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1959:1991  __ReentrancyGuard_init_unchained */\n      tag_359\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1959:1993  __ReentrancyGuard_init_unchained() */\n      jump\t// in\n    tag_358:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1889:2000  function __ReentrancyGuard_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n    tag_232:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1244:1268  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1303:1335  $.slot := OwnableStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n    tag_291:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":940:947  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":959:976  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":5328:5981  function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {... */\n    tag_304:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":5758:5781  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":5784:5853  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_363\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":5812:5816  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":5784:5853  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":5792:5797  token */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":5784:5811  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_364\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":5784:5853  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_363:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":5758:5853  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":5892:5893  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":5871:5881  returndata */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":5871:5888  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":5871:5893  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":5871:5927  returndata.length == 0 || abi.decode(returndata, (bool)) */\n      dup1\n      tag_365\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":5908:5918  returndata */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":5897:5927  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_366\n      swap2\n      swap1\n      tag_367\n      jump\t// in\n    tag_366:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":5871:5927  returndata.length == 0 || abi.decode(returndata, (bool)) */\n    tag_365:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":5863:5974  require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_368\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_369\n      swap1\n      tag_370\n      jump\t// in\n    tag_369:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_368:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":5409:5981  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":5328:5981  function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/YieldFarm.sol\":10761:10998  function _calculateRewardMultiplier(uint256 stakedDuration) internal view returns (uint256) {... */\n    tag_331:\n        /* \"contracts/YieldFarm.sol\":10844:10851  uint256 */\n      0x00\n        /* \"contracts/YieldFarm.sol\":10863:10881  uint256 multiplier */\n      dup1\n        /* \"contracts/YieldFarm.sol\":10901:10919  multiplierDuration */\n      sload(0x38)\n        /* \"contracts/YieldFarm.sol\":10884:10898  stakedDuration */\n      dup4\n        /* \"contracts/YieldFarm.sol\":10884:10919  stakedDuration / multiplierDuration */\n      tag_372\n      swap2\n      swap1\n      tag_318\n      jump\t// in\n    tag_372:\n        /* \"contracts/YieldFarm.sol\":10863:10919  uint256 multiplier = stakedDuration / multiplierDuration */\n      swap1\n      pop\n        /* \"contracts/YieldFarm.sol\":10949:10962  maxMultiplier */\n      sload(0x37)\n        /* \"contracts/YieldFarm.sol\":10936:10946  multiplier */\n      dup2\n        /* \"contracts/YieldFarm.sol\":10936:10962  multiplier > maxMultiplier */\n      gt\n        /* \"contracts/YieldFarm.sol\":10936:10991  multiplier > maxMultiplier ? maxMultiplier : multiplier */\n      tag_373\n      jumpi\n        /* \"contracts/YieldFarm.sol\":10981:10991  multiplier */\n      dup1\n        /* \"contracts/YieldFarm.sol\":10936:10991  multiplier > maxMultiplier ? maxMultiplier : multiplier */\n      jump(tag_374)\n    tag_373:\n        /* \"contracts/YieldFarm.sol\":10965:10978  maxMultiplier */\n      sload(0x37)\n        /* \"contracts/YieldFarm.sol\":10936:10991  multiplier > maxMultiplier ? maxMultiplier : multiplier */\n    tag_374:\n        /* \"contracts/YieldFarm.sol\":10929:10991  return multiplier > maxMultiplier ? maxMultiplier : multiplier */\n      swap2\n      pop\n      pop\n        /* \"contracts/YieldFarm.sol\":10761:10998  function _calculateRewardMultiplier(uint256 stakedDuration) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_351:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      tag_376\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7166  _isInitializing */\n      tag_377\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      jump\t// in\n    tag_376:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_378\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      0xd7e6bcf800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n    tag_378:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_354:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_380\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_351\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_380:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2100:2101  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2088  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n      tag_382\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2153:2154  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2125:2156  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_383\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_383:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n    tag_382:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      tag_384\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2195:2207  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2194  _transferOwnership */\n      tag_184\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      jump\t// in\n    tag_384:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2006:2115  function __ReentrancyGuard_init_unchained() internal onlyInitializing {... */\n    tag_359:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_386\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_351\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_386:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1808:1809  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2086:2093  _status */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2086:2108  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2006:2115  function __ReentrancyGuard_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4119:4342  function functionCall(... */\n    tag_364:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4252:4264  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4283:4335  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_389\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4305:4311  target */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4313:4317  data */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4319:4320  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4322:4334  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4283:4304  functionCallWithValue */\n      tag_390\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4283:4335  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_389:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4276:4335  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4119:4342  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n    tag_377:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8537:8541  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      tag_392\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8584  _getInitializableStorage */\n      tag_216\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      jump\t// in\n    tag_392:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8553:8600  return _getInitializableStorage()._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5176:5622  function functionCallWithValue(... */\n    tag_390:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5341:5353  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5398:5403  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5373:5394  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5373:5403  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5365:5446  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_394\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_395\n      swap1\n      tag_396\n      jump\t// in\n    tag_395:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_394:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5457:5469  bool success */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5471:5494  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5498:5504  target */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5498:5509  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5517:5522  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5524:5528  data */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5498:5529  target.call{value: value}(data) */\n      mload(0x40)\n      tag_397\n      swap2\n      swap1\n      tag_398\n      jump\t// in\n    tag_397:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_401\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_400)\n    tag_401:\n      0x60\n      swap2\n      pop\n    tag_400:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5456:5529  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5546:5615  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_402\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5573:5579  target */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5581:5588  success */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5590:5600  returndata */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5602:5614  errorMessage */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5546:5572  verifyCallResultFromTarget */\n      tag_403\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5546:5615  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_402:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5539:5615  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5176:5622  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7682:8310  function verifyCallResultFromTarget(... */\n    tag_403:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7862:7874  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7890:7897  success */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7886:8304  if (success) {... */\n      iszero\n      tag_405\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7938:7939  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7917:7927  returndata */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7917:7934  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7917:7939  returndata.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7913:8199  if (returndata.length == 0) {... */\n      tag_406\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8132:8150  isContract(target) */\n      tag_407\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8143:8149  target */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8132:8142  isContract */\n      tag_408\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8132:8150  isContract(target) */\n      jump\t// in\n    tag_407:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8124:8184  require(isContract(target), \"Address: call to non-contract\") */\n      tag_409\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_410\n      swap1\n      tag_411\n      jump\t// in\n    tag_410:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_409:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7913:8199  if (returndata.length == 0) {... */\n    tag_406:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8219:8229  returndata */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8212:8229  return returndata */\n      swap1\n      pop\n      jump(tag_404)\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7886:8304  if (success) {... */\n    tag_405:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8260:8293  _revert(returndata, errorMessage) */\n      tag_413\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8268:8278  returndata */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8280:8292  errorMessage */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8260:8267  _revert */\n      tag_414\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8260:8293  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_413:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7682:8310  function verifyCallResultFromTarget(... */\n    tag_404:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1423:1743  function isContract(address account) internal view returns (bool) {... */\n    tag_408:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1483:1487  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1735:1736  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1720  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1732  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1736  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1706:1736  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1423:1743  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8832:9372  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_414:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9011:9012  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8991:9001  returndata */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8991:9008  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8991:9012  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8987:9366  if (returndata.length > 0) {... */\n      iszero\n      tag_417\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9219:9229  returndata */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9213:9230  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9275:9290  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9262:9272  returndata */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9258:9260  32 */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9254:9273  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9247:9291  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8987:9366  if (returndata.length > 0) {... */\n    tag_417:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9342:9354  errorMessage */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9335:9355  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_419\n      swap2\n      swap1\n      tag_420\n      jump\t// in\n    tag_419:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:84   */\n    tag_421:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_422:\n        /* \"#utility.yul\":177:201   */\n      tag_490\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_421\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_42:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_492\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_422\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_424:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:891   */\n    tag_426:\n        /* \"#utility.yul\":842:866   */\n      tag_497\n        /* \"#utility.yul\":860:865   */\n      dup2\n        /* \"#utility.yul\":842:866   */\n      tag_421\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":835:840   */\n      dup2\n        /* \"#utility.yul\":832:867   */\n      eq\n        /* \"#utility.yul\":822:885   */\n      tag_498\n      jumpi\n        /* \"#utility.yul\":881:882   */\n      0x00\n        /* \"#utility.yul\":878:879   */\n      dup1\n        /* \"#utility.yul\":871:883   */\n      revert\n        /* \"#utility.yul\":822:885   */\n    tag_498:\n        /* \"#utility.yul\":769:891   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1036   */\n    tag_427:\n        /* \"#utility.yul\":943:948   */\n      0x00\n        /* \"#utility.yul\":981:987   */\n      dup2\n        /* \"#utility.yul\":968:988   */\n      calldataload\n        /* \"#utility.yul\":959:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":997:1030   */\n      tag_500\n        /* \"#utility.yul\":1024:1029   */\n      dup2\n        /* \"#utility.yul\":997:1030   */\n      tag_426\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":897:1036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1042:1516   */\n    tag_48:\n        /* \"#utility.yul\":1110:1116   */\n      0x00\n        /* \"#utility.yul\":1118:1124   */\n      dup1\n        /* \"#utility.yul\":1167:1169   */\n      0x40\n        /* \"#utility.yul\":1155:1164   */\n      dup4\n        /* \"#utility.yul\":1146:1153   */\n      dup6\n        /* \"#utility.yul\":1142:1165   */\n      sub\n        /* \"#utility.yul\":1138:1170   */\n      slt\n        /* \"#utility.yul\":1135:1254   */\n      iszero\n      tag_502\n      jumpi\n        /* \"#utility.yul\":1173:1252   */\n      tag_503\n      tag_424\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":1135:1254   */\n    tag_502:\n        /* \"#utility.yul\":1293:1294   */\n      0x00\n        /* \"#utility.yul\":1318:1371   */\n      tag_504\n        /* \"#utility.yul\":1363:1370   */\n      dup6\n        /* \"#utility.yul\":1354:1360   */\n      dup3\n        /* \"#utility.yul\":1343:1352   */\n      dup7\n        /* \"#utility.yul\":1339:1361   */\n      add\n        /* \"#utility.yul\":1318:1371   */\n      tag_427\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":1308:1371   */\n      swap3\n      pop\n        /* \"#utility.yul\":1264:1381   */\n      pop\n        /* \"#utility.yul\":1420:1422   */\n      0x20\n        /* \"#utility.yul\":1446:1499   */\n      tag_505\n        /* \"#utility.yul\":1491:1498   */\n      dup6\n        /* \"#utility.yul\":1482:1488   */\n      dup3\n        /* \"#utility.yul\":1471:1480   */\n      dup7\n        /* \"#utility.yul\":1467:1489   */\n      add\n        /* \"#utility.yul\":1446:1499   */\n      tag_427\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":1436:1499   */\n      swap2\n      pop\n        /* \"#utility.yul\":1391:1509   */\n      pop\n        /* \"#utility.yul\":1042:1516   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1522:1851   */\n    tag_52:\n        /* \"#utility.yul\":1581:1587   */\n      0x00\n        /* \"#utility.yul\":1630:1632   */\n      0x20\n        /* \"#utility.yul\":1618:1627   */\n      dup3\n        /* \"#utility.yul\":1609:1616   */\n      dup5\n        /* \"#utility.yul\":1605:1628   */\n      sub\n        /* \"#utility.yul\":1601:1633   */\n      slt\n        /* \"#utility.yul\":1598:1717   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":1636:1715   */\n      tag_508\n      tag_424\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":1598:1717   */\n    tag_507:\n        /* \"#utility.yul\":1756:1757   */\n      0x00\n        /* \"#utility.yul\":1781:1834   */\n      tag_509\n        /* \"#utility.yul\":1826:1833   */\n      dup5\n        /* \"#utility.yul\":1817:1823   */\n      dup3\n        /* \"#utility.yul\":1806:1815   */\n      dup6\n        /* \"#utility.yul\":1802:1824   */\n      add\n        /* \"#utility.yul\":1781:1834   */\n      tag_427\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":1771:1834   */\n      swap2\n      pop\n        /* \"#utility.yul\":1727:1844   */\n      pop\n        /* \"#utility.yul\":1522:1851   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1857:1983   */\n    tag_428:\n        /* \"#utility.yul\":1894:1901   */\n      0x00\n        /* \"#utility.yul\":1934:1976   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1927:1932   */\n      dup3\n        /* \"#utility.yul\":1923:1977   */\n      and\n        /* \"#utility.yul\":1912:1977   */\n      swap1\n      pop\n        /* \"#utility.yul\":1857:1983   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1989:2049   */\n    tag_429:\n        /* \"#utility.yul\":2017:2020   */\n      0x00\n        /* \"#utility.yul\":2038:2043   */\n      dup2\n        /* \"#utility.yul\":2031:2043   */\n      swap1\n      pop\n        /* \"#utility.yul\":1989:2049   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2055:2197   */\n    tag_430:\n        /* \"#utility.yul\":2105:2114   */\n      0x00\n        /* \"#utility.yul\":2138:2191   */\n      tag_513\n        /* \"#utility.yul\":2156:2190   */\n      tag_514\n        /* \"#utility.yul\":2165:2189   */\n      tag_515\n        /* \"#utility.yul\":2183:2188   */\n      dup5\n        /* \"#utility.yul\":2165:2189   */\n      tag_428\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":2156:2190   */\n      tag_429\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":2138:2191   */\n      tag_428\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":2125:2191   */\n      swap1\n      pop\n        /* \"#utility.yul\":2055:2197   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2203:2329   */\n    tag_431:\n        /* \"#utility.yul\":2253:2262   */\n      0x00\n        /* \"#utility.yul\":2286:2323   */\n      tag_517\n        /* \"#utility.yul\":2317:2322   */\n      dup3\n        /* \"#utility.yul\":2286:2323   */\n      tag_430\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":2273:2323   */\n      swap1\n      pop\n        /* \"#utility.yul\":2203:2329   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2335:2486   */\n    tag_432:\n        /* \"#utility.yul\":2410:2419   */\n      0x00\n        /* \"#utility.yul\":2443:2480   */\n      tag_519\n        /* \"#utility.yul\":2474:2479   */\n      dup3\n        /* \"#utility.yul\":2443:2480   */\n      tag_431\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":2430:2480   */\n      swap1\n      pop\n        /* \"#utility.yul\":2335:2486   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2492:2673   */\n    tag_433:\n        /* \"#utility.yul\":2604:2666   */\n      tag_521\n        /* \"#utility.yul\":2660:2665   */\n      dup2\n        /* \"#utility.yul\":2604:2666   */\n      tag_432\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":2599:2602   */\n      dup3\n        /* \"#utility.yul\":2592:2667   */\n      mstore\n        /* \"#utility.yul\":2492:2673   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2679:3665   */\n    tag_55:\n        /* \"#utility.yul\":2990:2994   */\n      0x00\n        /* \"#utility.yul\":3028:3031   */\n      0xe0\n        /* \"#utility.yul\":3017:3026   */\n      dup3\n        /* \"#utility.yul\":3013:3032   */\n      add\n        /* \"#utility.yul\":3005:3032   */\n      swap1\n      pop\n        /* \"#utility.yul\":3042:3138   */\n      tag_523\n        /* \"#utility.yul\":3135:3136   */\n      0x00\n        /* \"#utility.yul\":3124:3133   */\n      dup4\n        /* \"#utility.yul\":3120:3137   */\n      add\n        /* \"#utility.yul\":3111:3117   */\n      dup11\n        /* \"#utility.yul\":3042:3138   */\n      tag_433\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":3148:3245   */\n      tag_524\n        /* \"#utility.yul\":3241:3243   */\n      0x20\n        /* \"#utility.yul\":3230:3239   */\n      dup4\n        /* \"#utility.yul\":3226:3244   */\n      add\n        /* \"#utility.yul\":3217:3223   */\n      dup10\n        /* \"#utility.yul\":3148:3245   */\n      tag_433\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":3255:3327   */\n      tag_525\n        /* \"#utility.yul\":3323:3325   */\n      0x40\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3326   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup9\n        /* \"#utility.yul\":3255:3327   */\n      tag_422\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":3337:3409   */\n      tag_526\n        /* \"#utility.yul\":3405:3407   */\n      0x60\n        /* \"#utility.yul\":3394:3403   */\n      dup4\n        /* \"#utility.yul\":3390:3408   */\n      add\n        /* \"#utility.yul\":3381:3387   */\n      dup8\n        /* \"#utility.yul\":3337:3409   */\n      tag_422\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":3419:3492   */\n      tag_527\n        /* \"#utility.yul\":3487:3490   */\n      0x80\n        /* \"#utility.yul\":3476:3485   */\n      dup4\n        /* \"#utility.yul\":3472:3491   */\n      add\n        /* \"#utility.yul\":3463:3469   */\n      dup7\n        /* \"#utility.yul\":3419:3492   */\n      tag_422\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":3502:3575   */\n      tag_528\n        /* \"#utility.yul\":3570:3573   */\n      0xa0\n        /* \"#utility.yul\":3559:3568   */\n      dup4\n        /* \"#utility.yul\":3555:3574   */\n      add\n        /* \"#utility.yul\":3546:3552   */\n      dup6\n        /* \"#utility.yul\":3502:3575   */\n      tag_422\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":3585:3658   */\n      tag_529\n        /* \"#utility.yul\":3653:3656   */\n      0xc0\n        /* \"#utility.yul\":3642:3651   */\n      dup4\n        /* \"#utility.yul\":3638:3657   */\n      add\n        /* \"#utility.yul\":3629:3635   */\n      dup5\n        /* \"#utility.yul\":3585:3658   */\n      tag_422\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":2679:3665   */\n      swap9\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3671:3767   */\n    tag_434:\n        /* \"#utility.yul\":3708:3715   */\n      0x00\n        /* \"#utility.yul\":3737:3761   */\n      tag_531\n        /* \"#utility.yul\":3755:3760   */\n      dup3\n        /* \"#utility.yul\":3737:3761   */\n      tag_428\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":3726:3761   */\n      swap1\n      pop\n        /* \"#utility.yul\":3671:3767   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3773:3895   */\n    tag_435:\n        /* \"#utility.yul\":3846:3870   */\n      tag_533\n        /* \"#utility.yul\":3864:3869   */\n      dup2\n        /* \"#utility.yul\":3846:3870   */\n      tag_434\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":3839:3844   */\n      dup2\n        /* \"#utility.yul\":3836:3871   */\n      eq\n        /* \"#utility.yul\":3826:3889   */\n      tag_534\n      jumpi\n        /* \"#utility.yul\":3885:3886   */\n      0x00\n        /* \"#utility.yul\":3882:3883   */\n      dup1\n        /* \"#utility.yul\":3875:3887   */\n      revert\n        /* \"#utility.yul\":3826:3889   */\n    tag_534:\n        /* \"#utility.yul\":3773:3895   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3901:4040   */\n    tag_436:\n        /* \"#utility.yul\":3947:3952   */\n      0x00\n        /* \"#utility.yul\":3985:3991   */\n      dup2\n        /* \"#utility.yul\":3972:3992   */\n      calldataload\n        /* \"#utility.yul\":3963:3992   */\n      swap1\n      pop\n        /* \"#utility.yul\":4001:4034   */\n      tag_536\n        /* \"#utility.yul\":4028:4033   */\n      dup2\n        /* \"#utility.yul\":4001:4034   */\n      tag_435\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":3901:4040   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4046:4520   */\n    tag_61:\n        /* \"#utility.yul\":4114:4120   */\n      0x00\n        /* \"#utility.yul\":4122:4128   */\n      dup1\n        /* \"#utility.yul\":4171:4173   */\n      0x40\n        /* \"#utility.yul\":4159:4168   */\n      dup4\n        /* \"#utility.yul\":4150:4157   */\n      dup6\n        /* \"#utility.yul\":4146:4169   */\n      sub\n        /* \"#utility.yul\":4142:4174   */\n      slt\n        /* \"#utility.yul\":4139:4258   */\n      iszero\n      tag_538\n      jumpi\n        /* \"#utility.yul\":4177:4256   */\n      tag_539\n      tag_424\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":4139:4258   */\n    tag_538:\n        /* \"#utility.yul\":4297:4298   */\n      0x00\n        /* \"#utility.yul\":4322:4375   */\n      tag_540\n        /* \"#utility.yul\":4367:4374   */\n      dup6\n        /* \"#utility.yul\":4358:4364   */\n      dup3\n        /* \"#utility.yul\":4347:4356   */\n      dup7\n        /* \"#utility.yul\":4343:4365   */\n      add\n        /* \"#utility.yul\":4322:4375   */\n      tag_427\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":4312:4375   */\n      swap3\n      pop\n        /* \"#utility.yul\":4268:4385   */\n      pop\n        /* \"#utility.yul\":4424:4426   */\n      0x20\n        /* \"#utility.yul\":4450:4503   */\n      tag_541\n        /* \"#utility.yul\":4495:4502   */\n      dup6\n        /* \"#utility.yul\":4486:4492   */\n      dup3\n        /* \"#utility.yul\":4475:4484   */\n      dup7\n        /* \"#utility.yul\":4471:4493   */\n      add\n        /* \"#utility.yul\":4450:4503   */\n      tag_436\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":4440:4503   */\n      swap2\n      pop\n        /* \"#utility.yul\":4395:4513   */\n      pop\n        /* \"#utility.yul\":4046:4520   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4968   */\n    tag_64:\n        /* \"#utility.yul\":4675:4679   */\n      0x00\n        /* \"#utility.yul\":4713:4715   */\n      0x60\n        /* \"#utility.yul\":4702:4711   */\n      dup3\n        /* \"#utility.yul\":4698:4716   */\n      add\n        /* \"#utility.yul\":4690:4716   */\n      swap1\n      pop\n        /* \"#utility.yul\":4726:4797   */\n      tag_543\n        /* \"#utility.yul\":4794:4795   */\n      0x00\n        /* \"#utility.yul\":4783:4792   */\n      dup4\n        /* \"#utility.yul\":4779:4796   */\n      add\n        /* \"#utility.yul\":4770:4776   */\n      dup7\n        /* \"#utility.yul\":4726:4797   */\n      tag_422\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":4807:4879   */\n      tag_544\n        /* \"#utility.yul\":4875:4877   */\n      0x20\n        /* \"#utility.yul\":4864:4873   */\n      dup4\n        /* \"#utility.yul\":4860:4878   */\n      add\n        /* \"#utility.yul\":4851:4857   */\n      dup6\n        /* \"#utility.yul\":4807:4879   */\n      tag_422\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":4889:4961   */\n      tag_545\n        /* \"#utility.yul\":4957:4959   */\n      0x40\n        /* \"#utility.yul\":4946:4955   */\n      dup4\n        /* \"#utility.yul\":4942:4960   */\n      add\n        /* \"#utility.yul\":4933:4939   */\n      dup5\n        /* \"#utility.yul\":4889:4961   */\n      tag_422\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":4526:4968   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4974:5303   */\n    tag_72:\n        /* \"#utility.yul\":5033:5039   */\n      0x00\n        /* \"#utility.yul\":5082:5084   */\n      0x20\n        /* \"#utility.yul\":5070:5079   */\n      dup3\n        /* \"#utility.yul\":5061:5068   */\n      dup5\n        /* \"#utility.yul\":5057:5080   */\n      sub\n        /* \"#utility.yul\":5053:5085   */\n      slt\n        /* \"#utility.yul\":5050:5169   */\n      iszero\n      tag_547\n      jumpi\n        /* \"#utility.yul\":5088:5167   */\n      tag_548\n      tag_424\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":5050:5169   */\n    tag_547:\n        /* \"#utility.yul\":5208:5209   */\n      0x00\n        /* \"#utility.yul\":5233:5286   */\n      tag_549\n        /* \"#utility.yul\":5278:5285   */\n      dup5\n        /* \"#utility.yul\":5269:5275   */\n      dup3\n        /* \"#utility.yul\":5258:5267   */\n      dup6\n        /* \"#utility.yul\":5254:5276   */\n      add\n        /* \"#utility.yul\":5233:5286   */\n      tag_436\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":5223:5286   */\n      swap2\n      pop\n        /* \"#utility.yul\":5179:5296   */\n      pop\n        /* \"#utility.yul\":4974:5303   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5309:5427   */\n    tag_437:\n        /* \"#utility.yul\":5396:5420   */\n      tag_551\n        /* \"#utility.yul\":5414:5419   */\n      dup2\n        /* \"#utility.yul\":5396:5420   */\n      tag_434\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":5391:5394   */\n      dup3\n        /* \"#utility.yul\":5384:5421   */\n      mstore\n        /* \"#utility.yul\":5309:5427   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5433:5655   */\n    tag_75:\n        /* \"#utility.yul\":5526:5530   */\n      0x00\n        /* \"#utility.yul\":5564:5566   */\n      0x20\n        /* \"#utility.yul\":5553:5562   */\n      dup3\n        /* \"#utility.yul\":5549:5567   */\n      add\n        /* \"#utility.yul\":5541:5567   */\n      swap1\n      pop\n        /* \"#utility.yul\":5577:5648   */\n      tag_553\n        /* \"#utility.yul\":5645:5646   */\n      0x00\n        /* \"#utility.yul\":5634:5643   */\n      dup4\n        /* \"#utility.yul\":5630:5647   */\n      add\n        /* \"#utility.yul\":5621:5627   */\n      dup5\n        /* \"#utility.yul\":5577:5648   */\n      tag_437\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":5433:5655   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5661:5751   */\n    tag_438:\n        /* \"#utility.yul\":5695:5702   */\n      0x00\n        /* \"#utility.yul\":5738:5743   */\n      dup2\n        /* \"#utility.yul\":5731:5744   */\n      iszero\n        /* \"#utility.yul\":5724:5745   */\n      iszero\n        /* \"#utility.yul\":5713:5745   */\n      swap1\n      pop\n        /* \"#utility.yul\":5661:5751   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5757:5866   */\n    tag_439:\n        /* \"#utility.yul\":5838:5859   */\n      tag_556\n        /* \"#utility.yul\":5853:5858   */\n      dup2\n        /* \"#utility.yul\":5838:5859   */\n      tag_438\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":5833:5836   */\n      dup3\n        /* \"#utility.yul\":5826:5860   */\n      mstore\n        /* \"#utility.yul\":5757:5866   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5872:6082   */\n    tag_86:\n        /* \"#utility.yul\":5959:5963   */\n      0x00\n        /* \"#utility.yul\":5997:5999   */\n      0x20\n        /* \"#utility.yul\":5986:5995   */\n      dup3\n        /* \"#utility.yul\":5982:6000   */\n      add\n        /* \"#utility.yul\":5974:6000   */\n      swap1\n      pop\n        /* \"#utility.yul\":6010:6075   */\n      tag_558\n        /* \"#utility.yul\":6072:6073   */\n      0x00\n        /* \"#utility.yul\":6061:6070   */\n      dup4\n        /* \"#utility.yul\":6057:6074   */\n      add\n        /* \"#utility.yul\":6048:6054   */\n      dup5\n        /* \"#utility.yul\":6010:6075   */\n      tag_439\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":5872:6082   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6088:6209   */\n    tag_440:\n        /* \"#utility.yul\":6150:6157   */\n      0x00\n        /* \"#utility.yul\":6179:6203   */\n      tag_560\n        /* \"#utility.yul\":6197:6202   */\n      dup3\n        /* \"#utility.yul\":6179:6203   */\n      tag_434\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":6168:6203   */\n      swap1\n      pop\n        /* \"#utility.yul\":6088:6209   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6215:6387   */\n    tag_441:\n        /* \"#utility.yul\":6313:6362   */\n      tag_562\n        /* \"#utility.yul\":6356:6361   */\n      dup2\n        /* \"#utility.yul\":6313:6362   */\n      tag_440\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":6306:6311   */\n      dup2\n        /* \"#utility.yul\":6303:6363   */\n      eq\n        /* \"#utility.yul\":6293:6381   */\n      tag_563\n      jumpi\n        /* \"#utility.yul\":6377:6378   */\n      0x00\n        /* \"#utility.yul\":6374:6375   */\n      dup1\n        /* \"#utility.yul\":6367:6379   */\n      revert\n        /* \"#utility.yul\":6293:6381   */\n    tag_563:\n        /* \"#utility.yul\":6215:6387   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6393:6582   */\n    tag_442:\n        /* \"#utility.yul\":6464:6469   */\n      0x00\n        /* \"#utility.yul\":6502:6508   */\n      dup2\n        /* \"#utility.yul\":6489:6509   */\n      calldataload\n        /* \"#utility.yul\":6480:6509   */\n      swap1\n      pop\n        /* \"#utility.yul\":6518:6576   */\n      tag_565\n        /* \"#utility.yul\":6570:6575   */\n      dup2\n        /* \"#utility.yul\":6518:6576   */\n      tag_441\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":6393:6582   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6588:6711   */\n    tag_443:\n        /* \"#utility.yul\":6652:6659   */\n      0x00\n        /* \"#utility.yul\":6681:6705   */\n      tag_567\n        /* \"#utility.yul\":6699:6704   */\n      dup3\n        /* \"#utility.yul\":6681:6705   */\n      tag_434\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":6670:6705   */\n      swap1\n      pop\n        /* \"#utility.yul\":6588:6711   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6717:6893   */\n    tag_444:\n        /* \"#utility.yul\":6817:6868   */\n      tag_569\n        /* \"#utility.yul\":6862:6867   */\n      dup2\n        /* \"#utility.yul\":6817:6868   */\n      tag_443\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":6810:6815   */\n      dup2\n        /* \"#utility.yul\":6807:6869   */\n      eq\n        /* \"#utility.yul\":6797:6887   */\n      tag_570\n      jumpi\n        /* \"#utility.yul\":6883:6884   */\n      0x00\n        /* \"#utility.yul\":6880:6881   */\n      dup1\n        /* \"#utility.yul\":6873:6885   */\n      revert\n        /* \"#utility.yul\":6797:6887   */\n    tag_570:\n        /* \"#utility.yul\":6717:6893   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6899:7092   */\n    tag_445:\n        /* \"#utility.yul\":6972:6977   */\n      0x00\n        /* \"#utility.yul\":7010:7016   */\n      dup2\n        /* \"#utility.yul\":6997:7017   */\n      calldataload\n        /* \"#utility.yul\":6988:7017   */\n      swap1\n      pop\n        /* \"#utility.yul\":7026:7086   */\n      tag_572\n        /* \"#utility.yul\":7080:7085   */\n      dup2\n        /* \"#utility.yul\":7026:7086   */\n      tag_444\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":6899:7092   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7098:8551   */\n    tag_96:\n        /* \"#utility.yul\":7272:7278   */\n      0x00\n        /* \"#utility.yul\":7280:7286   */\n      dup1\n        /* \"#utility.yul\":7288:7294   */\n      0x00\n        /* \"#utility.yul\":7296:7302   */\n      dup1\n        /* \"#utility.yul\":7304:7310   */\n      0x00\n        /* \"#utility.yul\":7312:7318   */\n      dup1\n        /* \"#utility.yul\":7320:7326   */\n      0x00\n        /* \"#utility.yul\":7328:7334   */\n      dup1\n        /* \"#utility.yul\":7377:7380   */\n      0x0100\n        /* \"#utility.yul\":7365:7374   */\n      dup10\n        /* \"#utility.yul\":7356:7363   */\n      dup12\n        /* \"#utility.yul\":7352:7375   */\n      sub\n        /* \"#utility.yul\":7348:7381   */\n      slt\n        /* \"#utility.yul\":7345:7465   */\n      iszero\n      tag_574\n      jumpi\n        /* \"#utility.yul\":7384:7463   */\n      tag_575\n      tag_424\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":7345:7465   */\n    tag_574:\n        /* \"#utility.yul\":7504:7505   */\n      0x00\n        /* \"#utility.yul\":7529:7607   */\n      tag_576\n        /* \"#utility.yul\":7599:7606   */\n      dup12\n        /* \"#utility.yul\":7590:7596   */\n      dup3\n        /* \"#utility.yul\":7579:7588   */\n      dup13\n        /* \"#utility.yul\":7575:7597   */\n      add\n        /* \"#utility.yul\":7529:7607   */\n      tag_442\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":7519:7607   */\n      swap9\n      pop\n        /* \"#utility.yul\":7475:7617   */\n      pop\n        /* \"#utility.yul\":7656:7658   */\n      0x20\n        /* \"#utility.yul\":7682:7762   */\n      tag_577\n        /* \"#utility.yul\":7754:7761   */\n      dup12\n        /* \"#utility.yul\":7745:7751   */\n      dup3\n        /* \"#utility.yul\":7734:7743   */\n      dup13\n        /* \"#utility.yul\":7730:7752   */\n      add\n        /* \"#utility.yul\":7682:7762   */\n      tag_445\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":7672:7762   */\n      swap8\n      pop\n        /* \"#utility.yul\":7627:7772   */\n      pop\n        /* \"#utility.yul\":7811:7813   */\n      0x40\n        /* \"#utility.yul\":7837:7890   */\n      tag_578\n        /* \"#utility.yul\":7882:7889   */\n      dup12\n        /* \"#utility.yul\":7873:7879   */\n      dup3\n        /* \"#utility.yul\":7862:7871   */\n      dup13\n        /* \"#utility.yul\":7858:7880   */\n      add\n        /* \"#utility.yul\":7837:7890   */\n      tag_427\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":7827:7890   */\n      swap7\n      pop\n        /* \"#utility.yul\":7782:7900   */\n      pop\n        /* \"#utility.yul\":7939:7941   */\n      0x60\n        /* \"#utility.yul\":7965:8018   */\n      tag_579\n        /* \"#utility.yul\":8010:8017   */\n      dup12\n        /* \"#utility.yul\":8001:8007   */\n      dup3\n        /* \"#utility.yul\":7990:7999   */\n      dup13\n        /* \"#utility.yul\":7986:8008   */\n      add\n        /* \"#utility.yul\":7965:8018   */\n      tag_427\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":7955:8018   */\n      swap6\n      pop\n        /* \"#utility.yul\":7910:8028   */\n      pop\n        /* \"#utility.yul\":8067:8070   */\n      0x80\n        /* \"#utility.yul\":8094:8147   */\n      tag_580\n        /* \"#utility.yul\":8139:8146   */\n      dup12\n        /* \"#utility.yul\":8130:8136   */\n      dup3\n        /* \"#utility.yul\":8119:8128   */\n      dup13\n        /* \"#utility.yul\":8115:8137   */\n      add\n        /* \"#utility.yul\":8094:8147   */\n      tag_427\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":8084:8147   */\n      swap5\n      pop\n        /* \"#utility.yul\":8038:8157   */\n      pop\n        /* \"#utility.yul\":8196:8199   */\n      0xa0\n        /* \"#utility.yul\":8223:8276   */\n      tag_581\n        /* \"#utility.yul\":8268:8275   */\n      dup12\n        /* \"#utility.yul\":8259:8265   */\n      dup3\n        /* \"#utility.yul\":8248:8257   */\n      dup13\n        /* \"#utility.yul\":8244:8266   */\n      add\n        /* \"#utility.yul\":8223:8276   */\n      tag_427\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":8213:8276   */\n      swap4\n      pop\n        /* \"#utility.yul\":8167:8286   */\n      pop\n        /* \"#utility.yul\":8325:8328   */\n      0xc0\n        /* \"#utility.yul\":8352:8405   */\n      tag_582\n        /* \"#utility.yul\":8397:8404   */\n      dup12\n        /* \"#utility.yul\":8388:8394   */\n      dup3\n        /* \"#utility.yul\":8377:8386   */\n      dup13\n        /* \"#utility.yul\":8373:8395   */\n      add\n        /* \"#utility.yul\":8352:8405   */\n      tag_427\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":8342:8405   */\n      swap3\n      pop\n        /* \"#utility.yul\":8296:8415   */\n      pop\n        /* \"#utility.yul\":8454:8457   */\n      0xe0\n        /* \"#utility.yul\":8481:8534   */\n      tag_583\n        /* \"#utility.yul\":8526:8533   */\n      dup12\n        /* \"#utility.yul\":8517:8523   */\n      dup3\n        /* \"#utility.yul\":8506:8515   */\n      dup13\n        /* \"#utility.yul\":8502:8524   */\n      add\n        /* \"#utility.yul\":8481:8534   */\n      tag_427\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":8471:8534   */\n      swap2\n      pop\n        /* \"#utility.yul\":8425:8544   */\n      pop\n        /* \"#utility.yul\":7098:8551   */\n      swap3\n      swap6\n      swap9\n      pop\n      swap3\n      swap6\n      swap9\n      swap1\n      swap4\n      swap7\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8557:9422   */\n    tag_115:\n        /* \"#utility.yul\":8693:8699   */\n      0x00\n        /* \"#utility.yul\":8701:8707   */\n      dup1\n        /* \"#utility.yul\":8709:8715   */\n      0x00\n        /* \"#utility.yul\":8717:8723   */\n      dup1\n        /* \"#utility.yul\":8766:8769   */\n      0x80\n        /* \"#utility.yul\":8754:8763   */\n      dup6\n        /* \"#utility.yul\":8745:8752   */\n      dup8\n        /* \"#utility.yul\":8741:8764   */\n      sub\n        /* \"#utility.yul\":8737:8770   */\n      slt\n        /* \"#utility.yul\":8734:8854   */\n      iszero\n      tag_585\n      jumpi\n        /* \"#utility.yul\":8773:8852   */\n      tag_586\n      tag_424\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":8734:8854   */\n    tag_585:\n        /* \"#utility.yul\":8893:8894   */\n      0x00\n        /* \"#utility.yul\":8918:8996   */\n      tag_587\n        /* \"#utility.yul\":8988:8995   */\n      dup8\n        /* \"#utility.yul\":8979:8985   */\n      dup3\n        /* \"#utility.yul\":8968:8977   */\n      dup9\n        /* \"#utility.yul\":8964:8986   */\n      add\n        /* \"#utility.yul\":8918:8996   */\n      tag_442\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":8908:8996   */\n      swap5\n      pop\n        /* \"#utility.yul\":8864:9006   */\n      pop\n        /* \"#utility.yul\":9045:9047   */\n      0x20\n        /* \"#utility.yul\":9071:9149   */\n      tag_588\n        /* \"#utility.yul\":9141:9148   */\n      dup8\n        /* \"#utility.yul\":9132:9138   */\n      dup3\n        /* \"#utility.yul\":9121:9130   */\n      dup9\n        /* \"#utility.yul\":9117:9139   */\n      add\n        /* \"#utility.yul\":9071:9149   */\n      tag_442\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":9061:9149   */\n      swap4\n      pop\n        /* \"#utility.yul\":9016:9159   */\n      pop\n        /* \"#utility.yul\":9198:9200   */\n      0x40\n        /* \"#utility.yul\":9224:9277   */\n      tag_589\n        /* \"#utility.yul\":9269:9276   */\n      dup8\n        /* \"#utility.yul\":9260:9266   */\n      dup3\n        /* \"#utility.yul\":9249:9258   */\n      dup9\n        /* \"#utility.yul\":9245:9267   */\n      add\n        /* \"#utility.yul\":9224:9277   */\n      tag_427\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":9214:9277   */\n      swap3\n      pop\n        /* \"#utility.yul\":9169:9287   */\n      pop\n        /* \"#utility.yul\":9326:9328   */\n      0x60\n        /* \"#utility.yul\":9352:9405   */\n      tag_590\n        /* \"#utility.yul\":9397:9404   */\n      dup8\n        /* \"#utility.yul\":9388:9394   */\n      dup3\n        /* \"#utility.yul\":9377:9386   */\n      dup9\n        /* \"#utility.yul\":9373:9395   */\n      add\n        /* \"#utility.yul\":9352:9405   */\n      tag_427\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":9342:9405   */\n      swap2\n      pop\n        /* \"#utility.yul\":9297:9415   */\n      pop\n        /* \"#utility.yul\":8557:9422   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9428:9581   */\n    tag_446:\n        /* \"#utility.yul\":9505:9514   */\n      0x00\n        /* \"#utility.yul\":9538:9575   */\n      tag_592\n        /* \"#utility.yul\":9569:9574   */\n      dup3\n        /* \"#utility.yul\":9538:9575   */\n      tag_431\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":9525:9575   */\n      swap1\n      pop\n        /* \"#utility.yul\":9428:9581   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9587:9772   */\n    tag_447:\n        /* \"#utility.yul\":9701:9765   */\n      tag_594\n        /* \"#utility.yul\":9759:9764   */\n      dup2\n        /* \"#utility.yul\":9701:9765   */\n      tag_446\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":9696:9699   */\n      dup3\n        /* \"#utility.yul\":9689:9766   */\n      mstore\n        /* \"#utility.yul\":9587:9772   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9778:10054   */\n    tag_126:\n        /* \"#utility.yul\":9898:9902   */\n      0x00\n        /* \"#utility.yul\":9936:9938   */\n      0x20\n        /* \"#utility.yul\":9925:9934   */\n      dup3\n        /* \"#utility.yul\":9921:9939   */\n      add\n        /* \"#utility.yul\":9913:9939   */\n      swap1\n      pop\n        /* \"#utility.yul\":9949:10047   */\n      tag_596\n        /* \"#utility.yul\":10044:10045   */\n      0x00\n        /* \"#utility.yul\":10033:10042   */\n      dup4\n        /* \"#utility.yul\":10029:10046   */\n      add\n        /* \"#utility.yul\":10020:10026   */\n      dup5\n        /* \"#utility.yul\":9949:10047   */\n      tag_447\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":9778:10054   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10060:10534   */\n    tag_129:\n        /* \"#utility.yul\":10128:10134   */\n      0x00\n        /* \"#utility.yul\":10136:10142   */\n      dup1\n        /* \"#utility.yul\":10185:10187   */\n      0x40\n        /* \"#utility.yul\":10173:10182   */\n      dup4\n        /* \"#utility.yul\":10164:10171   */\n      dup6\n        /* \"#utility.yul\":10160:10183   */\n      sub\n        /* \"#utility.yul\":10156:10188   */\n      slt\n        /* \"#utility.yul\":10153:10272   */\n      iszero\n      tag_598\n      jumpi\n        /* \"#utility.yul\":10191:10270   */\n      tag_599\n      tag_424\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":10153:10272   */\n    tag_598:\n        /* \"#utility.yul\":10311:10312   */\n      0x00\n        /* \"#utility.yul\":10336:10389   */\n      tag_600\n        /* \"#utility.yul\":10381:10388   */\n      dup6\n        /* \"#utility.yul\":10372:10378   */\n      dup3\n        /* \"#utility.yul\":10361:10370   */\n      dup7\n        /* \"#utility.yul\":10357:10379   */\n      add\n        /* \"#utility.yul\":10336:10389   */\n      tag_436\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":10326:10389   */\n      swap3\n      pop\n        /* \"#utility.yul\":10282:10399   */\n      pop\n        /* \"#utility.yul\":10438:10440   */\n      0x20\n        /* \"#utility.yul\":10464:10517   */\n      tag_601\n        /* \"#utility.yul\":10509:10516   */\n      dup6\n        /* \"#utility.yul\":10500:10506   */\n      dup3\n        /* \"#utility.yul\":10489:10498   */\n      dup7\n        /* \"#utility.yul\":10485:10507   */\n      add\n        /* \"#utility.yul\":10464:10517   */\n      tag_427\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":10454:10517   */\n      swap2\n      pop\n        /* \"#utility.yul\":10409:10527   */\n      pop\n        /* \"#utility.yul\":10060:10534   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10540:10812   */\n    tag_140:\n        /* \"#utility.yul\":10658:10662   */\n      0x00\n        /* \"#utility.yul\":10696:10698   */\n      0x20\n        /* \"#utility.yul\":10685:10694   */\n      dup3\n        /* \"#utility.yul\":10681:10699   */\n      add\n        /* \"#utility.yul\":10673:10699   */\n      swap1\n      pop\n        /* \"#utility.yul\":10709:10805   */\n      tag_603\n        /* \"#utility.yul\":10802:10803   */\n      0x00\n        /* \"#utility.yul\":10791:10800   */\n      dup4\n        /* \"#utility.yul\":10787:10804   */\n      add\n        /* \"#utility.yul\":10778:10784   */\n      dup5\n        /* \"#utility.yul\":10709:10805   */\n      tag_433\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":10540:10812   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10818:10998   */\n    tag_147:\n        /* \"#utility.yul\":10866:10943   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10863:10864   */\n      0x00\n        /* \"#utility.yul\":10856:10944   */\n      mstore\n        /* \"#utility.yul\":10963:10967   */\n      0x32\n        /* \"#utility.yul\":10960:10961   */\n      0x04\n        /* \"#utility.yul\":10953:10968   */\n      mstore\n        /* \"#utility.yul\":10987:10991   */\n      0x24\n        /* \"#utility.yul\":10984:10985   */\n      0x00\n        /* \"#utility.yul\":10977:10992   */\n      revert\n        /* \"#utility.yul\":11004:11173   */\n    tag_448:\n        /* \"#utility.yul\":11088:11099   */\n      0x00\n        /* \"#utility.yul\":11122:11128   */\n      dup3\n        /* \"#utility.yul\":11117:11120   */\n      dup3\n        /* \"#utility.yul\":11110:11129   */\n      mstore\n        /* \"#utility.yul\":11162:11166   */\n      0x20\n        /* \"#utility.yul\":11157:11160   */\n      dup3\n        /* \"#utility.yul\":11153:11167   */\n      add\n        /* \"#utility.yul\":11138:11167   */\n      swap1\n      pop\n        /* \"#utility.yul\":11004:11173   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11179:11345   */\n    tag_449:\n        /* \"#utility.yul\":11319:11337   */\n      0x4e6f207374616b656420616d6f756e7400000000000000000000000000000000\n        /* \"#utility.yul\":11315:11316   */\n      0x00\n        /* \"#utility.yul\":11307:11313   */\n      dup3\n        /* \"#utility.yul\":11303:11317   */\n      add\n        /* \"#utility.yul\":11296:11338   */\n      mstore\n        /* \"#utility.yul\":11179:11345   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11351:11717   */\n    tag_450:\n        /* \"#utility.yul\":11493:11496   */\n      0x00\n        /* \"#utility.yul\":11514:11581   */\n      tag_608\n        /* \"#utility.yul\":11578:11580   */\n      0x10\n        /* \"#utility.yul\":11573:11576   */\n      dup4\n        /* \"#utility.yul\":11514:11581   */\n      tag_448\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":11507:11581   */\n      swap2\n      pop\n        /* \"#utility.yul\":11590:11683   */\n      tag_609\n        /* \"#utility.yul\":11679:11682   */\n      dup3\n        /* \"#utility.yul\":11590:11683   */\n      tag_449\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":11708:11710   */\n      0x20\n        /* \"#utility.yul\":11703:11706   */\n      dup3\n        /* \"#utility.yul\":11699:11711   */\n      add\n        /* \"#utility.yul\":11692:11711   */\n      swap1\n      pop\n        /* \"#utility.yul\":11351:11717   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11723:12142   */\n    tag_172:\n        /* \"#utility.yul\":11889:11893   */\n      0x00\n        /* \"#utility.yul\":11927:11929   */\n      0x20\n        /* \"#utility.yul\":11916:11925   */\n      dup3\n        /* \"#utility.yul\":11912:11930   */\n      add\n        /* \"#utility.yul\":11904:11930   */\n      swap1\n      pop\n        /* \"#utility.yul\":11976:11985   */\n      dup2\n        /* \"#utility.yul\":11970:11974   */\n      dup2\n        /* \"#utility.yul\":11966:11986   */\n      sub\n        /* \"#utility.yul\":11962:11963   */\n      0x00\n        /* \"#utility.yul\":11951:11960   */\n      dup4\n        /* \"#utility.yul\":11947:11964   */\n      add\n        /* \"#utility.yul\":11940:11987   */\n      mstore\n        /* \"#utility.yul\":12004:12135   */\n      tag_611\n        /* \"#utility.yul\":12130:12134   */\n      dup2\n        /* \"#utility.yul\":12004:12135   */\n      tag_450\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":11996:12135   */\n      swap1\n      pop\n        /* \"#utility.yul\":11723:12142   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12148:12328   */\n    tag_451:\n        /* \"#utility.yul\":12196:12273   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12193:12194   */\n      0x00\n        /* \"#utility.yul\":12186:12274   */\n      mstore\n        /* \"#utility.yul\":12293:12297   */\n      0x11\n        /* \"#utility.yul\":12290:12291   */\n      0x04\n        /* \"#utility.yul\":12283:12298   */\n      mstore\n        /* \"#utility.yul\":12317:12321   */\n      0x24\n        /* \"#utility.yul\":12314:12315   */\n      0x00\n        /* \"#utility.yul\":12307:12322   */\n      revert\n        /* \"#utility.yul\":12334:12528   */\n    tag_174:\n        /* \"#utility.yul\":12374:12378   */\n      0x00\n        /* \"#utility.yul\":12394:12414   */\n      tag_614\n        /* \"#utility.yul\":12412:12413   */\n      dup3\n        /* \"#utility.yul\":12394:12414   */\n      tag_421\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":12389:12414   */\n      swap2\n      pop\n        /* \"#utility.yul\":12428:12448   */\n      tag_615\n        /* \"#utility.yul\":12446:12447   */\n      dup4\n        /* \"#utility.yul\":12428:12448   */\n      tag_421\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":12423:12448   */\n      swap3\n      pop\n        /* \"#utility.yul\":12472:12473   */\n      dup3\n        /* \"#utility.yul\":12469:12470   */\n      dup3\n        /* \"#utility.yul\":12465:12474   */\n      sub\n        /* \"#utility.yul\":12457:12474   */\n      swap1\n      pop\n        /* \"#utility.yul\":12496:12497   */\n      dup2\n        /* \"#utility.yul\":12490:12494   */\n      dup2\n        /* \"#utility.yul\":12487:12498   */\n      gt\n        /* \"#utility.yul\":12484:12521   */\n      iszero\n      tag_616\n      jumpi\n        /* \"#utility.yul\":12501:12519   */\n      tag_617\n      tag_451\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":12484:12521   */\n    tag_616:\n        /* \"#utility.yul\":12334:12528   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12534:12702   */\n    tag_452:\n        /* \"#utility.yul\":12674:12694   */\n      0x436f6e7472616374206973207061757365640000000000000000000000000000\n        /* \"#utility.yul\":12670:12671   */\n      0x00\n        /* \"#utility.yul\":12662:12668   */\n      dup3\n        /* \"#utility.yul\":12658:12672   */\n      add\n        /* \"#utility.yul\":12651:12695   */\n      mstore\n        /* \"#utility.yul\":12534:12702   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12708:13074   */\n    tag_453:\n        /* \"#utility.yul\":12850:12853   */\n      0x00\n        /* \"#utility.yul\":12871:12938   */\n      tag_620\n        /* \"#utility.yul\":12935:12937   */\n      0x12\n        /* \"#utility.yul\":12930:12933   */\n      dup4\n        /* \"#utility.yul\":12871:12938   */\n      tag_448\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":12864:12938   */\n      swap2\n      pop\n        /* \"#utility.yul\":12947:13040   */\n      tag_621\n        /* \"#utility.yul\":13036:13039   */\n      dup3\n        /* \"#utility.yul\":12947:13040   */\n      tag_452\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":13065:13067   */\n      0x20\n        /* \"#utility.yul\":13060:13063   */\n      dup3\n        /* \"#utility.yul\":13056:13068   */\n      add\n        /* \"#utility.yul\":13049:13068   */\n      swap1\n      pop\n        /* \"#utility.yul\":12708:13074   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13080:13499   */\n    tag_190:\n        /* \"#utility.yul\":13246:13250   */\n      0x00\n        /* \"#utility.yul\":13284:13286   */\n      0x20\n        /* \"#utility.yul\":13273:13282   */\n      dup3\n        /* \"#utility.yul\":13269:13287   */\n      add\n        /* \"#utility.yul\":13261:13287   */\n      swap1\n      pop\n        /* \"#utility.yul\":13333:13342   */\n      dup2\n        /* \"#utility.yul\":13327:13331   */\n      dup2\n        /* \"#utility.yul\":13323:13343   */\n      sub\n        /* \"#utility.yul\":13319:13320   */\n      0x00\n        /* \"#utility.yul\":13308:13317   */\n      dup4\n        /* \"#utility.yul\":13304:13321   */\n      add\n        /* \"#utility.yul\":13297:13344   */\n      mstore\n        /* \"#utility.yul\":13361:13492   */\n      tag_623\n        /* \"#utility.yul\":13487:13491   */\n      dup2\n        /* \"#utility.yul\":13361:13492   */\n      tag_453\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":13353:13492   */\n      swap1\n      pop\n        /* \"#utility.yul\":13080:13499   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13505:13669   */\n    tag_454:\n        /* \"#utility.yul\":13645:13661   */\n      0x43616e6e6f74207374616b652030000000000000000000000000000000000000\n        /* \"#utility.yul\":13641:13642   */\n      0x00\n        /* \"#utility.yul\":13633:13639   */\n      dup3\n        /* \"#utility.yul\":13629:13643   */\n      add\n        /* \"#utility.yul\":13622:13662   */\n      mstore\n        /* \"#utility.yul\":13505:13669   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13675:14041   */\n    tag_455:\n        /* \"#utility.yul\":13817:13820   */\n      0x00\n        /* \"#utility.yul\":13838:13905   */\n      tag_626\n        /* \"#utility.yul\":13902:13904   */\n      0x0e\n        /* \"#utility.yul\":13897:13900   */\n      dup4\n        /* \"#utility.yul\":13838:13905   */\n      tag_448\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":13831:13905   */\n      swap2\n      pop\n        /* \"#utility.yul\":13914:14007   */\n      tag_627\n        /* \"#utility.yul\":14003:14006   */\n      dup3\n        /* \"#utility.yul\":13914:14007   */\n      tag_454\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":14032:14034   */\n      0x20\n        /* \"#utility.yul\":14027:14030   */\n      dup3\n        /* \"#utility.yul\":14023:14035   */\n      add\n        /* \"#utility.yul\":14016:14035   */\n      swap1\n      pop\n        /* \"#utility.yul\":13675:14041   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14047:14466   */\n    tag_194:\n        /* \"#utility.yul\":14213:14217   */\n      0x00\n        /* \"#utility.yul\":14251:14253   */\n      0x20\n        /* \"#utility.yul\":14240:14249   */\n      dup3\n        /* \"#utility.yul\":14236:14254   */\n      add\n        /* \"#utility.yul\":14228:14254   */\n      swap1\n      pop\n        /* \"#utility.yul\":14300:14309   */\n      dup2\n        /* \"#utility.yul\":14294:14298   */\n      dup2\n        /* \"#utility.yul\":14290:14310   */\n      sub\n        /* \"#utility.yul\":14286:14287   */\n      0x00\n        /* \"#utility.yul\":14275:14284   */\n      dup4\n        /* \"#utility.yul\":14271:14288   */\n      add\n        /* \"#utility.yul\":14264:14311   */\n      mstore\n        /* \"#utility.yul\":14328:14459   */\n      tag_629\n        /* \"#utility.yul\":14454:14458   */\n      dup2\n        /* \"#utility.yul\":14328:14459   */\n      tag_455\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":14320:14459   */\n      swap1\n      pop\n        /* \"#utility.yul\":14047:14466   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14472:14663   */\n    tag_205:\n        /* \"#utility.yul\":14512:14515   */\n      0x00\n        /* \"#utility.yul\":14531:14551   */\n      tag_631\n        /* \"#utility.yul\":14549:14550   */\n      dup3\n        /* \"#utility.yul\":14531:14551   */\n      tag_421\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":14526:14551   */\n      swap2\n      pop\n        /* \"#utility.yul\":14565:14585   */\n      tag_632\n        /* \"#utility.yul\":14583:14584   */\n      dup4\n        /* \"#utility.yul\":14565:14585   */\n      tag_421\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":14560:14585   */\n      swap3\n      pop\n        /* \"#utility.yul\":14608:14609   */\n      dup3\n        /* \"#utility.yul\":14605:14606   */\n      dup3\n        /* \"#utility.yul\":14601:14610   */\n      add\n        /* \"#utility.yul\":14594:14610   */\n      swap1\n      pop\n        /* \"#utility.yul\":14629:14632   */\n      dup1\n        /* \"#utility.yul\":14626:14627   */\n      dup3\n        /* \"#utility.yul\":14623:14633   */\n      gt\n        /* \"#utility.yul\":14620:14656   */\n      iszero\n      tag_633\n      jumpi\n        /* \"#utility.yul\":14636:14654   */\n      tag_634\n      tag_451\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":14620:14656   */\n    tag_633:\n        /* \"#utility.yul\":14472:14663   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14669:15001   */\n    tag_209:\n        /* \"#utility.yul\":14790:14794   */\n      0x00\n        /* \"#utility.yul\":14828:14830   */\n      0x40\n        /* \"#utility.yul\":14817:14826   */\n      dup3\n        /* \"#utility.yul\":14813:14831   */\n      add\n        /* \"#utility.yul\":14805:14831   */\n      swap1\n      pop\n        /* \"#utility.yul\":14841:14912   */\n      tag_636\n        /* \"#utility.yul\":14909:14910   */\n      0x00\n        /* \"#utility.yul\":14898:14907   */\n      dup4\n        /* \"#utility.yul\":14894:14911   */\n      add\n        /* \"#utility.yul\":14885:14891   */\n      dup6\n        /* \"#utility.yul\":14841:14912   */\n      tag_422\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":14922:14994   */\n      tag_637\n        /* \"#utility.yul\":14990:14992   */\n      0x20\n        /* \"#utility.yul\":14979:14988   */\n      dup4\n        /* \"#utility.yul\":14975:14993   */\n      add\n        /* \"#utility.yul\":14966:14972   */\n      dup5\n        /* \"#utility.yul\":14922:14994   */\n      tag_422\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":14669:15001   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15007:15092   */\n    tag_456:\n        /* \"#utility.yul\":15052:15059   */\n      0x00\n        /* \"#utility.yul\":15081:15086   */\n      dup2\n        /* \"#utility.yul\":15070:15086   */\n      swap1\n      pop\n        /* \"#utility.yul\":15007:15092   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15098:15199   */\n    tag_457:\n        /* \"#utility.yul\":15134:15141   */\n      0x00\n        /* \"#utility.yul\":15174:15192   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":15167:15172   */\n      dup3\n        /* \"#utility.yul\":15163:15193   */\n      and\n        /* \"#utility.yul\":15152:15193   */\n      swap1\n      pop\n        /* \"#utility.yul\":15098:15199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15205:15361   */\n    tag_458:\n        /* \"#utility.yul\":15262:15271   */\n      0x00\n        /* \"#utility.yul\":15295:15355   */\n      tag_641\n        /* \"#utility.yul\":15312:15354   */\n      tag_642\n        /* \"#utility.yul\":15321:15353   */\n      tag_643\n        /* \"#utility.yul\":15347:15352   */\n      dup5\n        /* \"#utility.yul\":15321:15353   */\n      tag_456\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":15312:15354   */\n      tag_429\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":15295:15355   */\n      tag_457\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":15282:15355   */\n      swap1\n      pop\n        /* \"#utility.yul\":15205:15361   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15367:15512   */\n    tag_459:\n        /* \"#utility.yul\":15461:15505   */\n      tag_645\n        /* \"#utility.yul\":15499:15504   */\n      dup2\n        /* \"#utility.yul\":15461:15505   */\n      tag_458\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":15456:15459   */\n      dup3\n        /* \"#utility.yul\":15449:15506   */\n      mstore\n        /* \"#utility.yul\":15367:15512   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15518:15754   */\n    tag_229:\n        /* \"#utility.yul\":15618:15622   */\n      0x00\n        /* \"#utility.yul\":15656:15658   */\n      0x20\n        /* \"#utility.yul\":15645:15654   */\n      dup3\n        /* \"#utility.yul\":15641:15659   */\n      add\n        /* \"#utility.yul\":15633:15659   */\n      swap1\n      pop\n        /* \"#utility.yul\":15669:15747   */\n      tag_647\n        /* \"#utility.yul\":15744:15745   */\n      0x00\n        /* \"#utility.yul\":15733:15742   */\n      dup4\n        /* \"#utility.yul\":15729:15746   */\n      add\n        /* \"#utility.yul\":15720:15726   */\n      dup5\n        /* \"#utility.yul\":15669:15747   */\n      tag_459\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":15518:15754   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15760:15936   */\n    tag_460:\n        /* \"#utility.yul\":15900:15928   */\n      0x496e73756666696369656e74207374616b656420616d6f756e74000000000000\n        /* \"#utility.yul\":15896:15897   */\n      0x00\n        /* \"#utility.yul\":15888:15894   */\n      dup3\n        /* \"#utility.yul\":15884:15898   */\n      add\n        /* \"#utility.yul\":15877:15929   */\n      mstore\n        /* \"#utility.yul\":15760:15936   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15942:16308   */\n    tag_461:\n        /* \"#utility.yul\":16084:16087   */\n      0x00\n        /* \"#utility.yul\":16105:16172   */\n      tag_650\n        /* \"#utility.yul\":16169:16171   */\n      0x1a\n        /* \"#utility.yul\":16164:16167   */\n      dup4\n        /* \"#utility.yul\":16105:16172   */\n      tag_448\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":16098:16172   */\n      swap2\n      pop\n        /* \"#utility.yul\":16181:16274   */\n      tag_651\n        /* \"#utility.yul\":16270:16273   */\n      dup3\n        /* \"#utility.yul\":16181:16274   */\n      tag_460\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":16299:16301   */\n      0x20\n        /* \"#utility.yul\":16294:16297   */\n      dup3\n        /* \"#utility.yul\":16290:16302   */\n      add\n        /* \"#utility.yul\":16283:16302   */\n      swap1\n      pop\n        /* \"#utility.yul\":15942:16308   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16314:16733   */\n    tag_241:\n        /* \"#utility.yul\":16480:16484   */\n      0x00\n        /* \"#utility.yul\":16518:16520   */\n      0x20\n        /* \"#utility.yul\":16507:16516   */\n      dup3\n        /* \"#utility.yul\":16503:16521   */\n      add\n        /* \"#utility.yul\":16495:16521   */\n      swap1\n      pop\n        /* \"#utility.yul\":16567:16576   */\n      dup2\n        /* \"#utility.yul\":16561:16565   */\n      dup2\n        /* \"#utility.yul\":16557:16577   */\n      sub\n        /* \"#utility.yul\":16553:16554   */\n      0x00\n        /* \"#utility.yul\":16542:16551   */\n      dup4\n        /* \"#utility.yul\":16538:16555   */\n      add\n        /* \"#utility.yul\":16531:16578   */\n      mstore\n        /* \"#utility.yul\":16595:16726   */\n      tag_653\n        /* \"#utility.yul\":16721:16725   */\n      dup2\n        /* \"#utility.yul\":16595:16726   */\n      tag_461\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":16587:16726   */\n      swap1\n      pop\n        /* \"#utility.yul\":16314:16733   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16739:16910   */\n    tag_462:\n        /* \"#utility.yul\":16879:16902   */\n      0x5374616b65206973207374696c6c206c6f636b65640000000000000000000000\n        /* \"#utility.yul\":16875:16876   */\n      0x00\n        /* \"#utility.yul\":16867:16873   */\n      dup3\n        /* \"#utility.yul\":16863:16877   */\n      add\n        /* \"#utility.yul\":16856:16903   */\n      mstore\n        /* \"#utility.yul\":16739:16910   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16916:17282   */\n    tag_463:\n        /* \"#utility.yul\":17058:17061   */\n      0x00\n        /* \"#utility.yul\":17079:17146   */\n      tag_656\n        /* \"#utility.yul\":17143:17145   */\n      0x15\n        /* \"#utility.yul\":17138:17141   */\n      dup4\n        /* \"#utility.yul\":17079:17146   */\n      tag_448\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":17072:17146   */\n      swap2\n      pop\n        /* \"#utility.yul\":17155:17248   */\n      tag_657\n        /* \"#utility.yul\":17244:17247   */\n      dup3\n        /* \"#utility.yul\":17155:17248   */\n      tag_462\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":17273:17275   */\n      0x20\n        /* \"#utility.yul\":17268:17271   */\n      dup3\n        /* \"#utility.yul\":17264:17276   */\n      add\n        /* \"#utility.yul\":17257:17276   */\n      swap1\n      pop\n        /* \"#utility.yul\":16916:17282   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17288:17707   */\n    tag_244:\n        /* \"#utility.yul\":17454:17458   */\n      0x00\n        /* \"#utility.yul\":17492:17494   */\n      0x20\n        /* \"#utility.yul\":17481:17490   */\n      dup3\n        /* \"#utility.yul\":17477:17495   */\n      add\n        /* \"#utility.yul\":17469:17495   */\n      swap1\n      pop\n        /* \"#utility.yul\":17541:17550   */\n      dup2\n        /* \"#utility.yul\":17535:17539   */\n      dup2\n        /* \"#utility.yul\":17531:17551   */\n      sub\n        /* \"#utility.yul\":17527:17528   */\n      0x00\n        /* \"#utility.yul\":17516:17525   */\n      dup4\n        /* \"#utility.yul\":17512:17529   */\n      add\n        /* \"#utility.yul\":17505:17552   */\n      mstore\n        /* \"#utility.yul\":17569:17700   */\n      tag_659\n        /* \"#utility.yul\":17695:17699   */\n      dup2\n        /* \"#utility.yul\":17569:17700   */\n      tag_463\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":17561:17700   */\n      swap1\n      pop\n        /* \"#utility.yul\":17288:17707   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17713:17883   */\n    tag_464:\n        /* \"#utility.yul\":17853:17875   */\n      0x526566657272657220616c726561647920736574000000000000000000000000\n        /* \"#utility.yul\":17849:17850   */\n      0x00\n        /* \"#utility.yul\":17841:17847   */\n      dup3\n        /* \"#utility.yul\":17837:17851   */\n      add\n        /* \"#utility.yul\":17830:17876   */\n      mstore\n        /* \"#utility.yul\":17713:17883   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17889:18255   */\n    tag_465:\n        /* \"#utility.yul\":18031:18034   */\n      0x00\n        /* \"#utility.yul\":18052:18119   */\n      tag_662\n        /* \"#utility.yul\":18116:18118   */\n      0x14\n        /* \"#utility.yul\":18111:18114   */\n      dup4\n        /* \"#utility.yul\":18052:18119   */\n      tag_448\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":18045:18119   */\n      swap2\n      pop\n        /* \"#utility.yul\":18128:18221   */\n      tag_663\n        /* \"#utility.yul\":18217:18220   */\n      dup3\n        /* \"#utility.yul\":18128:18221   */\n      tag_464\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":18246:18248   */\n      0x20\n        /* \"#utility.yul\":18241:18244   */\n      dup3\n        /* \"#utility.yul\":18237:18249   */\n      add\n        /* \"#utility.yul\":18230:18249   */\n      swap1\n      pop\n        /* \"#utility.yul\":17889:18255   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18261:18680   */\n    tag_255:\n        /* \"#utility.yul\":18427:18431   */\n      0x00\n        /* \"#utility.yul\":18465:18467   */\n      0x20\n        /* \"#utility.yul\":18454:18463   */\n      dup3\n        /* \"#utility.yul\":18450:18468   */\n      add\n        /* \"#utility.yul\":18442:18468   */\n      swap1\n      pop\n        /* \"#utility.yul\":18514:18523   */\n      dup2\n        /* \"#utility.yul\":18508:18512   */\n      dup2\n        /* \"#utility.yul\":18504:18524   */\n      sub\n        /* \"#utility.yul\":18500:18501   */\n      0x00\n        /* \"#utility.yul\":18489:18498   */\n      dup4\n        /* \"#utility.yul\":18485:18502   */\n      add\n        /* \"#utility.yul\":18478:18525   */\n      mstore\n        /* \"#utility.yul\":18542:18673   */\n      tag_665\n        /* \"#utility.yul\":18668:18672   */\n      dup2\n        /* \"#utility.yul\":18542:18673   */\n      tag_465\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":18534:18673   */\n      swap1\n      pop\n        /* \"#utility.yul\":18261:18680   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18686:18857   */\n    tag_466:\n        /* \"#utility.yul\":18826:18849   */\n      0x43616e6e6f7420726566657220796f757273656c660000000000000000000000\n        /* \"#utility.yul\":18822:18823   */\n      0x00\n        /* \"#utility.yul\":18814:18820   */\n      dup3\n        /* \"#utility.yul\":18810:18824   */\n      add\n        /* \"#utility.yul\":18803:18850   */\n      mstore\n        /* \"#utility.yul\":18686:18857   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18863:19229   */\n    tag_467:\n        /* \"#utility.yul\":19005:19008   */\n      0x00\n        /* \"#utility.yul\":19026:19093   */\n      tag_668\n        /* \"#utility.yul\":19090:19092   */\n      0x15\n        /* \"#utility.yul\":19085:19088   */\n      dup4\n        /* \"#utility.yul\":19026:19093   */\n      tag_448\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":19019:19093   */\n      swap2\n      pop\n        /* \"#utility.yul\":19102:19195   */\n      tag_669\n        /* \"#utility.yul\":19191:19194   */\n      dup3\n        /* \"#utility.yul\":19102:19195   */\n      tag_466\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":19220:19222   */\n      0x20\n        /* \"#utility.yul\":19215:19218   */\n      dup3\n        /* \"#utility.yul\":19211:19223   */\n      add\n        /* \"#utility.yul\":19204:19223   */\n      swap1\n      pop\n        /* \"#utility.yul\":18863:19229   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19235:19654   */\n    tag_258:\n        /* \"#utility.yul\":19401:19405   */\n      0x00\n        /* \"#utility.yul\":19439:19441   */\n      0x20\n        /* \"#utility.yul\":19428:19437   */\n      dup3\n        /* \"#utility.yul\":19424:19442   */\n      add\n        /* \"#utility.yul\":19416:19442   */\n      swap1\n      pop\n        /* \"#utility.yul\":19488:19497   */\n      dup2\n        /* \"#utility.yul\":19482:19486   */\n      dup2\n        /* \"#utility.yul\":19478:19498   */\n      sub\n        /* \"#utility.yul\":19474:19475   */\n      0x00\n        /* \"#utility.yul\":19463:19472   */\n      dup4\n        /* \"#utility.yul\":19459:19476   */\n      add\n        /* \"#utility.yul\":19452:19499   */\n      mstore\n        /* \"#utility.yul\":19516:19647   */\n      tag_671\n        /* \"#utility.yul\":19642:19646   */\n      dup2\n        /* \"#utility.yul\":19516:19647   */\n      tag_467\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":19508:19647   */\n      swap1\n      pop\n        /* \"#utility.yul\":19235:19654   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19660:20213   */\n    tag_278:\n        /* \"#utility.yul\":19837:19841   */\n      0x00\n        /* \"#utility.yul\":19875:19878   */\n      0x80\n        /* \"#utility.yul\":19864:19873   */\n      dup3\n        /* \"#utility.yul\":19860:19879   */\n      add\n        /* \"#utility.yul\":19852:19879   */\n      swap1\n      pop\n        /* \"#utility.yul\":19889:19960   */\n      tag_673\n        /* \"#utility.yul\":19957:19958   */\n      0x00\n        /* \"#utility.yul\":19946:19955   */\n      dup4\n        /* \"#utility.yul\":19942:19959   */\n      add\n        /* \"#utility.yul\":19933:19939   */\n      dup8\n        /* \"#utility.yul\":19889:19960   */\n      tag_437\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":19970:20042   */\n      tag_674\n        /* \"#utility.yul\":20038:20040   */\n      0x20\n        /* \"#utility.yul\":20027:20036   */\n      dup4\n        /* \"#utility.yul\":20023:20041   */\n      add\n        /* \"#utility.yul\":20014:20020   */\n      dup7\n        /* \"#utility.yul\":19970:20042   */\n      tag_437\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":20052:20124   */\n      tag_675\n        /* \"#utility.yul\":20120:20122   */\n      0x40\n        /* \"#utility.yul\":20109:20118   */\n      dup4\n        /* \"#utility.yul\":20105:20123   */\n      add\n        /* \"#utility.yul\":20096:20102   */\n      dup6\n        /* \"#utility.yul\":20052:20124   */\n      tag_422\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":20134:20206   */\n      tag_676\n        /* \"#utility.yul\":20202:20204   */\n      0x60\n        /* \"#utility.yul\":20191:20200   */\n      dup4\n        /* \"#utility.yul\":20187:20205   */\n      add\n        /* \"#utility.yul\":20178:20184   */\n      dup5\n        /* \"#utility.yul\":20134:20206   */\n      tag_422\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":19660:20213   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20219:20400   */\n    tag_468:\n        /* \"#utility.yul\":20359:20392   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":20355:20356   */\n      0x00\n        /* \"#utility.yul\":20347:20353   */\n      dup3\n        /* \"#utility.yul\":20343:20357   */\n      add\n        /* \"#utility.yul\":20336:20393   */\n      mstore\n        /* \"#utility.yul\":20219:20400   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20406:20772   */\n    tag_469:\n        /* \"#utility.yul\":20548:20551   */\n      0x00\n        /* \"#utility.yul\":20569:20636   */\n      tag_679\n        /* \"#utility.yul\":20633:20635   */\n      0x1f\n        /* \"#utility.yul\":20628:20631   */\n      dup4\n        /* \"#utility.yul\":20569:20636   */\n      tag_448\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":20562:20636   */\n      swap2\n      pop\n        /* \"#utility.yul\":20645:20738   */\n      tag_680\n        /* \"#utility.yul\":20734:20737   */\n      dup3\n        /* \"#utility.yul\":20645:20738   */\n      tag_468\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":20763:20765   */\n      0x20\n        /* \"#utility.yul\":20758:20761   */\n      dup3\n        /* \"#utility.yul\":20754:20766   */\n      add\n        /* \"#utility.yul\":20747:20766   */\n      swap1\n      pop\n        /* \"#utility.yul\":20406:20772   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20778:21197   */\n    tag_299:\n        /* \"#utility.yul\":20944:20948   */\n      0x00\n        /* \"#utility.yul\":20982:20984   */\n      0x20\n        /* \"#utility.yul\":20971:20980   */\n      dup3\n        /* \"#utility.yul\":20967:20985   */\n      add\n        /* \"#utility.yul\":20959:20985   */\n      swap1\n      pop\n        /* \"#utility.yul\":21031:21040   */\n      dup2\n        /* \"#utility.yul\":21025:21029   */\n      dup2\n        /* \"#utility.yul\":21021:21041   */\n      sub\n        /* \"#utility.yul\":21017:21018   */\n      0x00\n        /* \"#utility.yul\":21006:21015   */\n      dup4\n        /* \"#utility.yul\":21002:21019   */\n      add\n        /* \"#utility.yul\":20995:21042   */\n      mstore\n        /* \"#utility.yul\":21059:21190   */\n      tag_682\n        /* \"#utility.yul\":21185:21189   */\n      dup2\n        /* \"#utility.yul\":21059:21190   */\n      tag_469\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":21051:21190   */\n      swap1\n      pop\n        /* \"#utility.yul\":20778:21197   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21203:21535   */\n    tag_303:\n        /* \"#utility.yul\":21324:21328   */\n      0x00\n        /* \"#utility.yul\":21362:21364   */\n      0x40\n        /* \"#utility.yul\":21351:21360   */\n      dup3\n        /* \"#utility.yul\":21347:21365   */\n      add\n        /* \"#utility.yul\":21339:21365   */\n      swap1\n      pop\n        /* \"#utility.yul\":21375:21446   */\n      tag_684\n        /* \"#utility.yul\":21443:21444   */\n      0x00\n        /* \"#utility.yul\":21432:21441   */\n      dup4\n        /* \"#utility.yul\":21428:21445   */\n      add\n        /* \"#utility.yul\":21419:21425   */\n      dup6\n        /* \"#utility.yul\":21375:21446   */\n      tag_437\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":21456:21528   */\n      tag_685\n        /* \"#utility.yul\":21524:21526   */\n      0x20\n        /* \"#utility.yul\":21513:21522   */\n      dup4\n        /* \"#utility.yul\":21509:21527   */\n      add\n        /* \"#utility.yul\":21500:21506   */\n      dup5\n        /* \"#utility.yul\":21456:21528   */\n      tag_422\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":21203:21535   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21541:21951   */\n    tag_315:\n        /* \"#utility.yul\":21581:21588   */\n      0x00\n        /* \"#utility.yul\":21604:21624   */\n      tag_687\n        /* \"#utility.yul\":21622:21623   */\n      dup3\n        /* \"#utility.yul\":21604:21624   */\n      tag_421\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":21599:21624   */\n      swap2\n      pop\n        /* \"#utility.yul\":21638:21658   */\n      tag_688\n        /* \"#utility.yul\":21656:21657   */\n      dup4\n        /* \"#utility.yul\":21638:21658   */\n      tag_421\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":21633:21658   */\n      swap3\n      pop\n        /* \"#utility.yul\":21693:21694   */\n      dup3\n        /* \"#utility.yul\":21690:21691   */\n      dup3\n        /* \"#utility.yul\":21686:21695   */\n      mul\n        /* \"#utility.yul\":21715:21745   */\n      tag_689\n        /* \"#utility.yul\":21733:21744   */\n      dup2\n        /* \"#utility.yul\":21715:21745   */\n      tag_421\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":21704:21745   */\n      swap2\n      pop\n        /* \"#utility.yul\":21894:21895   */\n      dup3\n        /* \"#utility.yul\":21885:21892   */\n      dup3\n        /* \"#utility.yul\":21881:21896   */\n      div\n        /* \"#utility.yul\":21878:21879   */\n      dup5\n        /* \"#utility.yul\":21875:21897   */\n      eq\n        /* \"#utility.yul\":21855:21856   */\n      dup4\n        /* \"#utility.yul\":21848:21857   */\n      iszero\n        /* \"#utility.yul\":21828:21911   */\n      or\n        /* \"#utility.yul\":21805:21944   */\n      tag_690\n      jumpi\n        /* \"#utility.yul\":21924:21942   */\n      tag_691\n      tag_451\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":21805:21944   */\n    tag_690:\n        /* \"#utility.yul\":21589:21951   */\n      pop\n        /* \"#utility.yul\":21541:21951   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21957:22137   */\n    tag_470:\n        /* \"#utility.yul\":22005:22082   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22002:22003   */\n      0x00\n        /* \"#utility.yul\":21995:22083   */\n      mstore\n        /* \"#utility.yul\":22102:22106   */\n      0x12\n        /* \"#utility.yul\":22099:22100   */\n      0x04\n        /* \"#utility.yul\":22092:22107   */\n      mstore\n        /* \"#utility.yul\":22126:22130   */\n      0x24\n        /* \"#utility.yul\":22123:22124   */\n      0x00\n        /* \"#utility.yul\":22116:22131   */\n      revert\n        /* \"#utility.yul\":22143:22328   */\n    tag_318:\n        /* \"#utility.yul\":22183:22184   */\n      0x00\n        /* \"#utility.yul\":22200:22220   */\n      tag_694\n        /* \"#utility.yul\":22218:22219   */\n      dup3\n        /* \"#utility.yul\":22200:22220   */\n      tag_421\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":22195:22220   */\n      swap2\n      pop\n        /* \"#utility.yul\":22234:22254   */\n      tag_695\n        /* \"#utility.yul\":22252:22253   */\n      dup4\n        /* \"#utility.yul\":22234:22254   */\n      tag_421\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":22229:22254   */\n      swap3\n      pop\n        /* \"#utility.yul\":22273:22274   */\n      dup3\n        /* \"#utility.yul\":22263:22298   */\n      tag_696\n      jumpi\n        /* \"#utility.yul\":22278:22296   */\n      tag_697\n      tag_470\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":22263:22298   */\n    tag_696:\n        /* \"#utility.yul\":22320:22321   */\n      dup3\n        /* \"#utility.yul\":22317:22318   */\n      dup3\n        /* \"#utility.yul\":22313:22322   */\n      div\n        /* \"#utility.yul\":22308:22322   */\n      swap1\n      pop\n        /* \"#utility.yul\":22143:22328   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22334:22477   */\n    tag_471:\n        /* \"#utility.yul\":22391:22396   */\n      0x00\n        /* \"#utility.yul\":22422:22428   */\n      dup2\n        /* \"#utility.yul\":22416:22429   */\n      mload\n        /* \"#utility.yul\":22407:22429   */\n      swap1\n      pop\n        /* \"#utility.yul\":22438:22471   */\n      tag_699\n        /* \"#utility.yul\":22465:22470   */\n      dup2\n        /* \"#utility.yul\":22438:22471   */\n      tag_426\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":22334:22477   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22483:22834   */\n    tag_339:\n        /* \"#utility.yul\":22553:22559   */\n      0x00\n        /* \"#utility.yul\":22602:22604   */\n      0x20\n        /* \"#utility.yul\":22590:22599   */\n      dup3\n        /* \"#utility.yul\":22581:22588   */\n      dup5\n        /* \"#utility.yul\":22577:22600   */\n      sub\n        /* \"#utility.yul\":22573:22605   */\n      slt\n        /* \"#utility.yul\":22570:22689   */\n      iszero\n      tag_701\n      jumpi\n        /* \"#utility.yul\":22608:22687   */\n      tag_702\n      tag_424\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":22570:22689   */\n    tag_701:\n        /* \"#utility.yul\":22728:22729   */\n      0x00\n        /* \"#utility.yul\":22753:22817   */\n      tag_703\n        /* \"#utility.yul\":22809:22816   */\n      dup5\n        /* \"#utility.yul\":22800:22806   */\n      dup3\n        /* \"#utility.yul\":22789:22798   */\n      dup6\n        /* \"#utility.yul\":22785:22807   */\n      add\n        /* \"#utility.yul\":22753:22817   */\n      tag_471\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":22743:22817   */\n      swap2\n      pop\n        /* \"#utility.yul\":22699:22827   */\n      pop\n        /* \"#utility.yul\":22483:22834   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22840:23282   */\n    tag_347:\n        /* \"#utility.yul\":22989:22993   */\n      0x00\n        /* \"#utility.yul\":23027:23029   */\n      0x60\n        /* \"#utility.yul\":23016:23025   */\n      dup3\n        /* \"#utility.yul\":23012:23030   */\n      add\n        /* \"#utility.yul\":23004:23030   */\n      swap1\n      pop\n        /* \"#utility.yul\":23040:23111   */\n      tag_705\n        /* \"#utility.yul\":23108:23109   */\n      0x00\n        /* \"#utility.yul\":23097:23106   */\n      dup4\n        /* \"#utility.yul\":23093:23110   */\n      add\n        /* \"#utility.yul\":23084:23090   */\n      dup7\n        /* \"#utility.yul\":23040:23111   */\n      tag_437\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":23121:23193   */\n      tag_706\n        /* \"#utility.yul\":23189:23191   */\n      0x20\n        /* \"#utility.yul\":23178:23187   */\n      dup4\n        /* \"#utility.yul\":23174:23192   */\n      add\n        /* \"#utility.yul\":23165:23171   */\n      dup6\n        /* \"#utility.yul\":23121:23193   */\n      tag_437\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":23203:23275   */\n      tag_707\n        /* \"#utility.yul\":23271:23273   */\n      0x40\n        /* \"#utility.yul\":23260:23269   */\n      dup4\n        /* \"#utility.yul\":23256:23274   */\n      add\n        /* \"#utility.yul\":23247:23253   */\n      dup5\n        /* \"#utility.yul\":23203:23275   */\n      tag_422\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":22840:23282   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23288:23404   */\n    tag_472:\n        /* \"#utility.yul\":23358:23379   */\n      tag_709\n        /* \"#utility.yul\":23373:23378   */\n      dup2\n        /* \"#utility.yul\":23358:23379   */\n      tag_438\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":23351:23356   */\n      dup2\n        /* \"#utility.yul\":23348:23380   */\n      eq\n        /* \"#utility.yul\":23338:23398   */\n      tag_710\n      jumpi\n        /* \"#utility.yul\":23394:23395   */\n      0x00\n        /* \"#utility.yul\":23391:23392   */\n      dup1\n        /* \"#utility.yul\":23384:23396   */\n      revert\n        /* \"#utility.yul\":23338:23398   */\n    tag_710:\n        /* \"#utility.yul\":23288:23404   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23410:23547   */\n    tag_473:\n        /* \"#utility.yul\":23464:23469   */\n      0x00\n        /* \"#utility.yul\":23495:23501   */\n      dup2\n        /* \"#utility.yul\":23489:23502   */\n      mload\n        /* \"#utility.yul\":23480:23502   */\n      swap1\n      pop\n        /* \"#utility.yul\":23511:23541   */\n      tag_712\n        /* \"#utility.yul\":23535:23540   */\n      dup2\n        /* \"#utility.yul\":23511:23541   */\n      tag_472\n      jump\t// in\n    tag_712:\n        /* \"#utility.yul\":23410:23547   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23553:23898   */\n    tag_367:\n        /* \"#utility.yul\":23620:23626   */\n      0x00\n        /* \"#utility.yul\":23669:23671   */\n      0x20\n        /* \"#utility.yul\":23657:23666   */\n      dup3\n        /* \"#utility.yul\":23648:23655   */\n      dup5\n        /* \"#utility.yul\":23644:23667   */\n      sub\n        /* \"#utility.yul\":23640:23672   */\n      slt\n        /* \"#utility.yul\":23637:23756   */\n      iszero\n      tag_714\n      jumpi\n        /* \"#utility.yul\":23675:23754   */\n      tag_715\n      tag_424\n      jump\t// in\n    tag_715:\n        /* \"#utility.yul\":23637:23756   */\n    tag_714:\n        /* \"#utility.yul\":23795:23796   */\n      0x00\n        /* \"#utility.yul\":23820:23881   */\n      tag_716\n        /* \"#utility.yul\":23873:23880   */\n      dup5\n        /* \"#utility.yul\":23864:23870   */\n      dup3\n        /* \"#utility.yul\":23853:23862   */\n      dup6\n        /* \"#utility.yul\":23849:23871   */\n      add\n        /* \"#utility.yul\":23820:23881   */\n      tag_473\n      jump\t// in\n    tag_716:\n        /* \"#utility.yul\":23810:23881   */\n      swap2\n      pop\n        /* \"#utility.yul\":23766:23891   */\n      pop\n        /* \"#utility.yul\":23553:23898   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23904:24133   */\n    tag_474:\n        /* \"#utility.yul\":24044:24078   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":24040:24041   */\n      0x00\n        /* \"#utility.yul\":24032:24038   */\n      dup3\n        /* \"#utility.yul\":24028:24042   */\n      add\n        /* \"#utility.yul\":24021:24079   */\n      mstore\n        /* \"#utility.yul\":24113:24125   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24108:24110   */\n      0x20\n        /* \"#utility.yul\":24100:24106   */\n      dup3\n        /* \"#utility.yul\":24096:24111   */\n      add\n        /* \"#utility.yul\":24089:24126   */\n      mstore\n        /* \"#utility.yul\":23904:24133   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24139:24505   */\n    tag_475:\n        /* \"#utility.yul\":24281:24284   */\n      0x00\n        /* \"#utility.yul\":24302:24369   */\n      tag_719\n        /* \"#utility.yul\":24366:24368   */\n      0x2a\n        /* \"#utility.yul\":24361:24364   */\n      dup4\n        /* \"#utility.yul\":24302:24369   */\n      tag_448\n      jump\t// in\n    tag_719:\n        /* \"#utility.yul\":24295:24369   */\n      swap2\n      pop\n        /* \"#utility.yul\":24378:24471   */\n      tag_720\n        /* \"#utility.yul\":24467:24470   */\n      dup3\n        /* \"#utility.yul\":24378:24471   */\n      tag_474\n      jump\t// in\n    tag_720:\n        /* \"#utility.yul\":24496:24498   */\n      0x40\n        /* \"#utility.yul\":24491:24494   */\n      dup3\n        /* \"#utility.yul\":24487:24499   */\n      add\n        /* \"#utility.yul\":24480:24499   */\n      swap1\n      pop\n        /* \"#utility.yul\":24139:24505   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24511:24930   */\n    tag_370:\n        /* \"#utility.yul\":24677:24681   */\n      0x00\n        /* \"#utility.yul\":24715:24717   */\n      0x20\n        /* \"#utility.yul\":24704:24713   */\n      dup3\n        /* \"#utility.yul\":24700:24718   */\n      add\n        /* \"#utility.yul\":24692:24718   */\n      swap1\n      pop\n        /* \"#utility.yul\":24764:24773   */\n      dup2\n        /* \"#utility.yul\":24758:24762   */\n      dup2\n        /* \"#utility.yul\":24754:24774   */\n      sub\n        /* \"#utility.yul\":24750:24751   */\n      0x00\n        /* \"#utility.yul\":24739:24748   */\n      dup4\n        /* \"#utility.yul\":24735:24752   */\n      add\n        /* \"#utility.yul\":24728:24775   */\n      mstore\n        /* \"#utility.yul\":24792:24923   */\n      tag_722\n        /* \"#utility.yul\":24918:24922   */\n      dup2\n        /* \"#utility.yul\":24792:24923   */\n      tag_475\n      jump\t// in\n    tag_722:\n        /* \"#utility.yul\":24784:24923   */\n      swap1\n      pop\n        /* \"#utility.yul\":24511:24930   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24936:25161   */\n    tag_476:\n        /* \"#utility.yul\":25076:25110   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":25072:25073   */\n      0x00\n        /* \"#utility.yul\":25064:25070   */\n      dup3\n        /* \"#utility.yul\":25060:25074   */\n      add\n        /* \"#utility.yul\":25053:25111   */\n      mstore\n        /* \"#utility.yul\":25145:25153   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":25140:25142   */\n      0x20\n        /* \"#utility.yul\":25132:25138   */\n      dup3\n        /* \"#utility.yul\":25128:25143   */\n      add\n        /* \"#utility.yul\":25121:25154   */\n      mstore\n        /* \"#utility.yul\":24936:25161   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25167:25533   */\n    tag_477:\n        /* \"#utility.yul\":25309:25312   */\n      0x00\n        /* \"#utility.yul\":25330:25397   */\n      tag_725\n        /* \"#utility.yul\":25394:25396   */\n      0x26\n        /* \"#utility.yul\":25389:25392   */\n      dup4\n        /* \"#utility.yul\":25330:25397   */\n      tag_448\n      jump\t// in\n    tag_725:\n        /* \"#utility.yul\":25323:25397   */\n      swap2\n      pop\n        /* \"#utility.yul\":25406:25499   */\n      tag_726\n        /* \"#utility.yul\":25495:25498   */\n      dup3\n        /* \"#utility.yul\":25406:25499   */\n      tag_476\n      jump\t// in\n    tag_726:\n        /* \"#utility.yul\":25524:25526   */\n      0x40\n        /* \"#utility.yul\":25519:25522   */\n      dup3\n        /* \"#utility.yul\":25515:25527   */\n      add\n        /* \"#utility.yul\":25508:25527   */\n      swap1\n      pop\n        /* \"#utility.yul\":25167:25533   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25539:25958   */\n    tag_396:\n        /* \"#utility.yul\":25705:25709   */\n      0x00\n        /* \"#utility.yul\":25743:25745   */\n      0x20\n        /* \"#utility.yul\":25732:25741   */\n      dup3\n        /* \"#utility.yul\":25728:25746   */\n      add\n        /* \"#utility.yul\":25720:25746   */\n      swap1\n      pop\n        /* \"#utility.yul\":25792:25801   */\n      dup2\n        /* \"#utility.yul\":25786:25790   */\n      dup2\n        /* \"#utility.yul\":25782:25802   */\n      sub\n        /* \"#utility.yul\":25778:25779   */\n      0x00\n        /* \"#utility.yul\":25767:25776   */\n      dup4\n        /* \"#utility.yul\":25763:25780   */\n      add\n        /* \"#utility.yul\":25756:25803   */\n      mstore\n        /* \"#utility.yul\":25820:25951   */\n      tag_728\n        /* \"#utility.yul\":25946:25950   */\n      dup2\n        /* \"#utility.yul\":25820:25951   */\n      tag_477\n      jump\t// in\n    tag_728:\n        /* \"#utility.yul\":25812:25951   */\n      swap1\n      pop\n        /* \"#utility.yul\":25539:25958   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25964:26062   */\n    tag_478:\n        /* \"#utility.yul\":26015:26021   */\n      0x00\n        /* \"#utility.yul\":26049:26054   */\n      dup2\n        /* \"#utility.yul\":26043:26055   */\n      mload\n        /* \"#utility.yul\":26033:26055   */\n      swap1\n      pop\n        /* \"#utility.yul\":25964:26062   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26068:26215   */\n    tag_479:\n        /* \"#utility.yul\":26169:26180   */\n      0x00\n        /* \"#utility.yul\":26206:26209   */\n      dup2\n        /* \"#utility.yul\":26191:26209   */\n      swap1\n      pop\n        /* \"#utility.yul\":26068:26215   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26221:26360   */\n    tag_480:\n        /* \"#utility.yul\":26310:26316   */\n      dup3\n        /* \"#utility.yul\":26305:26308   */\n      dup2\n        /* \"#utility.yul\":26300:26303   */\n      dup4\n        /* \"#utility.yul\":26294:26317   */\n      mcopy\n        /* \"#utility.yul\":26351:26352   */\n      0x00\n        /* \"#utility.yul\":26342:26348   */\n      dup4\n        /* \"#utility.yul\":26337:26340   */\n      dup4\n        /* \"#utility.yul\":26333:26349   */\n      add\n        /* \"#utility.yul\":26326:26353   */\n      mstore\n        /* \"#utility.yul\":26221:26360   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26366:26752   */\n    tag_481:\n        /* \"#utility.yul\":26470:26473   */\n      0x00\n        /* \"#utility.yul\":26498:26536   */\n      tag_733\n        /* \"#utility.yul\":26530:26535   */\n      dup3\n        /* \"#utility.yul\":26498:26536   */\n      tag_478\n      jump\t// in\n    tag_733:\n        /* \"#utility.yul\":26552:26640   */\n      tag_734\n        /* \"#utility.yul\":26633:26639   */\n      dup2\n        /* \"#utility.yul\":26628:26631   */\n      dup6\n        /* \"#utility.yul\":26552:26640   */\n      tag_479\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":26545:26640   */\n      swap4\n      pop\n        /* \"#utility.yul\":26649:26714   */\n      tag_735\n        /* \"#utility.yul\":26707:26713   */\n      dup2\n        /* \"#utility.yul\":26702:26705   */\n      dup6\n        /* \"#utility.yul\":26695:26699   */\n      0x20\n        /* \"#utility.yul\":26688:26693   */\n      dup7\n        /* \"#utility.yul\":26684:26700   */\n      add\n        /* \"#utility.yul\":26649:26714   */\n      tag_480\n      jump\t// in\n    tag_735:\n        /* \"#utility.yul\":26739:26745   */\n      dup1\n        /* \"#utility.yul\":26734:26737   */\n      dup5\n        /* \"#utility.yul\":26730:26746   */\n      add\n        /* \"#utility.yul\":26723:26746   */\n      swap2\n      pop\n        /* \"#utility.yul\":26474:26752   */\n      pop\n        /* \"#utility.yul\":26366:26752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26758:27029   */\n    tag_398:\n        /* \"#utility.yul\":26888:26891   */\n      0x00\n        /* \"#utility.yul\":26910:27003   */\n      tag_737\n        /* \"#utility.yul\":26999:27002   */\n      dup3\n        /* \"#utility.yul\":26990:26996   */\n      dup5\n        /* \"#utility.yul\":26910:27003   */\n      tag_481\n      jump\t// in\n    tag_737:\n        /* \"#utility.yul\":26903:27003   */\n      swap2\n      pop\n        /* \"#utility.yul\":27020:27023   */\n      dup2\n        /* \"#utility.yul\":27013:27023   */\n      swap1\n      pop\n        /* \"#utility.yul\":26758:27029   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27035:27214   */\n    tag_482:\n        /* \"#utility.yul\":27175:27206   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":27171:27172   */\n      0x00\n        /* \"#utility.yul\":27163:27169   */\n      dup3\n        /* \"#utility.yul\":27159:27173   */\n      add\n        /* \"#utility.yul\":27152:27207   */\n      mstore\n        /* \"#utility.yul\":27035:27214   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27220:27586   */\n    tag_483:\n        /* \"#utility.yul\":27362:27365   */\n      0x00\n        /* \"#utility.yul\":27383:27450   */\n      tag_740\n        /* \"#utility.yul\":27447:27449   */\n      0x1d\n        /* \"#utility.yul\":27442:27445   */\n      dup4\n        /* \"#utility.yul\":27383:27450   */\n      tag_448\n      jump\t// in\n    tag_740:\n        /* \"#utility.yul\":27376:27450   */\n      swap2\n      pop\n        /* \"#utility.yul\":27459:27552   */\n      tag_741\n        /* \"#utility.yul\":27548:27551   */\n      dup3\n        /* \"#utility.yul\":27459:27552   */\n      tag_482\n      jump\t// in\n    tag_741:\n        /* \"#utility.yul\":27577:27579   */\n      0x20\n        /* \"#utility.yul\":27572:27575   */\n      dup3\n        /* \"#utility.yul\":27568:27580   */\n      add\n        /* \"#utility.yul\":27561:27580   */\n      swap1\n      pop\n        /* \"#utility.yul\":27220:27586   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27592:28011   */\n    tag_411:\n        /* \"#utility.yul\":27758:27762   */\n      0x00\n        /* \"#utility.yul\":27796:27798   */\n      0x20\n        /* \"#utility.yul\":27785:27794   */\n      dup3\n        /* \"#utility.yul\":27781:27799   */\n      add\n        /* \"#utility.yul\":27773:27799   */\n      swap1\n      pop\n        /* \"#utility.yul\":27845:27854   */\n      dup2\n        /* \"#utility.yul\":27839:27843   */\n      dup2\n        /* \"#utility.yul\":27835:27855   */\n      sub\n        /* \"#utility.yul\":27831:27832   */\n      0x00\n        /* \"#utility.yul\":27820:27829   */\n      dup4\n        /* \"#utility.yul\":27816:27833   */\n      add\n        /* \"#utility.yul\":27809:27856   */\n      mstore\n        /* \"#utility.yul\":27873:28004   */\n      tag_743\n        /* \"#utility.yul\":27999:28003   */\n      dup2\n        /* \"#utility.yul\":27873:28004   */\n      tag_483\n      jump\t// in\n    tag_743:\n        /* \"#utility.yul\":27865:28004   */\n      swap1\n      pop\n        /* \"#utility.yul\":27592:28011   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28017:28116   */\n    tag_484:\n        /* \"#utility.yul\":28069:28075   */\n      0x00\n        /* \"#utility.yul\":28103:28108   */\n      dup2\n        /* \"#utility.yul\":28097:28109   */\n      mload\n        /* \"#utility.yul\":28087:28109   */\n      swap1\n      pop\n        /* \"#utility.yul\":28017:28116   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28122:28224   */\n    tag_485:\n        /* \"#utility.yul\":28163:28169   */\n      0x00\n        /* \"#utility.yul\":28214:28216   */\n      0x1f\n        /* \"#utility.yul\":28210:28217   */\n      not\n        /* \"#utility.yul\":28205:28207   */\n      0x1f\n        /* \"#utility.yul\":28198:28203   */\n      dup4\n        /* \"#utility.yul\":28194:28208   */\n      add\n        /* \"#utility.yul\":28190:28218   */\n      and\n        /* \"#utility.yul\":28180:28218   */\n      swap1\n      pop\n        /* \"#utility.yul\":28122:28224   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28230:28607   */\n    tag_486:\n        /* \"#utility.yul\":28318:28321   */\n      0x00\n        /* \"#utility.yul\":28346:28385   */\n      tag_747\n        /* \"#utility.yul\":28379:28384   */\n      dup3\n        /* \"#utility.yul\":28346:28385   */\n      tag_484\n      jump\t// in\n    tag_747:\n        /* \"#utility.yul\":28401:28472   */\n      tag_748\n        /* \"#utility.yul\":28465:28471   */\n      dup2\n        /* \"#utility.yul\":28460:28463   */\n      dup6\n        /* \"#utility.yul\":28401:28472   */\n      tag_448\n      jump\t// in\n    tag_748:\n        /* \"#utility.yul\":28394:28472   */\n      swap4\n      pop\n        /* \"#utility.yul\":28481:28546   */\n      tag_749\n        /* \"#utility.yul\":28539:28545   */\n      dup2\n        /* \"#utility.yul\":28534:28537   */\n      dup6\n        /* \"#utility.yul\":28527:28531   */\n      0x20\n        /* \"#utility.yul\":28520:28525   */\n      dup7\n        /* \"#utility.yul\":28516:28532   */\n      add\n        /* \"#utility.yul\":28481:28546   */\n      tag_480\n      jump\t// in\n    tag_749:\n        /* \"#utility.yul\":28571:28600   */\n      tag_750\n        /* \"#utility.yul\":28593:28599   */\n      dup2\n        /* \"#utility.yul\":28571:28600   */\n      tag_485\n      jump\t// in\n    tag_750:\n        /* \"#utility.yul\":28566:28569   */\n      dup5\n        /* \"#utility.yul\":28562:28601   */\n      add\n        /* \"#utility.yul\":28555:28601   */\n      swap2\n      pop\n        /* \"#utility.yul\":28322:28607   */\n      pop\n        /* \"#utility.yul\":28230:28607   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28613:28926   */\n    tag_420:\n        /* \"#utility.yul\":28726:28730   */\n      0x00\n        /* \"#utility.yul\":28764:28766   */\n      0x20\n        /* \"#utility.yul\":28753:28762   */\n      dup3\n        /* \"#utility.yul\":28749:28767   */\n      add\n        /* \"#utility.yul\":28741:28767   */\n      swap1\n      pop\n        /* \"#utility.yul\":28813:28822   */\n      dup2\n        /* \"#utility.yul\":28807:28811   */\n      dup2\n        /* \"#utility.yul\":28803:28823   */\n      sub\n        /* \"#utility.yul\":28799:28800   */\n      0x00\n        /* \"#utility.yul\":28788:28797   */\n      dup4\n        /* \"#utility.yul\":28784:28801   */\n      add\n        /* \"#utility.yul\":28777:28824   */\n      mstore\n        /* \"#utility.yul\":28841:28919   */\n      tag_752\n        /* \"#utility.yul\":28914:28918   */\n      dup2\n        /* \"#utility.yul\":28905:28911   */\n      dup5\n        /* \"#utility.yul\":28841:28919   */\n      tag_486\n      jump\t// in\n    tag_752:\n        /* \"#utility.yul\":28833:28919   */\n      swap1\n      pop\n        /* \"#utility.yul\":28613:28926   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f649a6dc36ebb7caee4da0b9e104c5c8b81a60080b765f6c4136a532bd3f7caf64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50612dd88061001c5f395ff3fe608060405234801561000f575f80fd5b50600436106101cd575f3560e01c80638456cb5911610102578063c20632ba116100a0578063dfaae4121161006f578063dfaae412146104bf578063e0283faf146104db578063f2fde38b146104f9578063f96dae0a14610515576101cd565b8063c20632ba14610449578063ce7842f514610465578063ce98f04914610483578063d06fcba8146104a1576101cd565b80639e2c8a5b116100dc5780639e2c8a5b146103d7578063a18a7bfc146103f3578063ae169a501461040f578063afbf34401461042b576101cd565b80638456cb59146103935780638ba796af1461039d5780638da5cb5b146103b9576101cd565b80633f4ba83a1161016f57806353aaa63b1161014957806353aaa63b1461031f5780635c975abb1461034f578063715018a61461036d5780637b0472f014610377576101cd565b80633f4ba83a146102c95780634a3b68cc146102d35780635312ea8e14610303576101cd565b80631526fe27116101ab5780631526fe27146102295780633462e0a81461025f578063381e75eb1461027b5780633b1e3eb8146102ad576101cd565b80630187aea0146101d1578063085cde2d146101ef578063126796dd1461020d575b5f80fd5b6101d9610533565b6040516101e69190611ff1565b60405180910390f35b6101f7610539565b6040516102049190611ff1565b60405180910390f35b61022760048036038101906102229190612038565b61053f565b005b610243600480360381019061023e9190612076565b610573565b604051610256979695949392919061211b565b60405180910390f35b61027960048036038101906102749190612038565b6105fe565b005b610295600480360381019061029091906121c3565b610632565b6040516102a493929190612201565b60405180910390f35b6102c760048036038101906102c29190612076565b610663565b005b6102d1610675565b005b6102ed60048036038101906102e89190612236565b610698565b6040516102fa9190612270565b60405180910390f35b61031d60048036038101906103189190612076565b6106c8565b005b61033960048036038101906103349190612236565b610863565b6040516103469190611ff1565b60405180910390f35b610357610878565b60405161036491906122a3565b60405180910390f35b61037561088a565b005b610391600480360381019061038c9190612038565b61089d565b005b61039b610ab8565b005b6103b760048036038101906103b29190612332565b610adc565b005b6103c1610d17565b6040516103ce9190612270565b60405180910390f35b6103f160048036038101906103ec9190612038565b610d4c565b005b61040d60048036038101906104089190612236565b610f43565b005b61042960048036038101906104249190612076565b6111fd565b005b610433611387565b6040516104409190611ff1565b60405180910390f35b610463600480360381019061045e91906123e3565b61138d565b005b61046d61152f565b60405161047a9190611ff1565b60405180910390f35b61048b611535565b6040516104989190611ff1565b60405180910390f35b6104a961153b565b6040516104b69190612467565b60405180910390f35b6104d960048036038101906104d49190612480565b611561565b005b6104e36115b9565b6040516104f09190611ff1565b60405180910390f35b610513600480360381019061050e9190612236565b6115bf565b005b61051d611643565b60405161052a91906124be565b60405180910390f35b60375481565b60385481565b610547611668565b806032838154811061055c5761055b6124d7565b5b905f5260205f209060070201600301819055505050565b60328181548110610582575f80fd5b905f5260205f2090600702015f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040154908060050154908060060154905087565b610606611668565b806032838154811061061b5761061a6124d7565b5b905f5260205f209060070201600201819055505050565b6033602052815f5260405f20602052805f5260405f205f9150915050805f0154908060010154908060020154905083565b61066b611668565b8060398190555050565b61067d611668565b5f603c5f6101000a81548160ff021916908315150217905550565b6034602052805f5260405f205f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106d06116ef565b5f603282815481106106e5576106e46124d7565b5b905f5260205f20906007020190505f60335f8481526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f815f015411610787576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077e9061255e565b60405180910390fd5b5f815f015490505f825f01819055505f826001018190555080836004015f8282546107b291906125a9565b925050819055506108063382855f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661173c9092919063ffffffff16565b833373ffffffffffffffffffffffffffffffffffffffff167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05958360405161084d9190611ff1565b60405180910390a35050506108606117c2565b50565b6035602052805f5260405f205f915090505481565b603c5f9054906101000a900460ff1681565b610892611668565b61089b5f6117cb565b565b6108a56116ef565b603c5f9054906101000a900460ff16156108f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108eb90612626565b60405180910390fd5b5f8111610936576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092d9061268e565b60405180910390fd5b5f6032838154811061094b5761094a6124d7565b5b905f5260205f20906007020190505f60335f8581526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090506109b18461189c565b6109bb843361193a565b610a0a333085855f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611b2a909392919063ffffffff16565b82815f015f828254610a1c91906126ac565b92505081905550816003015442610a3391906126ac565b816002018190555082826004015f828254610a4e91906126ac565b92505081905550833373ffffffffffffffffffffffffffffffffffffffff167fb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed858460020154604051610aa29291906126df565b60405180910390a35050610ab46117c2565b5050565b610ac0611668565b6001603c5f6101000a81548160ff021916908315150217905550565b5f610ae5611bb3565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff16148015610b2d5750825b90505f60018367ffffffffffffffff16148015610b6057505f3073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610b6e575080155b15610ba5576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610bf2576001855f0160086101000a81548160ff0219169083151502179055505b610bfb33611bda565b610c03611bee565b8c603d5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508b603c60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508a60368190555089603781905550886038819055508760398190555086603a8190555085603b819055508315610d08575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610cff9190612752565b60405180910390a15b50505050505050505050505050565b5f80610d21611c00565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b610d546116ef565b5f60328381548110610d6957610d686124d7565b5b905f5260205f20906007020190505f60335f8581526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905082815f01541015610e0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e03906127b5565b60405180910390fd5b8060020154421015610e53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4a9061281d565b60405180910390fd5b610e5c8461189c565b610e66843361193a565b82815f015f828254610e7891906125a9565b9250508190555082826004015f828254610e9291906125a9565b92505081905550610ee63384845f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661173c9092919063ffffffff16565b833373ffffffffffffffffffffffffffffffffffffffff167f7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e85604051610f2d9190611ff1565b60405180910390a35050610f3f6117c2565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff1660345f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461100d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100490612885565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361107b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611072906128ed565b60405180910390fd5b8060345f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603a5460355f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461114491906126ac565b92505081905550603b5460355f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461119991906126ac565b925050819055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f5f7165288eef601591cf549e15ff19ef9060b7f71b9c115be946fa1fe7ebf68a60405160405180910390a350565b6112056116ef565b61120e8161189c565b611218813361193a565b5f60335f8381526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015490505f60335f8481526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001018190555061132c3382603285815481106112d8576112d76124d7565b5b905f5260205f2090600702016001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661173c9092919063ffffffff16565b813373ffffffffffffffffffffffffffffffffffffffff167fd6f2c8500df5b44f11e9e48b91ff9f1b9d81bc496d55570c2b1b75bf65243f51836040516113739190611ff1565b60405180910390a3506113846117c2565b50565b60365481565b611395611668565b60326040518060e001604052808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020015f81526020015f815260200142815250908060018154018082558091505060019003905f5260205f2090600702015f909190919091505f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060155505060016032805490506114ec91906125a9565b7fe1111ad6e2ccaf57d3d9aa458493b64bcf6a66c2028304b95772fe72e1fc361285858585604051611521949392919061290b565b60405180910390a250505050565b603a5481565b603b5481565b603c60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611569611668565b6115b58282603d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661173c9092919063ffffffff16565b5050565b60395481565b6115c7611668565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611637575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161162e9190612270565b60405180910390fd5b611640816117cb565b50565b603d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611670611c27565b73ffffffffffffffffffffffffffffffffffffffff1661168e610d17565b73ffffffffffffffffffffffffffffffffffffffff16146116ed576116b1611c27565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016116e49190612270565b60405180910390fd5b565b60025f5403611733576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161172a90612998565b60405180910390fd5b60025f81905550565b6117bd8363a9059cbb60e01b848460405160240161175b9291906129b6565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611c2e565b505050565b60015f81905550565b5f6117d4611c00565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f603282815481106118b1576118b06124d7565b5b905f5260205f20906007020190505f8160040154111561192d575f8160060154426118dc91906125a9565b90505f8260020154826118ef91906129dd565b9050826004015464e8d4a510008261190791906129dd565b6119119190612a4b565b836005015f82825461192391906126ac565b9250508190555050505b4281600601819055505050565b5f6032838154811061194f5761194e6124d7565b5b905f5260205f20906007020190505f60335f8581526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f815f01541115611b24575f816001015464e8d4a510008460050154845f01546119d691906129dd565b6119e09190612a4b565b6119ea91906125a9565b90505f83600301548360020154611a0191906125a9565b42611a0c91906125a9565b90505f611a1882611cf4565b905060365481603654611a2b91906126ac565b84611a3691906129dd565b611a409190612a4b565b92508284600101819055505f603c60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231886040518263ffffffff1660e01b8152600401611aa79190612270565b602060405180830381865afa158015611ac2573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611ae69190612a8f565b1115611b2057606460395484611afc91906129dd565b611b069190612a4b565b846001015f828254611b1891906126ac565b925050819055505b5050505b50505050565b611bad846323b872dd60e01b858585604051602401611b4b93929190612aba565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611c2e565b50505050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b611be2611d21565b611beb81611d61565b50565b611bf6611d21565b611bfe611de5565b565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f33905090565b5f611c8f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611df69092919063ffffffff16565b90505f81511480611cb0575080806020019051810190611caf9190612b19565b5b611cef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ce690612bb4565b60405180910390fd5b505050565b5f8060385483611d049190612a4b565b90506037548111611d155780611d19565b6037545b915050919050565b611d29611e0d565b611d5f576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611d69611d21565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611dd9575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611dd09190612270565b60405180910390fd5b611de2816117cb565b50565b611ded611d21565b60015f81905550565b6060611e0484845f85611e2b565b90509392505050565b5f611e16611bb3565b5f0160089054906101000a900460ff16905090565b606082471015611e70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e6790612c42565b60405180910390fd5b5f808673ffffffffffffffffffffffffffffffffffffffff168587604051611e989190612cb2565b5f6040518083038185875af1925050503d805f8114611ed2576040519150601f19603f3d011682016040523d82523d5f602084013e611ed7565b606091505b5091509150611ee887838387611ef4565b92505050949350505050565b60608315611f55575f835103611f4d57611f0d85611f68565b611f4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f4390612d12565b60405180910390fd5b5b829050611f60565b611f5f8383611f8a565b5b949350505050565b5f808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b5f82511115611f9c5781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fd09190612d82565b60405180910390fd5b5f819050919050565b611feb81611fd9565b82525050565b5f6020820190506120045f830184611fe2565b92915050565b5f80fd5b61201781611fd9565b8114612021575f80fd5b50565b5f813590506120328161200e565b92915050565b5f806040838503121561204e5761204d61200a565b5b5f61205b85828601612024565b925050602061206c85828601612024565b9150509250929050565b5f6020828403121561208b5761208a61200a565b5b5f61209884828501612024565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f6120e36120de6120d9846120a1565b6120c0565b6120a1565b9050919050565b5f6120f4826120c9565b9050919050565b5f612105826120ea565b9050919050565b612115816120fb565b82525050565b5f60e08201905061212e5f83018a61210c565b61213b602083018961210c565b6121486040830188611fe2565b6121556060830187611fe2565b6121626080830186611fe2565b61216f60a0830185611fe2565b61217c60c0830184611fe2565b98975050505050505050565b5f612192826120a1565b9050919050565b6121a281612188565b81146121ac575f80fd5b50565b5f813590506121bd81612199565b92915050565b5f80604083850312156121d9576121d861200a565b5b5f6121e685828601612024565b92505060206121f7858286016121af565b9150509250929050565b5f6060820190506122145f830186611fe2565b6122216020830185611fe2565b61222e6040830184611fe2565b949350505050565b5f6020828403121561224b5761224a61200a565b5b5f612258848285016121af565b91505092915050565b61226a81612188565b82525050565b5f6020820190506122835f830184612261565b92915050565b5f8115159050919050565b61229d81612289565b82525050565b5f6020820190506122b65f830184612294565b92915050565b5f6122c682612188565b9050919050565b6122d6816122bc565b81146122e0575f80fd5b50565b5f813590506122f1816122cd565b92915050565b5f61230182612188565b9050919050565b612311816122f7565b811461231b575f80fd5b50565b5f8135905061232c81612308565b92915050565b5f805f805f805f80610100898b03121561234f5761234e61200a565b5b5f61235c8b828c016122e3565b985050602061236d8b828c0161231e565b975050604061237e8b828c01612024565b965050606061238f8b828c01612024565b95505060806123a08b828c01612024565b94505060a06123b18b828c01612024565b93505060c06123c28b828c01612024565b92505060e06123d38b828c01612024565b9150509295985092959890939650565b5f805f80608085870312156123fb576123fa61200a565b5b5f612408878288016122e3565b9450506020612419878288016122e3565b935050604061242a87828801612024565b925050606061243b87828801612024565b91505092959194509250565b5f612451826120ea565b9050919050565b61246181612447565b82525050565b5f60208201905061247a5f830184612458565b92915050565b5f80604083850312156124965761249561200a565b5b5f6124a3858286016121af565b92505060206124b485828601612024565b9150509250929050565b5f6020820190506124d15f83018461210c565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82825260208201905092915050565b7f4e6f207374616b656420616d6f756e74000000000000000000000000000000005f82015250565b5f612548601083612504565b915061255382612514565b602082019050919050565b5f6020820190508181035f8301526125758161253c565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6125b382611fd9565b91506125be83611fd9565b92508282039050818111156125d6576125d561257c565b5b92915050565b7f436f6e74726163742069732070617573656400000000000000000000000000005f82015250565b5f612610601283612504565b915061261b826125dc565b602082019050919050565b5f6020820190508181035f83015261263d81612604565b9050919050565b7f43616e6e6f74207374616b6520300000000000000000000000000000000000005f82015250565b5f612678600e83612504565b915061268382612644565b602082019050919050565b5f6020820190508181035f8301526126a58161266c565b9050919050565b5f6126b682611fd9565b91506126c183611fd9565b92508282019050808211156126d9576126d861257c565b5b92915050565b5f6040820190506126f25f830185611fe2565b6126ff6020830184611fe2565b9392505050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f61273c61273761273284612706565b6120c0565b61270f565b9050919050565b61274c81612722565b82525050565b5f6020820190506127655f830184612743565b92915050565b7f496e73756666696369656e74207374616b656420616d6f756e740000000000005f82015250565b5f61279f601a83612504565b91506127aa8261276b565b602082019050919050565b5f6020820190508181035f8301526127cc81612793565b9050919050565b7f5374616b65206973207374696c6c206c6f636b656400000000000000000000005f82015250565b5f612807601583612504565b9150612812826127d3565b602082019050919050565b5f6020820190508181035f830152612834816127fb565b9050919050565b7f526566657272657220616c7265616479207365740000000000000000000000005f82015250565b5f61286f601483612504565b915061287a8261283b565b602082019050919050565b5f6020820190508181035f83015261289c81612863565b9050919050565b7f43616e6e6f7420726566657220796f757273656c6600000000000000000000005f82015250565b5f6128d7601583612504565b91506128e2826128a3565b602082019050919050565b5f6020820190508181035f830152612904816128cb565b9050919050565b5f60808201905061291e5f830187612261565b61292b6020830186612261565b6129386040830185611fe2565b6129456060830184611fe2565b95945050505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612982601f83612504565b915061298d8261294e565b602082019050919050565b5f6020820190508181035f8301526129af81612976565b9050919050565b5f6040820190506129c95f830185612261565b6129d66020830184611fe2565b9392505050565b5f6129e782611fd9565b91506129f283611fd9565b9250828202612a0081611fd9565b91508282048414831517612a1757612a1661257c565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f612a5582611fd9565b9150612a6083611fd9565b925082612a7057612a6f612a1e565b5b828204905092915050565b5f81519050612a898161200e565b92915050565b5f60208284031215612aa457612aa361200a565b5b5f612ab184828501612a7b565b91505092915050565b5f606082019050612acd5f830186612261565b612ada6020830185612261565b612ae76040830184611fe2565b949350505050565b612af881612289565b8114612b02575f80fd5b50565b5f81519050612b1381612aef565b92915050565b5f60208284031215612b2e57612b2d61200a565b5b5f612b3b84828501612b05565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e5f8201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b5f612b9e602a83612504565b9150612ba982612b44565b604082019050919050565b5f6020820190508181035f830152612bcb81612b92565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f5f8201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b5f612c2c602683612504565b9150612c3782612bd2565b604082019050919050565b5f6020820190508181035f830152612c5981612c20565b9050919050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f612c8c82612c60565b612c968185612c6a565b9350612ca6818560208601612c74565b80840191505092915050565b5f612cbd8284612c82565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000005f82015250565b5f612cfc601d83612504565b9150612d0782612cc8565b602082019050919050565b5f6020820190508181035f830152612d2981612cf0565b9050919050565b5f81519050919050565b5f601f19601f8301169050919050565b5f612d5482612d30565b612d5e8185612504565b9350612d6e818560208601612c74565b612d7781612d3a565b840191505092915050565b5f6020820190508181035f830152612d9a8184612d4a565b90509291505056fea2646970667358221220f649a6dc36ebb7caee4da0b9e104c5c8b81a60080b765f6c4136a532bd3f7caf64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DD8 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xC20632BA GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xDFAAE412 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDFAAE412 EQ PUSH2 0x4BF JUMPI DUP1 PUSH4 0xE0283FAF EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0xF96DAE0A EQ PUSH2 0x515 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0xC20632BA EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0xCE7842F5 EQ PUSH2 0x465 JUMPI DUP1 PUSH4 0xCE98F049 EQ PUSH2 0x483 JUMPI DUP1 PUSH4 0xD06FCBA8 EQ PUSH2 0x4A1 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x9E2C8A5B GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x9E2C8A5B EQ PUSH2 0x3D7 JUMPI DUP1 PUSH4 0xA18A7BFC EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0xAE169A50 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0xAFBF3440 EQ PUSH2 0x42B JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0x8BA796AF EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3B9 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x16F JUMPI DUP1 PUSH4 0x53AAA63B GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x53AAA63B EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x377 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x4A3B68CC EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x303 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x1526FE27 GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x3462E0A8 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x381E75EB EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x3B1E3EB8 EQ PUSH2 0x2AD JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x187AEA0 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x85CDE2D EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x126796DD EQ PUSH2 0x20D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1D9 PUSH2 0x533 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x1FF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH2 0x539 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x1FF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x2038 JUMP JUMPDEST PUSH2 0x53F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x2076 JUMP JUMPDEST PUSH2 0x573 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x211B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x279 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x2038 JUMP JUMPDEST PUSH2 0x5FE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x21C3 JUMP JUMPDEST PUSH2 0x632 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2201 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x2076 JUMP JUMPDEST PUSH2 0x663 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D1 PUSH2 0x675 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH2 0x698 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x2270 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x2076 JUMP JUMPDEST PUSH2 0x6C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x339 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x334 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH2 0x863 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x1FF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x357 PUSH2 0x878 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x22A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x375 PUSH2 0x88A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x391 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x2038 JUMP JUMPDEST PUSH2 0x89D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39B PUSH2 0xAB8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x2332 JUMP JUMPDEST PUSH2 0xADC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C1 PUSH2 0xD17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x2270 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EC SWAP2 SWAP1 PUSH2 0x2038 JUMP JUMPDEST PUSH2 0xD4C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x40D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x408 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH2 0xF43 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x429 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x424 SWAP2 SWAP1 PUSH2 0x2076 JUMP JUMPDEST PUSH2 0x11FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x433 PUSH2 0x1387 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x440 SWAP2 SWAP1 PUSH2 0x1FF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x463 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45E SWAP2 SWAP1 PUSH2 0x23E3 JUMP JUMPDEST PUSH2 0x138D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46D PUSH2 0x152F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47A SWAP2 SWAP1 PUSH2 0x1FF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48B PUSH2 0x1535 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x498 SWAP2 SWAP1 PUSH2 0x1FF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A9 PUSH2 0x153B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B6 SWAP2 SWAP1 PUSH2 0x2467 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D4 SWAP2 SWAP1 PUSH2 0x2480 JUMP JUMPDEST PUSH2 0x1561 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E3 PUSH2 0x15B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0x1FF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x513 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50E SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH2 0x15BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x51D PUSH2 0x1643 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52A SWAP2 SWAP1 PUSH2 0x24BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x37 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x38 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x547 PUSH2 0x1668 JUMP JUMPDEST DUP1 PUSH1 0x32 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x55C JUMPI PUSH2 0x55B PUSH2 0x24D7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x32 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x582 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST PUSH2 0x606 PUSH2 0x1668 JUMP JUMPDEST DUP1 PUSH1 0x32 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x61B JUMPI PUSH2 0x61A PUSH2 0x24D7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x33 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0x66B PUSH2 0x1668 JUMP JUMPDEST DUP1 PUSH1 0x39 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x67D PUSH2 0x1668 JUMP JUMPDEST PUSH0 PUSH1 0x3C PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x34 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x6D0 PUSH2 0x16EF JUMP JUMPDEST PUSH0 PUSH1 0x32 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x6E5 JUMPI PUSH2 0x6E4 PUSH2 0x24D7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP PUSH0 PUSH1 0x33 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD GT PUSH2 0x787 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77E SWAP1 PUSH2 0x255E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP PUSH0 DUP3 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH0 DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP1 DUP4 PUSH1 0x4 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7B2 SWAP2 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x806 CALLER DUP3 DUP6 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x173C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 DUP4 PUSH1 0x40 MLOAD PUSH2 0x84D SWAP2 SWAP1 PUSH2 0x1FF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP PUSH2 0x860 PUSH2 0x17C2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x35 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3C PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x892 PUSH2 0x1668 JUMP JUMPDEST PUSH2 0x89B PUSH0 PUSH2 0x17CB JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x8A5 PUSH2 0x16EF JUMP JUMPDEST PUSH1 0x3C PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8EB SWAP1 PUSH2 0x2626 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x936 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92D SWAP1 PUSH2 0x268E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x32 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x94B JUMPI PUSH2 0x94A PUSH2 0x24D7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP PUSH0 PUSH1 0x33 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0x9B1 DUP5 PUSH2 0x189C JUMP JUMPDEST PUSH2 0x9BB DUP5 CALLER PUSH2 0x193A JUMP JUMPDEST PUSH2 0xA0A CALLER ADDRESS DUP6 DUP6 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B2A SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA1C SWAP2 SWAP1 PUSH2 0x26AC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0xA33 SWAP2 SWAP1 PUSH2 0x26AC JUMP JUMPDEST DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP3 DUP3 PUSH1 0x4 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA4E SWAP2 SWAP1 PUSH2 0x26AC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED DUP6 DUP5 PUSH1 0x2 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xAA2 SWAP3 SWAP2 SWAP1 PUSH2 0x26DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH2 0xAB4 PUSH2 0x17C2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xAC0 PUSH2 0x1668 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3C PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xAE5 PUSH2 0x1BB3 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB2D JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB60 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xB6E JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xBA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xBF2 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xBFB CALLER PUSH2 0x1BDA JUMP JUMPDEST PUSH2 0xC03 PUSH2 0x1BEE JUMP JUMPDEST DUP13 PUSH1 0x3D PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP12 PUSH1 0x3C PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP11 PUSH1 0x36 DUP2 SWAP1 SSTORE POP DUP10 PUSH1 0x37 DUP2 SWAP1 SSTORE POP DUP9 PUSH1 0x38 DUP2 SWAP1 SSTORE POP DUP8 PUSH1 0x39 DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x3A DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x3B DUP2 SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xD08 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xCFF SWAP2 SWAP1 PUSH2 0x2752 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xD21 PUSH2 0x1C00 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xD54 PUSH2 0x16EF JUMP JUMPDEST PUSH0 PUSH1 0x32 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xD69 JUMPI PUSH2 0xD68 PUSH2 0x24D7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP PUSH0 PUSH1 0x33 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH0 ADD SLOAD LT ISZERO PUSH2 0xE0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE03 SWAP1 PUSH2 0x27B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0xE53 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE4A SWAP1 PUSH2 0x281D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE5C DUP5 PUSH2 0x189C JUMP JUMPDEST PUSH2 0xE66 DUP5 CALLER PUSH2 0x193A JUMP JUMPDEST DUP3 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE78 SWAP2 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 DUP3 PUSH1 0x4 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE92 SWAP2 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xEE6 CALLER DUP5 DUP5 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x173C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7FC4727E062E336010F2C282598EF5F14FACB3DE68CF8195C2F23E1454B2B74E DUP6 PUSH1 0x40 MLOAD PUSH2 0xF2D SWAP2 SWAP1 PUSH2 0x1FF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH2 0xF3F PUSH2 0x17C2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x34 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x100D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1004 SWAP1 PUSH2 0x2885 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x107B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1072 SWAP1 PUSH2 0x28ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x34 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3A SLOAD PUSH1 0x35 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1144 SWAP2 SWAP1 PUSH2 0x26AC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x3B SLOAD PUSH1 0x35 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1199 SWAP2 SWAP1 PUSH2 0x26AC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5F7165288EEF601591CF549E15FF19EF9060B7F71B9C115BE946FA1FE7EBF68A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x1205 PUSH2 0x16EF JUMP JUMPDEST PUSH2 0x120E DUP2 PUSH2 0x189C JUMP JUMPDEST PUSH2 0x1218 DUP2 CALLER PUSH2 0x193A JUMP JUMPDEST PUSH0 PUSH1 0x33 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH0 PUSH1 0x33 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x132C CALLER DUP3 PUSH1 0x32 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x12D8 JUMPI PUSH2 0x12D7 PUSH2 0x24D7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x173C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD6F2C8500DF5B44F11E9E48B91FF9F1B9D81BC496D55570C2B1B75BF65243F51 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1373 SWAP2 SWAP1 PUSH2 0x1FF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x1384 PUSH2 0x17C2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x36 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1395 PUSH2 0x1668 JUMP JUMPDEST PUSH1 0x32 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE POP POP PUSH1 0x1 PUSH1 0x32 DUP1 SLOAD SWAP1 POP PUSH2 0x14EC SWAP2 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST PUSH32 0xE1111AD6E2CCAF57D3D9AA458493B64BCF6A66C2028304B95772FE72E1FC3612 DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1521 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x290B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x3A SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3B SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3C PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1569 PUSH2 0x1668 JUMP JUMPDEST PUSH2 0x15B5 DUP3 DUP3 PUSH1 0x3D PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x173C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x39 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x15C7 PUSH2 0x1668 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1637 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x162E SWAP2 SWAP1 PUSH2 0x2270 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1640 DUP2 PUSH2 0x17CB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3D PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1670 PUSH2 0x1C27 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x168E PUSH2 0xD17 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16ED JUMPI PUSH2 0x16B1 PUSH2 0x1C27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16E4 SWAP2 SWAP1 PUSH2 0x2270 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x1733 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x172A SWAP1 PUSH2 0x2998 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x17BD DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x175B SWAP3 SWAP2 SWAP1 PUSH2 0x29B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1C2E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17D4 PUSH2 0x1C00 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x32 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x18B1 JUMPI PUSH2 0x18B0 PUSH2 0x24D7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP PUSH0 DUP2 PUSH1 0x4 ADD SLOAD GT ISZERO PUSH2 0x192D JUMPI PUSH0 DUP2 PUSH1 0x6 ADD SLOAD TIMESTAMP PUSH2 0x18DC SWAP2 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x2 ADD SLOAD DUP3 PUSH2 0x18EF SWAP2 SWAP1 PUSH2 0x29DD JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x4 ADD SLOAD PUSH5 0xE8D4A51000 DUP3 PUSH2 0x1907 SWAP2 SWAP1 PUSH2 0x29DD JUMP JUMPDEST PUSH2 0x1911 SWAP2 SWAP1 PUSH2 0x2A4B JUMP JUMPDEST DUP4 PUSH1 0x5 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1923 SWAP2 SWAP1 PUSH2 0x26AC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMPDEST TIMESTAMP DUP2 PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x32 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x194F JUMPI PUSH2 0x194E PUSH2 0x24D7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP PUSH0 PUSH1 0x33 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD GT ISZERO PUSH2 0x1B24 JUMPI PUSH0 DUP2 PUSH1 0x1 ADD SLOAD PUSH5 0xE8D4A51000 DUP5 PUSH1 0x5 ADD SLOAD DUP5 PUSH0 ADD SLOAD PUSH2 0x19D6 SWAP2 SWAP1 PUSH2 0x29DD JUMP JUMPDEST PUSH2 0x19E0 SWAP2 SWAP1 PUSH2 0x2A4B JUMP JUMPDEST PUSH2 0x19EA SWAP2 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH1 0x3 ADD SLOAD DUP4 PUSH1 0x2 ADD SLOAD PUSH2 0x1A01 SWAP2 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST TIMESTAMP PUSH2 0x1A0C SWAP2 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1A18 DUP3 PUSH2 0x1CF4 JUMP JUMPDEST SWAP1 POP PUSH1 0x36 SLOAD DUP2 PUSH1 0x36 SLOAD PUSH2 0x1A2B SWAP2 SWAP1 PUSH2 0x26AC JUMP JUMPDEST DUP5 PUSH2 0x1A36 SWAP2 SWAP1 PUSH2 0x29DD JUMP JUMPDEST PUSH2 0x1A40 SWAP2 SWAP1 PUSH2 0x2A4B JUMP JUMPDEST SWAP3 POP DUP3 DUP5 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x3C PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP9 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AA7 SWAP2 SWAP1 PUSH2 0x2270 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AC2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AE6 SWAP2 SWAP1 PUSH2 0x2A8F JUMP JUMPDEST GT ISZERO PUSH2 0x1B20 JUMPI PUSH1 0x64 PUSH1 0x39 SLOAD DUP5 PUSH2 0x1AFC SWAP2 SWAP1 PUSH2 0x29DD JUMP JUMPDEST PUSH2 0x1B06 SWAP2 SWAP1 PUSH2 0x2A4B JUMP JUMPDEST DUP5 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1B18 SWAP2 SWAP1 PUSH2 0x26AC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1BAD DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1B4B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2ABA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1C2E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1BE2 PUSH2 0x1D21 JUMP JUMPDEST PUSH2 0x1BEB DUP2 PUSH2 0x1D61 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1BF6 PUSH2 0x1D21 JUMP JUMPDEST PUSH2 0x1BFE PUSH2 0x1DE5 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x1C8F DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DF6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x1CB0 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1CAF SWAP2 SWAP1 PUSH2 0x2B19 JUMP JUMPDEST JUMPDEST PUSH2 0x1CEF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CE6 SWAP1 PUSH2 0x2BB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x38 SLOAD DUP4 PUSH2 0x1D04 SWAP2 SWAP1 PUSH2 0x2A4B JUMP JUMPDEST SWAP1 POP PUSH1 0x37 SLOAD DUP2 GT PUSH2 0x1D15 JUMPI DUP1 PUSH2 0x1D19 JUMP JUMPDEST PUSH1 0x37 SLOAD JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D29 PUSH2 0x1E0D JUMP JUMPDEST PUSH2 0x1D5F JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1D69 PUSH2 0x1D21 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1DD9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DD0 SWAP2 SWAP1 PUSH2 0x2270 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DE2 DUP2 PUSH2 0x17CB JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1DED PUSH2 0x1D21 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1E04 DUP5 DUP5 PUSH0 DUP6 PUSH2 0x1E2B JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E16 PUSH2 0x1BB3 JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1E70 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E67 SWAP1 PUSH2 0x2C42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1E98 SWAP2 SWAP1 PUSH2 0x2CB2 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1ED2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1ED7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1EE8 DUP8 DUP4 DUP4 DUP8 PUSH2 0x1EF4 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1F55 JUMPI PUSH0 DUP4 MLOAD SUB PUSH2 0x1F4D JUMPI PUSH2 0x1F0D DUP6 PUSH2 0x1F68 JUMP JUMPDEST PUSH2 0x1F4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F43 SWAP1 PUSH2 0x2D12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x1F60 JUMP JUMPDEST PUSH2 0x1F5F DUP4 DUP4 PUSH2 0x1F8A JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x1F9C JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FD0 SWAP2 SWAP1 PUSH2 0x2D82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FEB DUP2 PUSH2 0x1FD9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2004 PUSH0 DUP4 ADD DUP5 PUSH2 0x1FE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2017 DUP2 PUSH2 0x1FD9 JUMP JUMPDEST DUP2 EQ PUSH2 0x2021 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2032 DUP2 PUSH2 0x200E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x204E JUMPI PUSH2 0x204D PUSH2 0x200A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x205B DUP6 DUP3 DUP7 ADD PUSH2 0x2024 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x206C DUP6 DUP3 DUP7 ADD PUSH2 0x2024 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x208B JUMPI PUSH2 0x208A PUSH2 0x200A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2098 DUP5 DUP3 DUP6 ADD PUSH2 0x2024 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20E3 PUSH2 0x20DE PUSH2 0x20D9 DUP5 PUSH2 0x20A1 JUMP JUMPDEST PUSH2 0x20C0 JUMP JUMPDEST PUSH2 0x20A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20F4 DUP3 PUSH2 0x20C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2105 DUP3 PUSH2 0x20EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2115 DUP2 PUSH2 0x20FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x212E PUSH0 DUP4 ADD DUP11 PUSH2 0x210C JUMP JUMPDEST PUSH2 0x213B PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x210C JUMP JUMPDEST PUSH2 0x2148 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x1FE2 JUMP JUMPDEST PUSH2 0x2155 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1FE2 JUMP JUMPDEST PUSH2 0x2162 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1FE2 JUMP JUMPDEST PUSH2 0x216F PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1FE2 JUMP JUMPDEST PUSH2 0x217C PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x1FE2 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2192 DUP3 PUSH2 0x20A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21A2 DUP2 PUSH2 0x2188 JUMP JUMPDEST DUP2 EQ PUSH2 0x21AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21BD DUP2 PUSH2 0x2199 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21D9 JUMPI PUSH2 0x21D8 PUSH2 0x200A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21E6 DUP6 DUP3 DUP7 ADD PUSH2 0x2024 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21F7 DUP6 DUP3 DUP7 ADD PUSH2 0x21AF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2214 PUSH0 DUP4 ADD DUP7 PUSH2 0x1FE2 JUMP JUMPDEST PUSH2 0x2221 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1FE2 JUMP JUMPDEST PUSH2 0x222E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1FE2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x224B JUMPI PUSH2 0x224A PUSH2 0x200A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2258 DUP5 DUP3 DUP6 ADD PUSH2 0x21AF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x226A DUP2 PUSH2 0x2188 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2283 PUSH0 DUP4 ADD DUP5 PUSH2 0x2261 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x229D DUP2 PUSH2 0x2289 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22B6 PUSH0 DUP4 ADD DUP5 PUSH2 0x2294 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22C6 DUP3 PUSH2 0x2188 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22D6 DUP2 PUSH2 0x22BC JUMP JUMPDEST DUP2 EQ PUSH2 0x22E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22F1 DUP2 PUSH2 0x22CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2301 DUP3 PUSH2 0x2188 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2311 DUP2 PUSH2 0x22F7 JUMP JUMPDEST DUP2 EQ PUSH2 0x231B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x232C DUP2 PUSH2 0x2308 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x234F JUMPI PUSH2 0x234E PUSH2 0x200A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x235C DUP12 DUP3 DUP13 ADD PUSH2 0x22E3 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x236D DUP12 DUP3 DUP13 ADD PUSH2 0x231E JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x237E DUP12 DUP3 DUP13 ADD PUSH2 0x2024 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x238F DUP12 DUP3 DUP13 ADD PUSH2 0x2024 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH2 0x23A0 DUP12 DUP3 DUP13 ADD PUSH2 0x2024 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 PUSH2 0x23B1 DUP12 DUP3 DUP13 ADD PUSH2 0x2024 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 PUSH2 0x23C2 DUP12 DUP3 DUP13 ADD PUSH2 0x2024 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xE0 PUSH2 0x23D3 DUP12 DUP3 DUP13 ADD PUSH2 0x2024 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x23FB JUMPI PUSH2 0x23FA PUSH2 0x200A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2408 DUP8 DUP3 DUP9 ADD PUSH2 0x22E3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2419 DUP8 DUP3 DUP9 ADD PUSH2 0x22E3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x242A DUP8 DUP3 DUP9 ADD PUSH2 0x2024 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x243B DUP8 DUP3 DUP9 ADD PUSH2 0x2024 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH2 0x2451 DUP3 PUSH2 0x20EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2461 DUP2 PUSH2 0x2447 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x247A PUSH0 DUP4 ADD DUP5 PUSH2 0x2458 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2496 JUMPI PUSH2 0x2495 PUSH2 0x200A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24A3 DUP6 DUP3 DUP7 ADD PUSH2 0x21AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x24B4 DUP6 DUP3 DUP7 ADD PUSH2 0x2024 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24D1 PUSH0 DUP4 ADD DUP5 PUSH2 0x210C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F207374616B656420616D6F756E7400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2548 PUSH1 0x10 DUP4 PUSH2 0x2504 JUMP JUMPDEST SWAP2 POP PUSH2 0x2553 DUP3 PUSH2 0x2514 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2575 DUP2 PUSH2 0x253C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x25B3 DUP3 PUSH2 0x1FD9 JUMP JUMPDEST SWAP2 POP PUSH2 0x25BE DUP4 PUSH2 0x1FD9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x25D6 JUMPI PUSH2 0x25D5 PUSH2 0x257C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6E7472616374206973207061757365640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2610 PUSH1 0x12 DUP4 PUSH2 0x2504 JUMP JUMPDEST SWAP2 POP PUSH2 0x261B DUP3 PUSH2 0x25DC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x263D DUP2 PUSH2 0x2604 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2678 PUSH1 0xE DUP4 PUSH2 0x2504 JUMP JUMPDEST SWAP2 POP PUSH2 0x2683 DUP3 PUSH2 0x2644 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26A5 DUP2 PUSH2 0x266C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x26B6 DUP3 PUSH2 0x1FD9 JUMP JUMPDEST SWAP2 POP PUSH2 0x26C1 DUP4 PUSH2 0x1FD9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x26D9 JUMPI PUSH2 0x26D8 PUSH2 0x257C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x26F2 PUSH0 DUP4 ADD DUP6 PUSH2 0x1FE2 JUMP JUMPDEST PUSH2 0x26FF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1FE2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x273C PUSH2 0x2737 PUSH2 0x2732 DUP5 PUSH2 0x2706 JUMP JUMPDEST PUSH2 0x20C0 JUMP JUMPDEST PUSH2 0x270F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x274C DUP2 PUSH2 0x2722 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2765 PUSH0 DUP4 ADD DUP5 PUSH2 0x2743 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74207374616B656420616D6F756E74000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x279F PUSH1 0x1A DUP4 PUSH2 0x2504 JUMP JUMPDEST SWAP2 POP PUSH2 0x27AA DUP3 PUSH2 0x276B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x27CC DUP2 PUSH2 0x2793 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B65206973207374696C6C206C6F636B65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2807 PUSH1 0x15 DUP4 PUSH2 0x2504 JUMP JUMPDEST SWAP2 POP PUSH2 0x2812 DUP3 PUSH2 0x27D3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2834 DUP2 PUSH2 0x27FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526566657272657220616C726561647920736574000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x286F PUSH1 0x14 DUP4 PUSH2 0x2504 JUMP JUMPDEST SWAP2 POP PUSH2 0x287A DUP3 PUSH2 0x283B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x289C DUP2 PUSH2 0x2863 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420726566657220796F757273656C660000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x28D7 PUSH1 0x15 DUP4 PUSH2 0x2504 JUMP JUMPDEST SWAP2 POP PUSH2 0x28E2 DUP3 PUSH2 0x28A3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2904 DUP2 PUSH2 0x28CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x291E PUSH0 DUP4 ADD DUP8 PUSH2 0x2261 JUMP JUMPDEST PUSH2 0x292B PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2261 JUMP JUMPDEST PUSH2 0x2938 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1FE2 JUMP JUMPDEST PUSH2 0x2945 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1FE2 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2982 PUSH1 0x1F DUP4 PUSH2 0x2504 JUMP JUMPDEST SWAP2 POP PUSH2 0x298D DUP3 PUSH2 0x294E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29AF DUP2 PUSH2 0x2976 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x29C9 PUSH0 DUP4 ADD DUP6 PUSH2 0x2261 JUMP JUMPDEST PUSH2 0x29D6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1FE2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x29E7 DUP3 PUSH2 0x1FD9 JUMP JUMPDEST SWAP2 POP PUSH2 0x29F2 DUP4 PUSH2 0x1FD9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2A00 DUP2 PUSH2 0x1FD9 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2A17 JUMPI PUSH2 0x2A16 PUSH2 0x257C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2A55 DUP3 PUSH2 0x1FD9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A60 DUP4 PUSH2 0x1FD9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2A70 JUMPI PUSH2 0x2A6F PUSH2 0x2A1E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2A89 DUP2 PUSH2 0x200E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AA4 JUMPI PUSH2 0x2AA3 PUSH2 0x200A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2AB1 DUP5 DUP3 DUP6 ADD PUSH2 0x2A7B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2ACD PUSH0 DUP4 ADD DUP7 PUSH2 0x2261 JUMP JUMPDEST PUSH2 0x2ADA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2261 JUMP JUMPDEST PUSH2 0x2AE7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1FE2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2AF8 DUP2 PUSH2 0x2289 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B02 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B13 DUP2 PUSH2 0x2AEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B2E JUMPI PUSH2 0x2B2D PUSH2 0x200A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B3B DUP5 DUP3 DUP6 ADD PUSH2 0x2B05 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B9E PUSH1 0x2A DUP4 PUSH2 0x2504 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BA9 DUP3 PUSH2 0x2B44 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2BCB DUP2 PUSH2 0x2B92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C2C PUSH1 0x26 DUP4 PUSH2 0x2504 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C37 DUP3 PUSH2 0x2BD2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C59 DUP2 PUSH2 0x2C20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2C8C DUP3 PUSH2 0x2C60 JUMP JUMPDEST PUSH2 0x2C96 DUP2 DUP6 PUSH2 0x2C6A JUMP JUMPDEST SWAP4 POP PUSH2 0x2CA6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2C74 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2CBD DUP3 DUP5 PUSH2 0x2C82 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2CFC PUSH1 0x1D DUP4 PUSH2 0x2504 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D07 DUP3 PUSH2 0x2CC8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D29 DUP2 PUSH2 0x2CF0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2D54 DUP3 PUSH2 0x2D30 JUMP JUMPDEST PUSH2 0x2D5E DUP2 DUP6 PUSH2 0x2504 JUMP JUMPDEST SWAP4 POP PUSH2 0x2D6E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2C74 JUMP JUMPDEST PUSH2 0x2D77 DUP2 PUSH2 0x2D3A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D9A DUP2 DUP5 PUSH2 0x2D4A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 BLOBHASH 0xA6 0xDC CALLDATASIZE 0xEB 0xB7 0xCA 0xEE 0x4D LOG0 0xB9 0xE1 DIV 0xC5 0xC8 0xB8 BYTE PUSH1 0x8 SIGNEXTEND PUSH23 0x5F6C4136A532BD3F7CAF64736F6C634300081A00330000 ",
							"sourceMap": "739:11718:10:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@__Ownable_init_54": {
									"entryPoint": 7130,
									"id": 54,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_81": {
									"entryPoint": 7521,
									"id": 81,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__ReentrancyGuard_init_472": {
									"entryPoint": 7150,
									"id": 472,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ReentrancyGuard_init_unchained_482": {
									"entryPoint": 7653,
									"id": 482,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_calculateRewardMultiplier_2256": {
									"entryPoint": 7412,
									"id": 2256,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_callOptionalReturn_974": {
									"entryPoint": 7214,
									"id": 974,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkInitializing_370": {
									"entryPoint": 7457,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_122": {
									"entryPoint": 5736,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_447": {
									"entryPoint": 7091,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_25": {
									"entryPoint": 7168,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_438": {
									"entryPoint": 7693,
									"id": 438,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_1497": {
									"entryPoint": 7207,
									"id": 1497,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_516": {
									"entryPoint": 6082,
									"id": 516,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_508": {
									"entryPoint": 5871,
									"id": 508,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_1468": {
									"entryPoint": 8074,
									"id": 1468,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_193": {
									"entryPoint": 6091,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_updatePool_2310": {
									"entryPoint": 6300,
									"id": 2310,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_updateRewards_2408": {
									"entryPoint": 6458,
									"id": 2408,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@addPool_1785": {
									"entryPoint": 5005,
									"id": 1785,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@baseRewardRate_1591": {
									"entryPoint": 4999,
									"id": 1591,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimReward_2017": {
									"entryPoint": 4605,
									"id": 2017,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@distributeGovernanceTokens_2212": {
									"entryPoint": 5473,
									"id": 2212,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@emergencyWithdraw_2091": {
									"entryPoint": 1736,
									"id": 2091,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionCallWithValue_1293": {
									"entryPoint": 7723,
									"id": 1293,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_1229": {
									"entryPoint": 7670,
									"id": 1229,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@governanceToken_1609": {
									"entryPoint": 5699,
									"id": 1609,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initialize_1736": {
									"entryPoint": 2780,
									"id": 1736,
									"parameterSlots": 8,
									"returnSlots": 0
								},
								"@isContract_1157": {
									"entryPoint": 8040,
									"id": 1157,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@maxMultiplier_1593": {
									"entryPoint": 1331,
									"id": 1593,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@multiplierDuration_1595": {
									"entryPoint": 1337,
									"id": 1595,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nftBoostRate_1597": {
									"entryPoint": 5561,
									"id": 1597,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nftToken_1606": {
									"entryPoint": 5435,
									"id": 1606,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_105": {
									"entryPoint": 3351,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_2223": {
									"entryPoint": 2744,
									"id": 2223,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_1603": {
									"entryPoint": 2168,
									"id": 1603,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@poolInfo_1574": {
									"entryPoint": 1395,
									"id": 1574,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@poolStakes_1581": {
									"entryPoint": 1586,
									"id": 1581,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@refereeBonus_1601": {
									"entryPoint": 5429,
									"id": 1601,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@referralBonus_1599": {
									"entryPoint": 5423,
									"id": 1599,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@referralRewards_1589": {
									"entryPoint": 2147,
									"id": 1589,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@referrers_1585": {
									"entryPoint": 1688,
									"id": 1585,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_136": {
									"entryPoint": 2186,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_707": {
									"entryPoint": 6954,
									"id": 707,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_680": {
									"entryPoint": 5948,
									"id": 680,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setLockDuration_2181": {
									"entryPoint": 1343,
									"id": 2181,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setNftBoostRate_2194": {
									"entryPoint": 1635,
									"id": 2194,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setReferrer_2145": {
									"entryPoint": 3907,
									"id": 2145,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRewardRate_2163": {
									"entryPoint": 1534,
									"id": 2163,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stake_1877": {
									"entryPoint": 2205,
									"id": 1877,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@transferOwnership_164": {
									"entryPoint": 5567,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpause_2234": {
									"entryPoint": 1653,
									"id": 2234,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unstake_1961": {
									"entryPoint": 3404,
									"id": 1961,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1424": {
									"entryPoint": 7924,
									"id": 1424,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 8623,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 11013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20Upgradeable_$611": {
									"entryPoint": 8931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC721Upgradeable_$1139": {
									"entryPoint": 8990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 10875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 9344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 11033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20Upgradeable_$611t_contract$_IERC20Upgradeable_$611t_uint256t_uint256": {
									"entryPoint": 9187,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_contract$_IERC20Upgradeable_$611t_contract$_IERC721Upgradeable_$1139t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256": {
									"entryPoint": 9010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 8
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 10895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 8643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 8248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 11394,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20Upgradeable_$611_to_t_address_fromStack": {
									"entryPoint": 8460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC721Upgradeable_$1139_to_t_address_fromStack": {
									"entryPoint": 9304,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 10051,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11594,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11296,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6e5308c76c16e443e61e6f371a85ac036d94edcc9d74e3b3746b595a2d6481ab_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10339,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_70a4a744132fc9399c082f0c459154fe3f5ba22b57af6b69242ec317d0c935a9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11154,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e731ba893c68928f02781756791066f23259e50b4884778db05599c2eb032f36_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9532,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10614,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 11442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8816,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10938,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10507,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10678,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 8867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20Upgradeable_$611__to_t_address__fromStack_reversed": {
									"entryPoint": 9406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20Upgradeable_$611_t_contract$_IERC20Upgradeable_$611_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8475,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721Upgradeable_$1139__to_t_address__fromStack_reversed": {
									"entryPoint": 9319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 10066,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10165,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6e5308c76c16e443e61e6f371a85ac036d94edcc9d74e3b3746b595a2d6481ab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10373,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_70a4a744132fc9399c082f0c459154fe3f5ba22b57af6b69242ec317d0c935a9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11188,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9766,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e731ba893c68928f02781756791066f23259e50b4884778db05599c2eb032f36__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9566,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10648,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8177,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9951,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8705,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 11360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 11568,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 11370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 9476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 10827,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 10717,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9641,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8584,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8841,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20Upgradeable_$611": {
									"entryPoint": 8892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC721Upgradeable_$1139": {
									"entryPoint": 8951,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 9990,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 9999,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20Upgradeable_$611_to_t_address": {
									"entryPoint": 8443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC721Upgradeable_$1139_to_t_address": {
									"entryPoint": 9287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 10018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 8426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 8393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 11380,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 8384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9596,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 10782,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 9431,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8202,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 11578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16": {
									"entryPoint": 10091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51": {
									"entryPoint": 10403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab": {
									"entryPoint": 9796,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 11218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6e5308c76c16e443e61e6f371a85ac036d94edcc9d74e3b3746b595a2d6481ab": {
									"entryPoint": 10299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_70a4a744132fc9399c082f0c459154fe3f5ba22b57af6b69242ec317d0c935a9": {
									"entryPoint": 10195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 11464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 11076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d": {
									"entryPoint": 9692,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e731ba893c68928f02781756791066f23259e50b4884778db05599c2eb032f36": {
									"entryPoint": 9492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 10574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 10991,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20Upgradeable_$611": {
									"entryPoint": 8909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC721Upgradeable_$1139": {
									"entryPoint": 8968,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:28929:11",
										"nodeType": "YulBlock",
										"src": "0:28929:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:11",
													"nodeType": "YulBlock",
													"src": "52:32:11",
													"statements": [
														{
															"nativeSrc": "62:16:11",
															"nodeType": "YulAssignment",
															"src": "62:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:11",
																"nodeType": "YulIdentifier",
																"src": "73:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:11",
														"nodeType": "YulTypedName",
														"src": "34:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:11",
														"nodeType": "YulTypedName",
														"src": "44:7:11",
														"type": ""
													}
												],
												"src": "7:77:11"
											},
											{
												"body": {
													"nativeSrc": "155:53:11",
													"nodeType": "YulBlock",
													"src": "155:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:11"
																		},
																		"nativeSrc": "177:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:11"
																},
																"nativeSrc": "165:37:11",
																"nodeType": "YulFunctionCall",
																"src": "165:37:11"
															},
															"nativeSrc": "165:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:11",
														"nodeType": "YulTypedName",
														"src": "143:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:11",
														"nodeType": "YulTypedName",
														"src": "150:3:11",
														"type": ""
													}
												],
												"src": "90:118:11"
											},
											{
												"body": {
													"nativeSrc": "312:124:11",
													"nodeType": "YulBlock",
													"src": "312:124:11",
													"statements": [
														{
															"nativeSrc": "322:26:11",
															"nodeType": "YulAssignment",
															"src": "322:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:11",
																		"nodeType": "YulLiteral",
																		"src": "345:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:11"
																},
																"nativeSrc": "330:18:11",
																"nodeType": "YulFunctionCall",
																"src": "330:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:11",
																				"nodeType": "YulLiteral",
																				"src": "426:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:11"
																		},
																		"nativeSrc": "411:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:11"
																},
																"nativeSrc": "358:71:11",
																"nodeType": "YulFunctionCall",
																"src": "358:71:11"
															},
															"nativeSrc": "358:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:11",
														"nodeType": "YulTypedName",
														"src": "284:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:11",
														"nodeType": "YulTypedName",
														"src": "296:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:11",
														"nodeType": "YulTypedName",
														"src": "307:4:11",
														"type": ""
													}
												],
												"src": "214:222:11"
											},
											{
												"body": {
													"nativeSrc": "482:35:11",
													"nodeType": "YulBlock",
													"src": "482:35:11",
													"statements": [
														{
															"nativeSrc": "492:19:11",
															"nodeType": "YulAssignment",
															"src": "492:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "508:2:11",
																		"nodeType": "YulLiteral",
																		"src": "508:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "502:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:11"
																},
																"nativeSrc": "502:9:11",
																"nodeType": "YulFunctionCall",
																"src": "502:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "492:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "442:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "475:6:11",
														"nodeType": "YulTypedName",
														"src": "475:6:11",
														"type": ""
													}
												],
												"src": "442:75:11"
											},
											{
												"body": {
													"nativeSrc": "612:28:11",
													"nodeType": "YulBlock",
													"src": "612:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "629:1:11",
																		"nodeType": "YulLiteral",
																		"src": "629:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "632:1:11",
																		"nodeType": "YulLiteral",
																		"src": "632:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "622:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:11"
																},
																"nativeSrc": "622:12:11",
																"nodeType": "YulFunctionCall",
																"src": "622:12:11"
															},
															"nativeSrc": "622:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "622:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "523:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:11"
											},
											{
												"body": {
													"nativeSrc": "735:28:11",
													"nodeType": "YulBlock",
													"src": "735:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "752:1:11",
																		"nodeType": "YulLiteral",
																		"src": "752:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "755:1:11",
																		"nodeType": "YulLiteral",
																		"src": "755:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "745:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:11"
																},
																"nativeSrc": "745:12:11",
																"nodeType": "YulFunctionCall",
																"src": "745:12:11"
															},
															"nativeSrc": "745:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "745:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "646:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:11"
											},
											{
												"body": {
													"nativeSrc": "812:79:11",
													"nodeType": "YulBlock",
													"src": "812:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:16:11",
																"nodeType": "YulBlock",
																"src": "869:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "878:1:11",
																					"nodeType": "YulLiteral",
																					"src": "878:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "881:1:11",
																					"nodeType": "YulLiteral",
																					"src": "881:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "871:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "871:6:11"
																			},
																			"nativeSrc": "871:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "871:12:11"
																		},
																		"nativeSrc": "871:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "835:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "835:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "860:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "860:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "842:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "842:17:11"
																				},
																				"nativeSrc": "842:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "842:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "832:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "832:2:11"
																		},
																		"nativeSrc": "832:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "832:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "825:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "825:6:11"
																},
																"nativeSrc": "825:43:11",
																"nodeType": "YulFunctionCall",
																"src": "825:43:11"
															},
															"nativeSrc": "822:63:11",
															"nodeType": "YulIf",
															"src": "822:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "769:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "805:5:11",
														"nodeType": "YulTypedName",
														"src": "805:5:11",
														"type": ""
													}
												],
												"src": "769:122:11"
											},
											{
												"body": {
													"nativeSrc": "949:87:11",
													"nodeType": "YulBlock",
													"src": "949:87:11",
													"statements": [
														{
															"nativeSrc": "959:29:11",
															"nodeType": "YulAssignment",
															"src": "959:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "981:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "981:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "968:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:11"
																},
																"nativeSrc": "968:20:11",
																"nodeType": "YulFunctionCall",
																"src": "968:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "959:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1024:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "997:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "997:26:11"
																},
																"nativeSrc": "997:33:11",
																"nodeType": "YulFunctionCall",
																"src": "997:33:11"
															},
															"nativeSrc": "997:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "997:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "897:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "927:6:11",
														"nodeType": "YulTypedName",
														"src": "927:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "935:3:11",
														"nodeType": "YulTypedName",
														"src": "935:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "943:5:11",
														"nodeType": "YulTypedName",
														"src": "943:5:11",
														"type": ""
													}
												],
												"src": "897:139:11"
											},
											{
												"body": {
													"nativeSrc": "1125:391:11",
													"nodeType": "YulBlock",
													"src": "1125:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1171:83:11",
																"nodeType": "YulBlock",
																"src": "1171:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1173:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "1173:77:11"
																			},
																			"nativeSrc": "1173:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1173:79:11"
																		},
																		"nativeSrc": "1173:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1173:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1146:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1146:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1155:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1155:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1142:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1142:3:11"
																		},
																		"nativeSrc": "1142:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1142:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1167:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1167:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1138:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1138:3:11"
																},
																"nativeSrc": "1138:32:11",
																"nodeType": "YulFunctionCall",
																"src": "1138:32:11"
															},
															"nativeSrc": "1135:119:11",
															"nodeType": "YulIf",
															"src": "1135:119:11"
														},
														{
															"nativeSrc": "1264:117:11",
															"nodeType": "YulBlock",
															"src": "1264:117:11",
															"statements": [
																{
																	"nativeSrc": "1279:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1279:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1293:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1293:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1283:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1283:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1308:63:11",
																	"nodeType": "YulAssignment",
																	"src": "1308:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1343:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1343:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1354:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1354:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1339:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1339:3:11"
																				},
																				"nativeSrc": "1339:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1339:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1363:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1363:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1318:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "1318:20:11"
																		},
																		"nativeSrc": "1318:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1318:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1308:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1308:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1391:118:11",
															"nodeType": "YulBlock",
															"src": "1391:118:11",
															"statements": [
																{
																	"nativeSrc": "1406:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1406:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1420:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1420:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1410:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1410:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1436:63:11",
																	"nodeType": "YulAssignment",
																	"src": "1436:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1471:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1471:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1482:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1482:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1467:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1467:3:11"
																				},
																				"nativeSrc": "1467:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1467:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1491:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1491:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1446:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "1446:20:11"
																		},
																		"nativeSrc": "1446:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1446:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1436:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1436:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "1042:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1087:9:11",
														"nodeType": "YulTypedName",
														"src": "1087:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1098:7:11",
														"nodeType": "YulTypedName",
														"src": "1098:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1110:6:11",
														"nodeType": "YulTypedName",
														"src": "1110:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1118:6:11",
														"nodeType": "YulTypedName",
														"src": "1118:6:11",
														"type": ""
													}
												],
												"src": "1042:474:11"
											},
											{
												"body": {
													"nativeSrc": "1588:263:11",
													"nodeType": "YulBlock",
													"src": "1588:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1634:83:11",
																"nodeType": "YulBlock",
																"src": "1634:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1636:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "1636:77:11"
																			},
																			"nativeSrc": "1636:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1636:79:11"
																		},
																		"nativeSrc": "1636:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1636:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1609:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1609:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1618:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1618:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1605:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1605:3:11"
																		},
																		"nativeSrc": "1605:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1605:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1630:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1630:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1601:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1601:3:11"
																},
																"nativeSrc": "1601:32:11",
																"nodeType": "YulFunctionCall",
																"src": "1601:32:11"
															},
															"nativeSrc": "1598:119:11",
															"nodeType": "YulIf",
															"src": "1598:119:11"
														},
														{
															"nativeSrc": "1727:117:11",
															"nodeType": "YulBlock",
															"src": "1727:117:11",
															"statements": [
																{
																	"nativeSrc": "1742:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1742:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1756:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1756:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1746:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1746:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1771:63:11",
																	"nodeType": "YulAssignment",
																	"src": "1771:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1806:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1806:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1817:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1817:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1802:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1802:3:11"
																				},
																				"nativeSrc": "1802:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1802:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1826:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1826:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1781:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "1781:20:11"
																		},
																		"nativeSrc": "1781:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1781:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1771:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1771:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1522:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1558:9:11",
														"nodeType": "YulTypedName",
														"src": "1558:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1569:7:11",
														"nodeType": "YulTypedName",
														"src": "1569:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1581:6:11",
														"nodeType": "YulTypedName",
														"src": "1581:6:11",
														"type": ""
													}
												],
												"src": "1522:329:11"
											},
											{
												"body": {
													"nativeSrc": "1902:81:11",
													"nodeType": "YulBlock",
													"src": "1902:81:11",
													"statements": [
														{
															"nativeSrc": "1912:65:11",
															"nodeType": "YulAssignment",
															"src": "1912:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1927:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1927:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1934:42:11",
																		"nodeType": "YulLiteral",
																		"src": "1934:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1923:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1923:3:11"
																},
																"nativeSrc": "1923:54:11",
																"nodeType": "YulFunctionCall",
																"src": "1923:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1912:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1912:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1857:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1884:5:11",
														"nodeType": "YulTypedName",
														"src": "1884:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1894:7:11",
														"nodeType": "YulTypedName",
														"src": "1894:7:11",
														"type": ""
													}
												],
												"src": "1857:126:11"
											},
											{
												"body": {
													"nativeSrc": "2021:28:11",
													"nodeType": "YulBlock",
													"src": "2021:28:11",
													"statements": [
														{
															"nativeSrc": "2031:12:11",
															"nodeType": "YulAssignment",
															"src": "2031:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "2038:5:11",
																"nodeType": "YulIdentifier",
																"src": "2038:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2031:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2031:3:11"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1989:60:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2007:5:11",
														"nodeType": "YulTypedName",
														"src": "2007:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2017:3:11",
														"nodeType": "YulTypedName",
														"src": "2017:3:11",
														"type": ""
													}
												],
												"src": "1989:60:11"
											},
											{
												"body": {
													"nativeSrc": "2115:82:11",
													"nodeType": "YulBlock",
													"src": "2115:82:11",
													"statements": [
														{
															"nativeSrc": "2125:66:11",
															"nodeType": "YulAssignment",
															"src": "2125:66:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2183:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "2183:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "2165:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "2165:17:11"
																				},
																				"nativeSrc": "2165:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2165:24:11"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2156:8:11",
																			"nodeType": "YulIdentifier",
																			"src": "2156:8:11"
																		},
																		"nativeSrc": "2156:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2156:34:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2138:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "2138:17:11"
																},
																"nativeSrc": "2138:53:11",
																"nodeType": "YulFunctionCall",
																"src": "2138:53:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2125:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "2125:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2055:142:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2095:5:11",
														"nodeType": "YulTypedName",
														"src": "2095:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2105:9:11",
														"nodeType": "YulTypedName",
														"src": "2105:9:11",
														"type": ""
													}
												],
												"src": "2055:142:11"
											},
											{
												"body": {
													"nativeSrc": "2263:66:11",
													"nodeType": "YulBlock",
													"src": "2263:66:11",
													"statements": [
														{
															"nativeSrc": "2273:50:11",
															"nodeType": "YulAssignment",
															"src": "2273:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2317:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2317:5:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "2286:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "2286:30:11"
																},
																"nativeSrc": "2286:37:11",
																"nodeType": "YulFunctionCall",
																"src": "2286:37:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2273:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "2273:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "2203:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2243:5:11",
														"nodeType": "YulTypedName",
														"src": "2243:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2253:9:11",
														"nodeType": "YulTypedName",
														"src": "2253:9:11",
														"type": ""
													}
												],
												"src": "2203:126:11"
											},
											{
												"body": {
													"nativeSrc": "2420:66:11",
													"nodeType": "YulBlock",
													"src": "2420:66:11",
													"statements": [
														{
															"nativeSrc": "2430:50:11",
															"nodeType": "YulAssignment",
															"src": "2430:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2474:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2474:5:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2443:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "2443:30:11"
																},
																"nativeSrc": "2443:37:11",
																"nodeType": "YulFunctionCall",
																"src": "2443:37:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2430:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "2430:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20Upgradeable_$611_to_t_address",
												"nativeSrc": "2335:151:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2400:5:11",
														"nodeType": "YulTypedName",
														"src": "2400:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2410:9:11",
														"nodeType": "YulTypedName",
														"src": "2410:9:11",
														"type": ""
													}
												],
												"src": "2335:151:11"
											},
											{
												"body": {
													"nativeSrc": "2582:91:11",
													"nodeType": "YulBlock",
													"src": "2582:91:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2599:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2599:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2660:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2660:5:11"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20Upgradeable_$611_to_t_address",
																			"nativeSrc": "2604:55:11",
																			"nodeType": "YulIdentifier",
																			"src": "2604:55:11"
																		},
																		"nativeSrc": "2604:62:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2604:62:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2592:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2592:6:11"
																},
																"nativeSrc": "2592:75:11",
																"nodeType": "YulFunctionCall",
																"src": "2592:75:11"
															},
															"nativeSrc": "2592:75:11",
															"nodeType": "YulExpressionStatement",
															"src": "2592:75:11"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20Upgradeable_$611_to_t_address_fromStack",
												"nativeSrc": "2492:181:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2570:5:11",
														"nodeType": "YulTypedName",
														"src": "2570:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2577:3:11",
														"nodeType": "YulTypedName",
														"src": "2577:3:11",
														"type": ""
													}
												],
												"src": "2492:181:11"
											},
											{
												"body": {
													"nativeSrc": "2995:670:11",
													"nodeType": "YulBlock",
													"src": "2995:670:11",
													"statements": [
														{
															"nativeSrc": "3005:27:11",
															"nodeType": "YulAssignment",
															"src": "3005:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3017:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3017:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3028:3:11",
																		"nodeType": "YulLiteral",
																		"src": "3028:3:11",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3013:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3013:3:11"
																},
																"nativeSrc": "3013:19:11",
																"nodeType": "YulFunctionCall",
																"src": "3013:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3005:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3005:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3111:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3111:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3124:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3124:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3135:1:11",
																				"nodeType": "YulLiteral",
																				"src": "3135:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3120:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3120:3:11"
																		},
																		"nativeSrc": "3120:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3120:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20Upgradeable_$611_to_t_address_fromStack",
																	"nativeSrc": "3042:68:11",
																	"nodeType": "YulIdentifier",
																	"src": "3042:68:11"
																},
																"nativeSrc": "3042:96:11",
																"nodeType": "YulFunctionCall",
																"src": "3042:96:11"
															},
															"nativeSrc": "3042:96:11",
															"nodeType": "YulExpressionStatement",
															"src": "3042:96:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3217:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3217:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3230:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3230:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3241:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3241:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3226:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3226:3:11"
																		},
																		"nativeSrc": "3226:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3226:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20Upgradeable_$611_to_t_address_fromStack",
																	"nativeSrc": "3148:68:11",
																	"nodeType": "YulIdentifier",
																	"src": "3148:68:11"
																},
																"nativeSrc": "3148:97:11",
																"nodeType": "YulFunctionCall",
																"src": "3148:97:11"
															},
															"nativeSrc": "3148:97:11",
															"nodeType": "YulExpressionStatement",
															"src": "3148:97:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "3299:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3323:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:11"
																		},
																		"nativeSrc": "3308:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3255:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "3255:43:11"
																},
																"nativeSrc": "3255:72:11",
																"nodeType": "YulFunctionCall",
																"src": "3255:72:11"
															},
															"nativeSrc": "3255:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "3255:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "3381:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3381:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3394:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3394:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3405:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3405:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3390:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3390:3:11"
																		},
																		"nativeSrc": "3390:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3390:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3337:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "3337:43:11"
																},
																"nativeSrc": "3337:72:11",
																"nodeType": "YulFunctionCall",
																"src": "3337:72:11"
															},
															"nativeSrc": "3337:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "3337:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "3463:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3463:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3476:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3476:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3487:3:11",
																				"nodeType": "YulLiteral",
																				"src": "3487:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3472:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3472:3:11"
																		},
																		"nativeSrc": "3472:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3472:19:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3419:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "3419:43:11"
																},
																"nativeSrc": "3419:73:11",
																"nodeType": "YulFunctionCall",
																"src": "3419:73:11"
															},
															"nativeSrc": "3419:73:11",
															"nodeType": "YulExpressionStatement",
															"src": "3419:73:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "3546:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3546:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3559:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3559:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3570:3:11",
																				"nodeType": "YulLiteral",
																				"src": "3570:3:11",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3555:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3555:3:11"
																		},
																		"nativeSrc": "3555:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3555:19:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3502:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "3502:43:11"
																},
																"nativeSrc": "3502:73:11",
																"nodeType": "YulFunctionCall",
																"src": "3502:73:11"
															},
															"nativeSrc": "3502:73:11",
															"nodeType": "YulExpressionStatement",
															"src": "3502:73:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "3629:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3629:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3642:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3642:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3653:3:11",
																				"nodeType": "YulLiteral",
																				"src": "3653:3:11",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3638:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3638:3:11"
																		},
																		"nativeSrc": "3638:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3638:19:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3585:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "3585:43:11"
																},
																"nativeSrc": "3585:73:11",
																"nodeType": "YulFunctionCall",
																"src": "3585:73:11"
															},
															"nativeSrc": "3585:73:11",
															"nodeType": "YulExpressionStatement",
															"src": "3585:73:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20Upgradeable_$611_t_contract$_IERC20Upgradeable_$611_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2679:986:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2919:9:11",
														"nodeType": "YulTypedName",
														"src": "2919:9:11",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "2931:6:11",
														"nodeType": "YulTypedName",
														"src": "2931:6:11",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "2939:6:11",
														"nodeType": "YulTypedName",
														"src": "2939:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2947:6:11",
														"nodeType": "YulTypedName",
														"src": "2947:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2955:6:11",
														"nodeType": "YulTypedName",
														"src": "2955:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2963:6:11",
														"nodeType": "YulTypedName",
														"src": "2963:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2971:6:11",
														"nodeType": "YulTypedName",
														"src": "2971:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2979:6:11",
														"nodeType": "YulTypedName",
														"src": "2979:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2990:4:11",
														"nodeType": "YulTypedName",
														"src": "2990:4:11",
														"type": ""
													}
												],
												"src": "2679:986:11"
											},
											{
												"body": {
													"nativeSrc": "3716:51:11",
													"nodeType": "YulBlock",
													"src": "3716:51:11",
													"statements": [
														{
															"nativeSrc": "3726:35:11",
															"nodeType": "YulAssignment",
															"src": "3726:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3755:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3755:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3737:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "3737:17:11"
																},
																"nativeSrc": "3737:24:11",
																"nodeType": "YulFunctionCall",
																"src": "3737:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3726:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "3726:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3671:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3698:5:11",
														"nodeType": "YulTypedName",
														"src": "3698:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3708:7:11",
														"nodeType": "YulTypedName",
														"src": "3708:7:11",
														"type": ""
													}
												],
												"src": "3671:96:11"
											},
											{
												"body": {
													"nativeSrc": "3816:79:11",
													"nodeType": "YulBlock",
													"src": "3816:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3873:16:11",
																"nodeType": "YulBlock",
																"src": "3873:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3882:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3882:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3885:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3885:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3875:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3875:6:11"
																			},
																			"nativeSrc": "3875:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3875:12:11"
																		},
																		"nativeSrc": "3875:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3875:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3839:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3839:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3864:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "3864:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3846:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "3846:17:11"
																				},
																				"nativeSrc": "3846:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3846:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3836:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "3836:2:11"
																		},
																		"nativeSrc": "3836:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3836:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3829:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3829:6:11"
																},
																"nativeSrc": "3829:43:11",
																"nodeType": "YulFunctionCall",
																"src": "3829:43:11"
															},
															"nativeSrc": "3826:63:11",
															"nodeType": "YulIf",
															"src": "3826:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3773:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3809:5:11",
														"nodeType": "YulTypedName",
														"src": "3809:5:11",
														"type": ""
													}
												],
												"src": "3773:122:11"
											},
											{
												"body": {
													"nativeSrc": "3953:87:11",
													"nodeType": "YulBlock",
													"src": "3953:87:11",
													"statements": [
														{
															"nativeSrc": "3963:29:11",
															"nodeType": "YulAssignment",
															"src": "3963:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3985:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3985:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3972:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "3972:12:11"
																},
																"nativeSrc": "3972:20:11",
																"nodeType": "YulFunctionCall",
																"src": "3972:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3963:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3963:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4028:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "4028:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4001:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "4001:26:11"
																},
																"nativeSrc": "4001:33:11",
																"nodeType": "YulFunctionCall",
																"src": "4001:33:11"
															},
															"nativeSrc": "4001:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "4001:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3901:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3931:6:11",
														"nodeType": "YulTypedName",
														"src": "3931:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3939:3:11",
														"nodeType": "YulTypedName",
														"src": "3939:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3947:5:11",
														"nodeType": "YulTypedName",
														"src": "3947:5:11",
														"type": ""
													}
												],
												"src": "3901:139:11"
											},
											{
												"body": {
													"nativeSrc": "4129:391:11",
													"nodeType": "YulBlock",
													"src": "4129:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4175:83:11",
																"nodeType": "YulBlock",
																"src": "4175:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4177:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "4177:77:11"
																			},
																			"nativeSrc": "4177:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4177:79:11"
																		},
																		"nativeSrc": "4177:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4177:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4150:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4150:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4159:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4159:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4146:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4146:3:11"
																		},
																		"nativeSrc": "4146:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4146:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4171:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4171:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4142:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4142:3:11"
																},
																"nativeSrc": "4142:32:11",
																"nodeType": "YulFunctionCall",
																"src": "4142:32:11"
															},
															"nativeSrc": "4139:119:11",
															"nodeType": "YulIf",
															"src": "4139:119:11"
														},
														{
															"nativeSrc": "4268:117:11",
															"nodeType": "YulBlock",
															"src": "4268:117:11",
															"statements": [
																{
																	"nativeSrc": "4283:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4283:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4297:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4297:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4287:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4287:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4312:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4312:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4347:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4347:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4358:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4358:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4343:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4343:3:11"
																				},
																				"nativeSrc": "4343:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4343:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4367:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4367:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4322:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4322:20:11"
																		},
																		"nativeSrc": "4322:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4322:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4312:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4312:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4395:118:11",
															"nodeType": "YulBlock",
															"src": "4395:118:11",
															"statements": [
																{
																	"nativeSrc": "4410:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4424:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4424:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4414:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4414:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4440:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4440:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4475:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4475:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4486:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4486:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4471:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4471:3:11"
																				},
																				"nativeSrc": "4471:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4471:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4495:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4495:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4450:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4450:20:11"
																		},
																		"nativeSrc": "4450:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4450:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4440:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4440:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nativeSrc": "4046:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4091:9:11",
														"nodeType": "YulTypedName",
														"src": "4091:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4102:7:11",
														"nodeType": "YulTypedName",
														"src": "4102:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4114:6:11",
														"nodeType": "YulTypedName",
														"src": "4114:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4122:6:11",
														"nodeType": "YulTypedName",
														"src": "4122:6:11",
														"type": ""
													}
												],
												"src": "4046:474:11"
											},
											{
												"body": {
													"nativeSrc": "4680:288:11",
													"nodeType": "YulBlock",
													"src": "4680:288:11",
													"statements": [
														{
															"nativeSrc": "4690:26:11",
															"nodeType": "YulAssignment",
															"src": "4690:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4702:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4702:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4713:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4713:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4698:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4698:3:11"
																},
																"nativeSrc": "4698:18:11",
																"nodeType": "YulFunctionCall",
																"src": "4698:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4690:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4690:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4770:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4770:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4783:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4783:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4794:1:11",
																				"nodeType": "YulLiteral",
																				"src": "4794:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4779:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4779:3:11"
																		},
																		"nativeSrc": "4779:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4779:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4726:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "4726:43:11"
																},
																"nativeSrc": "4726:71:11",
																"nodeType": "YulFunctionCall",
																"src": "4726:71:11"
															},
															"nativeSrc": "4726:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "4726:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4851:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4851:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4864:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4864:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4875:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4875:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4860:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4860:3:11"
																		},
																		"nativeSrc": "4860:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4860:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4807:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "4807:43:11"
																},
																"nativeSrc": "4807:72:11",
																"nodeType": "YulFunctionCall",
																"src": "4807:72:11"
															},
															"nativeSrc": "4807:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "4807:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "4933:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4933:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4946:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4946:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4957:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4957:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4942:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4942:3:11"
																		},
																		"nativeSrc": "4942:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4942:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4889:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "4889:43:11"
																},
																"nativeSrc": "4889:72:11",
																"nodeType": "YulFunctionCall",
																"src": "4889:72:11"
															},
															"nativeSrc": "4889:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "4889:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4526:442:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4636:9:11",
														"nodeType": "YulTypedName",
														"src": "4636:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4648:6:11",
														"nodeType": "YulTypedName",
														"src": "4648:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4656:6:11",
														"nodeType": "YulTypedName",
														"src": "4656:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4664:6:11",
														"nodeType": "YulTypedName",
														"src": "4664:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4675:4:11",
														"nodeType": "YulTypedName",
														"src": "4675:4:11",
														"type": ""
													}
												],
												"src": "4526:442:11"
											},
											{
												"body": {
													"nativeSrc": "5040:263:11",
													"nodeType": "YulBlock",
													"src": "5040:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5086:83:11",
																"nodeType": "YulBlock",
																"src": "5086:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5088:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "5088:77:11"
																			},
																			"nativeSrc": "5088:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5088:79:11"
																		},
																		"nativeSrc": "5088:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5088:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5061:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5061:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5070:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5070:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5057:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5057:3:11"
																		},
																		"nativeSrc": "5057:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5057:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5082:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5082:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5053:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5053:3:11"
																},
																"nativeSrc": "5053:32:11",
																"nodeType": "YulFunctionCall",
																"src": "5053:32:11"
															},
															"nativeSrc": "5050:119:11",
															"nodeType": "YulIf",
															"src": "5050:119:11"
														},
														{
															"nativeSrc": "5179:117:11",
															"nodeType": "YulBlock",
															"src": "5179:117:11",
															"statements": [
																{
																	"nativeSrc": "5194:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5194:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5208:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5208:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5198:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5198:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5223:63:11",
																	"nodeType": "YulAssignment",
																	"src": "5223:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5258:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5258:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5269:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5269:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5254:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5254:3:11"
																				},
																				"nativeSrc": "5254:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5254:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5278:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5278:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5233:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5233:20:11"
																		},
																		"nativeSrc": "5233:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5233:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5223:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5223:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4974:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5010:9:11",
														"nodeType": "YulTypedName",
														"src": "5010:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5021:7:11",
														"nodeType": "YulTypedName",
														"src": "5021:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5033:6:11",
														"nodeType": "YulTypedName",
														"src": "5033:6:11",
														"type": ""
													}
												],
												"src": "4974:329:11"
											},
											{
												"body": {
													"nativeSrc": "5374:53:11",
													"nodeType": "YulBlock",
													"src": "5374:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5391:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5391:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5414:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5414:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5396:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "5396:17:11"
																		},
																		"nativeSrc": "5396:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5396:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5384:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5384:6:11"
																},
																"nativeSrc": "5384:37:11",
																"nodeType": "YulFunctionCall",
																"src": "5384:37:11"
															},
															"nativeSrc": "5384:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "5384:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5309:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5362:5:11",
														"nodeType": "YulTypedName",
														"src": "5362:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5369:3:11",
														"nodeType": "YulTypedName",
														"src": "5369:3:11",
														"type": ""
													}
												],
												"src": "5309:118:11"
											},
											{
												"body": {
													"nativeSrc": "5531:124:11",
													"nodeType": "YulBlock",
													"src": "5531:124:11",
													"statements": [
														{
															"nativeSrc": "5541:26:11",
															"nodeType": "YulAssignment",
															"src": "5541:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5553:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5553:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5564:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5564:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5549:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5549:3:11"
																},
																"nativeSrc": "5549:18:11",
																"nodeType": "YulFunctionCall",
																"src": "5549:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5541:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5541:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5621:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5621:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5634:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5634:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5645:1:11",
																				"nodeType": "YulLiteral",
																				"src": "5645:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5630:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5630:3:11"
																		},
																		"nativeSrc": "5630:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5630:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5577:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "5577:43:11"
																},
																"nativeSrc": "5577:71:11",
																"nodeType": "YulFunctionCall",
																"src": "5577:71:11"
															},
															"nativeSrc": "5577:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "5577:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5433:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5503:9:11",
														"nodeType": "YulTypedName",
														"src": "5503:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5515:6:11",
														"nodeType": "YulTypedName",
														"src": "5515:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5526:4:11",
														"nodeType": "YulTypedName",
														"src": "5526:4:11",
														"type": ""
													}
												],
												"src": "5433:222:11"
											},
											{
												"body": {
													"nativeSrc": "5703:48:11",
													"nodeType": "YulBlock",
													"src": "5703:48:11",
													"statements": [
														{
															"nativeSrc": "5713:32:11",
															"nodeType": "YulAssignment",
															"src": "5713:32:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5738:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5738:5:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5731:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5731:6:11"
																		},
																		"nativeSrc": "5731:13:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5731:13:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5724:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5724:6:11"
																},
																"nativeSrc": "5724:21:11",
																"nodeType": "YulFunctionCall",
																"src": "5724:21:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5713:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "5713:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "5661:90:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5685:5:11",
														"nodeType": "YulTypedName",
														"src": "5685:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5695:7:11",
														"nodeType": "YulTypedName",
														"src": "5695:7:11",
														"type": ""
													}
												],
												"src": "5661:90:11"
											},
											{
												"body": {
													"nativeSrc": "5816:50:11",
													"nodeType": "YulBlock",
													"src": "5816:50:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5833:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5833:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5853:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5853:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "5838:14:11",
																			"nodeType": "YulIdentifier",
																			"src": "5838:14:11"
																		},
																		"nativeSrc": "5838:21:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5838:21:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5826:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5826:6:11"
																},
																"nativeSrc": "5826:34:11",
																"nodeType": "YulFunctionCall",
																"src": "5826:34:11"
															},
															"nativeSrc": "5826:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "5826:34:11"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "5757:109:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5804:5:11",
														"nodeType": "YulTypedName",
														"src": "5804:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5811:3:11",
														"nodeType": "YulTypedName",
														"src": "5811:3:11",
														"type": ""
													}
												],
												"src": "5757:109:11"
											},
											{
												"body": {
													"nativeSrc": "5964:118:11",
													"nodeType": "YulBlock",
													"src": "5964:118:11",
													"statements": [
														{
															"nativeSrc": "5974:26:11",
															"nodeType": "YulAssignment",
															"src": "5974:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5986:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5986:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5997:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5997:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5982:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5982:3:11"
																},
																"nativeSrc": "5982:18:11",
																"nodeType": "YulFunctionCall",
																"src": "5982:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5974:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5974:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6048:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6048:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6061:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6061:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6072:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6072:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6057:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6057:3:11"
																		},
																		"nativeSrc": "6057:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6057:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "6010:37:11",
																	"nodeType": "YulIdentifier",
																	"src": "6010:37:11"
																},
																"nativeSrc": "6010:65:11",
																"nodeType": "YulFunctionCall",
																"src": "6010:65:11"
															},
															"nativeSrc": "6010:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "6010:65:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "5872:210:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5936:9:11",
														"nodeType": "YulTypedName",
														"src": "5936:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5948:6:11",
														"nodeType": "YulTypedName",
														"src": "5948:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5959:4:11",
														"nodeType": "YulTypedName",
														"src": "5959:4:11",
														"type": ""
													}
												],
												"src": "5872:210:11"
											},
											{
												"body": {
													"nativeSrc": "6158:51:11",
													"nodeType": "YulBlock",
													"src": "6158:51:11",
													"statements": [
														{
															"nativeSrc": "6168:35:11",
															"nodeType": "YulAssignment",
															"src": "6168:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6197:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "6197:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "6179:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "6179:17:11"
																},
																"nativeSrc": "6179:24:11",
																"nodeType": "YulFunctionCall",
																"src": "6179:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6168:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "6168:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20Upgradeable_$611",
												"nativeSrc": "6088:121:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6140:5:11",
														"nodeType": "YulTypedName",
														"src": "6140:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6150:7:11",
														"nodeType": "YulTypedName",
														"src": "6150:7:11",
														"type": ""
													}
												],
												"src": "6088:121:11"
											},
											{
												"body": {
													"nativeSrc": "6283:104:11",
													"nodeType": "YulBlock",
													"src": "6283:104:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6365:16:11",
																"nodeType": "YulBlock",
																"src": "6365:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6374:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6374:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6377:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6377:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6367:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6367:6:11"
																			},
																			"nativeSrc": "6367:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6367:12:11"
																		},
																		"nativeSrc": "6367:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6367:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6306:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6306:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6356:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "6356:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20Upgradeable_$611",
																					"nativeSrc": "6313:42:11",
																					"nodeType": "YulIdentifier",
																					"src": "6313:42:11"
																				},
																				"nativeSrc": "6313:49:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6313:49:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6303:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "6303:2:11"
																		},
																		"nativeSrc": "6303:60:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6303:60:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6296:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6296:6:11"
																},
																"nativeSrc": "6296:68:11",
																"nodeType": "YulFunctionCall",
																"src": "6296:68:11"
															},
															"nativeSrc": "6293:88:11",
															"nodeType": "YulIf",
															"src": "6293:88:11"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20Upgradeable_$611",
												"nativeSrc": "6215:172:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6276:5:11",
														"nodeType": "YulTypedName",
														"src": "6276:5:11",
														"type": ""
													}
												],
												"src": "6215:172:11"
											},
											{
												"body": {
													"nativeSrc": "6470:112:11",
													"nodeType": "YulBlock",
													"src": "6470:112:11",
													"statements": [
														{
															"nativeSrc": "6480:29:11",
															"nodeType": "YulAssignment",
															"src": "6480:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6502:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6502:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6489:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "6489:12:11"
																},
																"nativeSrc": "6489:20:11",
																"nodeType": "YulFunctionCall",
																"src": "6489:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6480:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "6480:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6570:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "6570:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20Upgradeable_$611",
																	"nativeSrc": "6518:51:11",
																	"nodeType": "YulIdentifier",
																	"src": "6518:51:11"
																},
																"nativeSrc": "6518:58:11",
																"nodeType": "YulFunctionCall",
																"src": "6518:58:11"
															},
															"nativeSrc": "6518:58:11",
															"nodeType": "YulExpressionStatement",
															"src": "6518:58:11"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20Upgradeable_$611",
												"nativeSrc": "6393:189:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6448:6:11",
														"nodeType": "YulTypedName",
														"src": "6448:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6456:3:11",
														"nodeType": "YulTypedName",
														"src": "6456:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6464:5:11",
														"nodeType": "YulTypedName",
														"src": "6464:5:11",
														"type": ""
													}
												],
												"src": "6393:189:11"
											},
											{
												"body": {
													"nativeSrc": "6660:51:11",
													"nodeType": "YulBlock",
													"src": "6660:51:11",
													"statements": [
														{
															"nativeSrc": "6670:35:11",
															"nodeType": "YulAssignment",
															"src": "6670:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6699:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "6699:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "6681:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "6681:17:11"
																},
																"nativeSrc": "6681:24:11",
																"nodeType": "YulFunctionCall",
																"src": "6681:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6670:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "6670:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC721Upgradeable_$1139",
												"nativeSrc": "6588:123:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6642:5:11",
														"nodeType": "YulTypedName",
														"src": "6642:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6652:7:11",
														"nodeType": "YulTypedName",
														"src": "6652:7:11",
														"type": ""
													}
												],
												"src": "6588:123:11"
											},
											{
												"body": {
													"nativeSrc": "6787:106:11",
													"nodeType": "YulBlock",
													"src": "6787:106:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6871:16:11",
																"nodeType": "YulBlock",
																"src": "6871:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6880:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6880:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6883:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6883:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6873:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6873:6:11"
																			},
																			"nativeSrc": "6873:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6873:12:11"
																		},
																		"nativeSrc": "6873:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6873:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6810:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6810:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6862:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "6862:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC721Upgradeable_$1139",
																					"nativeSrc": "6817:44:11",
																					"nodeType": "YulIdentifier",
																					"src": "6817:44:11"
																				},
																				"nativeSrc": "6817:51:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6817:51:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6807:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "6807:2:11"
																		},
																		"nativeSrc": "6807:62:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6807:62:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6800:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6800:6:11"
																},
																"nativeSrc": "6800:70:11",
																"nodeType": "YulFunctionCall",
																"src": "6800:70:11"
															},
															"nativeSrc": "6797:90:11",
															"nodeType": "YulIf",
															"src": "6797:90:11"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC721Upgradeable_$1139",
												"nativeSrc": "6717:176:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6780:5:11",
														"nodeType": "YulTypedName",
														"src": "6780:5:11",
														"type": ""
													}
												],
												"src": "6717:176:11"
											},
											{
												"body": {
													"nativeSrc": "6978:114:11",
													"nodeType": "YulBlock",
													"src": "6978:114:11",
													"statements": [
														{
															"nativeSrc": "6988:29:11",
															"nodeType": "YulAssignment",
															"src": "6988:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7010:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7010:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6997:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "6997:12:11"
																},
																"nativeSrc": "6997:20:11",
																"nodeType": "YulFunctionCall",
																"src": "6997:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6988:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "6988:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7080:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "7080:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC721Upgradeable_$1139",
																	"nativeSrc": "7026:53:11",
																	"nodeType": "YulIdentifier",
																	"src": "7026:53:11"
																},
																"nativeSrc": "7026:60:11",
																"nodeType": "YulFunctionCall",
																"src": "7026:60:11"
															},
															"nativeSrc": "7026:60:11",
															"nodeType": "YulExpressionStatement",
															"src": "7026:60:11"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC721Upgradeable_$1139",
												"nativeSrc": "6899:193:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6956:6:11",
														"nodeType": "YulTypedName",
														"src": "6956:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6964:3:11",
														"nodeType": "YulTypedName",
														"src": "6964:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6972:5:11",
														"nodeType": "YulTypedName",
														"src": "6972:5:11",
														"type": ""
													}
												],
												"src": "6899:193:11"
											},
											{
												"body": {
													"nativeSrc": "7335:1216:11",
													"nodeType": "YulBlock",
													"src": "7335:1216:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "7382:83:11",
																"nodeType": "YulBlock",
																"src": "7382:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7384:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "7384:77:11"
																			},
																			"nativeSrc": "7384:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7384:79:11"
																		},
																		"nativeSrc": "7384:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7384:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7356:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7356:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7365:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7365:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7352:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7352:3:11"
																		},
																		"nativeSrc": "7352:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7352:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7377:3:11",
																		"nodeType": "YulLiteral",
																		"src": "7377:3:11",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7348:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7348:3:11"
																},
																"nativeSrc": "7348:33:11",
																"nodeType": "YulFunctionCall",
																"src": "7348:33:11"
															},
															"nativeSrc": "7345:120:11",
															"nodeType": "YulIf",
															"src": "7345:120:11"
														},
														{
															"nativeSrc": "7475:142:11",
															"nodeType": "YulBlock",
															"src": "7475:142:11",
															"statements": [
																{
																	"nativeSrc": "7490:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7490:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7504:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7504:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7494:6:11",
																			"nodeType": "YulTypedName",
																			"src": "7494:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7519:88:11",
																	"nodeType": "YulAssignment",
																	"src": "7519:88:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7579:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "7579:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7590:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "7590:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7575:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7575:3:11"
																				},
																				"nativeSrc": "7575:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7575:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7599:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7599:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20Upgradeable_$611",
																			"nativeSrc": "7529:45:11",
																			"nodeType": "YulIdentifier",
																			"src": "7529:45:11"
																		},
																		"nativeSrc": "7529:78:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7529:78:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7519:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "7519:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7627:145:11",
															"nodeType": "YulBlock",
															"src": "7627:145:11",
															"statements": [
																{
																	"nativeSrc": "7642:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7642:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7656:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7656:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7646:6:11",
																			"nodeType": "YulTypedName",
																			"src": "7646:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7672:90:11",
																	"nodeType": "YulAssignment",
																	"src": "7672:90:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7734:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "7734:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7745:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "7745:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7730:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7730:3:11"
																				},
																				"nativeSrc": "7730:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7730:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7754:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7754:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC721Upgradeable_$1139",
																			"nativeSrc": "7682:47:11",
																			"nodeType": "YulIdentifier",
																			"src": "7682:47:11"
																		},
																		"nativeSrc": "7682:80:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7682:80:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7672:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "7672:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7782:118:11",
															"nodeType": "YulBlock",
															"src": "7782:118:11",
															"statements": [
																{
																	"nativeSrc": "7797:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7797:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7811:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7811:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7801:6:11",
																			"nodeType": "YulTypedName",
																			"src": "7801:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7827:63:11",
																	"nodeType": "YulAssignment",
																	"src": "7827:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7862:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "7862:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7873:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "7873:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7858:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7858:3:11"
																				},
																				"nativeSrc": "7858:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7858:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7882:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7882:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7837:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "7837:20:11"
																		},
																		"nativeSrc": "7837:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7837:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "7827:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "7827:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7910:118:11",
															"nodeType": "YulBlock",
															"src": "7910:118:11",
															"statements": [
																{
																	"nativeSrc": "7925:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7925:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7939:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7939:2:11",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7929:6:11",
																			"nodeType": "YulTypedName",
																			"src": "7929:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7955:63:11",
																	"nodeType": "YulAssignment",
																	"src": "7955:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7990:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "7990:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8001:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "8001:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7986:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7986:3:11"
																				},
																				"nativeSrc": "7986:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7986:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8010:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "8010:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7965:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "7965:20:11"
																		},
																		"nativeSrc": "7965:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7965:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "7955:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "7955:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8038:119:11",
															"nodeType": "YulBlock",
															"src": "8038:119:11",
															"statements": [
																{
																	"nativeSrc": "8053:17:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8053:17:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8067:3:11",
																		"nodeType": "YulLiteral",
																		"src": "8067:3:11",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8057:6:11",
																			"nodeType": "YulTypedName",
																			"src": "8057:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8084:63:11",
																	"nodeType": "YulAssignment",
																	"src": "8084:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8119:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "8119:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8130:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "8130:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8115:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "8115:3:11"
																				},
																				"nativeSrc": "8115:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8115:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8139:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "8139:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8094:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "8094:20:11"
																		},
																		"nativeSrc": "8094:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8094:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "8084:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "8084:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8167:119:11",
															"nodeType": "YulBlock",
															"src": "8167:119:11",
															"statements": [
																{
																	"nativeSrc": "8182:17:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8182:17:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8196:3:11",
																		"nodeType": "YulLiteral",
																		"src": "8196:3:11",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8186:6:11",
																			"nodeType": "YulTypedName",
																			"src": "8186:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8213:63:11",
																	"nodeType": "YulAssignment",
																	"src": "8213:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8248:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "8248:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8259:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "8259:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8244:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "8244:3:11"
																				},
																				"nativeSrc": "8244:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8244:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8268:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "8268:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8223:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "8223:20:11"
																		},
																		"nativeSrc": "8223:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8223:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "8213:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "8213:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8296:119:11",
															"nodeType": "YulBlock",
															"src": "8296:119:11",
															"statements": [
																{
																	"nativeSrc": "8311:17:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8311:17:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8325:3:11",
																		"nodeType": "YulLiteral",
																		"src": "8325:3:11",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8315:6:11",
																			"nodeType": "YulTypedName",
																			"src": "8315:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8342:63:11",
																	"nodeType": "YulAssignment",
																	"src": "8342:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8377:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "8377:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8388:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "8388:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8373:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "8373:3:11"
																				},
																				"nativeSrc": "8373:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8373:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8397:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "8397:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8352:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "8352:20:11"
																		},
																		"nativeSrc": "8352:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8352:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "8342:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "8342:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8425:119:11",
															"nodeType": "YulBlock",
															"src": "8425:119:11",
															"statements": [
																{
																	"nativeSrc": "8440:17:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8440:17:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8454:3:11",
																		"nodeType": "YulLiteral",
																		"src": "8454:3:11",
																		"type": "",
																		"value": "224"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8444:6:11",
																			"nodeType": "YulTypedName",
																			"src": "8444:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8471:63:11",
																	"nodeType": "YulAssignment",
																	"src": "8471:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8506:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "8506:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8517:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "8517:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8502:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "8502:3:11"
																				},
																				"nativeSrc": "8502:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8502:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8526:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "8526:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8481:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "8481:20:11"
																		},
																		"nativeSrc": "8481:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8481:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value7",
																			"nativeSrc": "8471:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "8471:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20Upgradeable_$611t_contract$_IERC721Upgradeable_$1139t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256",
												"nativeSrc": "7098:1453:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7249:9:11",
														"nodeType": "YulTypedName",
														"src": "7249:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7260:7:11",
														"nodeType": "YulTypedName",
														"src": "7260:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7272:6:11",
														"nodeType": "YulTypedName",
														"src": "7272:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7280:6:11",
														"nodeType": "YulTypedName",
														"src": "7280:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7288:6:11",
														"nodeType": "YulTypedName",
														"src": "7288:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7296:6:11",
														"nodeType": "YulTypedName",
														"src": "7296:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "7304:6:11",
														"nodeType": "YulTypedName",
														"src": "7304:6:11",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "7312:6:11",
														"nodeType": "YulTypedName",
														"src": "7312:6:11",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "7320:6:11",
														"nodeType": "YulTypedName",
														"src": "7320:6:11",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "7328:6:11",
														"nodeType": "YulTypedName",
														"src": "7328:6:11",
														"type": ""
													}
												],
												"src": "7098:1453:11"
											},
											{
												"body": {
													"nativeSrc": "8724:698:11",
													"nodeType": "YulBlock",
													"src": "8724:698:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "8771:83:11",
																"nodeType": "YulBlock",
																"src": "8771:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8773:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "8773:77:11"
																			},
																			"nativeSrc": "8773:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8773:79:11"
																		},
																		"nativeSrc": "8773:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8773:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8745:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "8745:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8754:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8754:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8741:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8741:3:11"
																		},
																		"nativeSrc": "8741:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8741:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8766:3:11",
																		"nodeType": "YulLiteral",
																		"src": "8766:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8737:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8737:3:11"
																},
																"nativeSrc": "8737:33:11",
																"nodeType": "YulFunctionCall",
																"src": "8737:33:11"
															},
															"nativeSrc": "8734:120:11",
															"nodeType": "YulIf",
															"src": "8734:120:11"
														},
														{
															"nativeSrc": "8864:142:11",
															"nodeType": "YulBlock",
															"src": "8864:142:11",
															"statements": [
																{
																	"nativeSrc": "8879:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8879:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8893:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8893:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8883:6:11",
																			"nodeType": "YulTypedName",
																			"src": "8883:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8908:88:11",
																	"nodeType": "YulAssignment",
																	"src": "8908:88:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8968:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "8968:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8979:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "8979:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8964:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "8964:3:11"
																				},
																				"nativeSrc": "8964:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8964:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8988:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "8988:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20Upgradeable_$611",
																			"nativeSrc": "8918:45:11",
																			"nodeType": "YulIdentifier",
																			"src": "8918:45:11"
																		},
																		"nativeSrc": "8918:78:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8918:78:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8908:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "8908:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9016:143:11",
															"nodeType": "YulBlock",
															"src": "9016:143:11",
															"statements": [
																{
																	"nativeSrc": "9031:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9031:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9045:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9045:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9035:6:11",
																			"nodeType": "YulTypedName",
																			"src": "9035:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9061:88:11",
																	"nodeType": "YulAssignment",
																	"src": "9061:88:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9121:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "9121:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9132:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "9132:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9117:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9117:3:11"
																				},
																				"nativeSrc": "9117:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9117:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9141:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "9141:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20Upgradeable_$611",
																			"nativeSrc": "9071:45:11",
																			"nodeType": "YulIdentifier",
																			"src": "9071:45:11"
																		},
																		"nativeSrc": "9071:78:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9071:78:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9061:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "9061:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9169:118:11",
															"nodeType": "YulBlock",
															"src": "9169:118:11",
															"statements": [
																{
																	"nativeSrc": "9184:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9184:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9198:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9198:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9188:6:11",
																			"nodeType": "YulTypedName",
																			"src": "9188:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9214:63:11",
																	"nodeType": "YulAssignment",
																	"src": "9214:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9249:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "9249:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9260:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "9260:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9245:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9245:3:11"
																				},
																				"nativeSrc": "9245:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9245:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9269:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "9269:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9224:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "9224:20:11"
																		},
																		"nativeSrc": "9224:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9224:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9214:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "9214:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9297:118:11",
															"nodeType": "YulBlock",
															"src": "9297:118:11",
															"statements": [
																{
																	"nativeSrc": "9312:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9312:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9326:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9326:2:11",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9316:6:11",
																			"nodeType": "YulTypedName",
																			"src": "9316:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9342:63:11",
																	"nodeType": "YulAssignment",
																	"src": "9342:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9377:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "9377:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9388:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "9388:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9373:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9373:3:11"
																				},
																				"nativeSrc": "9373:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9373:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9397:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "9397:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9352:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "9352:20:11"
																		},
																		"nativeSrc": "9352:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9352:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "9342:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "9342:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20Upgradeable_$611t_contract$_IERC20Upgradeable_$611t_uint256t_uint256",
												"nativeSrc": "8557:865:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8670:9:11",
														"nodeType": "YulTypedName",
														"src": "8670:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8681:7:11",
														"nodeType": "YulTypedName",
														"src": "8681:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8693:6:11",
														"nodeType": "YulTypedName",
														"src": "8693:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8701:6:11",
														"nodeType": "YulTypedName",
														"src": "8701:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8709:6:11",
														"nodeType": "YulTypedName",
														"src": "8709:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8717:6:11",
														"nodeType": "YulTypedName",
														"src": "8717:6:11",
														"type": ""
													}
												],
												"src": "8557:865:11"
											},
											{
												"body": {
													"nativeSrc": "9515:66:11",
													"nodeType": "YulBlock",
													"src": "9515:66:11",
													"statements": [
														{
															"nativeSrc": "9525:50:11",
															"nodeType": "YulAssignment",
															"src": "9525:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9569:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "9569:5:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "9538:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "9538:30:11"
																},
																"nativeSrc": "9538:37:11",
																"nodeType": "YulFunctionCall",
																"src": "9538:37:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "9525:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "9525:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721Upgradeable_$1139_to_t_address",
												"nativeSrc": "9428:153:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9495:5:11",
														"nodeType": "YulTypedName",
														"src": "9495:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "9505:9:11",
														"nodeType": "YulTypedName",
														"src": "9505:9:11",
														"type": ""
													}
												],
												"src": "9428:153:11"
											},
											{
												"body": {
													"nativeSrc": "9679:93:11",
													"nodeType": "YulBlock",
													"src": "9679:93:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9696:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9696:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9759:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "9759:5:11"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC721Upgradeable_$1139_to_t_address",
																			"nativeSrc": "9701:57:11",
																			"nodeType": "YulIdentifier",
																			"src": "9701:57:11"
																		},
																		"nativeSrc": "9701:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9701:64:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9689:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9689:6:11"
																},
																"nativeSrc": "9689:77:11",
																"nodeType": "YulFunctionCall",
																"src": "9689:77:11"
															},
															"nativeSrc": "9689:77:11",
															"nodeType": "YulExpressionStatement",
															"src": "9689:77:11"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC721Upgradeable_$1139_to_t_address_fromStack",
												"nativeSrc": "9587:185:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9667:5:11",
														"nodeType": "YulTypedName",
														"src": "9667:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9674:3:11",
														"nodeType": "YulTypedName",
														"src": "9674:3:11",
														"type": ""
													}
												],
												"src": "9587:185:11"
											},
											{
												"body": {
													"nativeSrc": "9903:151:11",
													"nodeType": "YulBlock",
													"src": "9903:151:11",
													"statements": [
														{
															"nativeSrc": "9913:26:11",
															"nodeType": "YulAssignment",
															"src": "9913:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9925:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9925:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9936:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9936:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9921:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9921:3:11"
																},
																"nativeSrc": "9921:18:11",
																"nodeType": "YulFunctionCall",
																"src": "9921:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9913:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9913:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10020:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "10020:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10033:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10033:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10044:1:11",
																				"nodeType": "YulLiteral",
																				"src": "10044:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10029:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10029:3:11"
																		},
																		"nativeSrc": "10029:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10029:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC721Upgradeable_$1139_to_t_address_fromStack",
																	"nativeSrc": "9949:70:11",
																	"nodeType": "YulIdentifier",
																	"src": "9949:70:11"
																},
																"nativeSrc": "9949:98:11",
																"nodeType": "YulFunctionCall",
																"src": "9949:98:11"
															},
															"nativeSrc": "9949:98:11",
															"nodeType": "YulExpressionStatement",
															"src": "9949:98:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721Upgradeable_$1139__to_t_address__fromStack_reversed",
												"nativeSrc": "9778:276:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9875:9:11",
														"nodeType": "YulTypedName",
														"src": "9875:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9887:6:11",
														"nodeType": "YulTypedName",
														"src": "9887:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9898:4:11",
														"nodeType": "YulTypedName",
														"src": "9898:4:11",
														"type": ""
													}
												],
												"src": "9778:276:11"
											},
											{
												"body": {
													"nativeSrc": "10143:391:11",
													"nodeType": "YulBlock",
													"src": "10143:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "10189:83:11",
																"nodeType": "YulBlock",
																"src": "10189:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10191:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "10191:77:11"
																			},
																			"nativeSrc": "10191:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10191:79:11"
																		},
																		"nativeSrc": "10191:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "10191:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10164:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "10164:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10173:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10173:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10160:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10160:3:11"
																		},
																		"nativeSrc": "10160:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10160:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10185:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10185:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10156:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10156:3:11"
																},
																"nativeSrc": "10156:32:11",
																"nodeType": "YulFunctionCall",
																"src": "10156:32:11"
															},
															"nativeSrc": "10153:119:11",
															"nodeType": "YulIf",
															"src": "10153:119:11"
														},
														{
															"nativeSrc": "10282:117:11",
															"nodeType": "YulBlock",
															"src": "10282:117:11",
															"statements": [
																{
																	"nativeSrc": "10297:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10297:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10311:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10311:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10301:6:11",
																			"nodeType": "YulTypedName",
																			"src": "10301:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10326:63:11",
																	"nodeType": "YulAssignment",
																	"src": "10326:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10361:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "10361:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10372:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "10372:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10357:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "10357:3:11"
																				},
																				"nativeSrc": "10357:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "10357:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10381:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "10381:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10336:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "10336:20:11"
																		},
																		"nativeSrc": "10336:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10336:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10326:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "10326:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10409:118:11",
															"nodeType": "YulBlock",
															"src": "10409:118:11",
															"statements": [
																{
																	"nativeSrc": "10424:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10424:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10438:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10438:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10428:6:11",
																			"nodeType": "YulTypedName",
																			"src": "10428:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10454:63:11",
																	"nodeType": "YulAssignment",
																	"src": "10454:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10489:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "10489:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10500:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "10500:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10485:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "10485:3:11"
																				},
																				"nativeSrc": "10485:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "10485:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10509:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "10509:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10464:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "10464:20:11"
																		},
																		"nativeSrc": "10464:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10464:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10454:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "10454:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "10060:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10105:9:11",
														"nodeType": "YulTypedName",
														"src": "10105:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10116:7:11",
														"nodeType": "YulTypedName",
														"src": "10116:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10128:6:11",
														"nodeType": "YulTypedName",
														"src": "10128:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10136:6:11",
														"nodeType": "YulTypedName",
														"src": "10136:6:11",
														"type": ""
													}
												],
												"src": "10060:474:11"
											},
											{
												"body": {
													"nativeSrc": "10663:149:11",
													"nodeType": "YulBlock",
													"src": "10663:149:11",
													"statements": [
														{
															"nativeSrc": "10673:26:11",
															"nodeType": "YulAssignment",
															"src": "10673:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10685:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10685:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10696:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10696:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10681:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10681:3:11"
																},
																"nativeSrc": "10681:18:11",
																"nodeType": "YulFunctionCall",
																"src": "10681:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10673:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10673:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10778:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "10778:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10791:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10791:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10802:1:11",
																				"nodeType": "YulLiteral",
																				"src": "10802:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10787:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10787:3:11"
																		},
																		"nativeSrc": "10787:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10787:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20Upgradeable_$611_to_t_address_fromStack",
																	"nativeSrc": "10709:68:11",
																	"nodeType": "YulIdentifier",
																	"src": "10709:68:11"
																},
																"nativeSrc": "10709:96:11",
																"nodeType": "YulFunctionCall",
																"src": "10709:96:11"
															},
															"nativeSrc": "10709:96:11",
															"nodeType": "YulExpressionStatement",
															"src": "10709:96:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20Upgradeable_$611__to_t_address__fromStack_reversed",
												"nativeSrc": "10540:272:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10635:9:11",
														"nodeType": "YulTypedName",
														"src": "10635:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10647:6:11",
														"nodeType": "YulTypedName",
														"src": "10647:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10658:4:11",
														"nodeType": "YulTypedName",
														"src": "10658:4:11",
														"type": ""
													}
												],
												"src": "10540:272:11"
											},
											{
												"body": {
													"nativeSrc": "10846:152:11",
													"nodeType": "YulBlock",
													"src": "10846:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10863:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10863:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10866:77:11",
																		"nodeType": "YulLiteral",
																		"src": "10866:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10856:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10856:6:11"
																},
																"nativeSrc": "10856:88:11",
																"nodeType": "YulFunctionCall",
																"src": "10856:88:11"
															},
															"nativeSrc": "10856:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "10856:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10960:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10960:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10963:4:11",
																		"nodeType": "YulLiteral",
																		"src": "10963:4:11",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10953:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10953:6:11"
																},
																"nativeSrc": "10953:15:11",
																"nodeType": "YulFunctionCall",
																"src": "10953:15:11"
															},
															"nativeSrc": "10953:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "10953:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10984:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10984:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10987:4:11",
																		"nodeType": "YulLiteral",
																		"src": "10987:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10977:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10977:6:11"
																},
																"nativeSrc": "10977:15:11",
																"nodeType": "YulFunctionCall",
																"src": "10977:15:11"
															},
															"nativeSrc": "10977:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "10977:15:11"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "10818:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "10818:180:11"
											},
											{
												"body": {
													"nativeSrc": "11100:73:11",
													"nodeType": "YulBlock",
													"src": "11100:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11117:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11117:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11122:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "11122:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11110:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11110:6:11"
																},
																"nativeSrc": "11110:19:11",
																"nodeType": "YulFunctionCall",
																"src": "11110:19:11"
															},
															"nativeSrc": "11110:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "11110:19:11"
														},
														{
															"nativeSrc": "11138:29:11",
															"nodeType": "YulAssignment",
															"src": "11138:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11157:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11157:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11162:4:11",
																		"nodeType": "YulLiteral",
																		"src": "11162:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11153:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11153:3:11"
																},
																"nativeSrc": "11153:14:11",
																"nodeType": "YulFunctionCall",
																"src": "11153:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "11138:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "11138:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "11004:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11072:3:11",
														"nodeType": "YulTypedName",
														"src": "11072:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11077:6:11",
														"nodeType": "YulTypedName",
														"src": "11077:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "11088:11:11",
														"nodeType": "YulTypedName",
														"src": "11088:11:11",
														"type": ""
													}
												],
												"src": "11004:169:11"
											},
											{
												"body": {
													"nativeSrc": "11285:60:11",
													"nodeType": "YulBlock",
													"src": "11285:60:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11307:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "11307:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11315:1:11",
																				"nodeType": "YulLiteral",
																				"src": "11315:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11303:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11303:3:11"
																		},
																		"nativeSrc": "11303:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11303:14:11"
																	},
																	{
																		"hexValue": "4e6f207374616b656420616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "11319:18:11",
																		"nodeType": "YulLiteral",
																		"src": "11319:18:11",
																		"type": "",
																		"value": "No staked amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11296:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11296:6:11"
																},
																"nativeSrc": "11296:42:11",
																"nodeType": "YulFunctionCall",
																"src": "11296:42:11"
															},
															"nativeSrc": "11296:42:11",
															"nodeType": "YulExpressionStatement",
															"src": "11296:42:11"
														}
													]
												},
												"name": "store_literal_in_memory_e731ba893c68928f02781756791066f23259e50b4884778db05599c2eb032f36",
												"nativeSrc": "11179:166:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11277:6:11",
														"nodeType": "YulTypedName",
														"src": "11277:6:11",
														"type": ""
													}
												],
												"src": "11179:166:11"
											},
											{
												"body": {
													"nativeSrc": "11497:220:11",
													"nodeType": "YulBlock",
													"src": "11497:220:11",
													"statements": [
														{
															"nativeSrc": "11507:74:11",
															"nodeType": "YulAssignment",
															"src": "11507:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11573:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11573:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11578:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11578:2:11",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11514:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "11514:58:11"
																},
																"nativeSrc": "11514:67:11",
																"nodeType": "YulFunctionCall",
																"src": "11514:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11507:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11507:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11679:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11679:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e731ba893c68928f02781756791066f23259e50b4884778db05599c2eb032f36",
																	"nativeSrc": "11590:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "11590:88:11"
																},
																"nativeSrc": "11590:93:11",
																"nodeType": "YulFunctionCall",
																"src": "11590:93:11"
															},
															"nativeSrc": "11590:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "11590:93:11"
														},
														{
															"nativeSrc": "11692:19:11",
															"nodeType": "YulAssignment",
															"src": "11692:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11703:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11703:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11708:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11708:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11699:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11699:3:11"
																},
																"nativeSrc": "11699:12:11",
																"nodeType": "YulFunctionCall",
																"src": "11699:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11692:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11692:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e731ba893c68928f02781756791066f23259e50b4884778db05599c2eb032f36_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11351:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11485:3:11",
														"nodeType": "YulTypedName",
														"src": "11485:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11493:3:11",
														"nodeType": "YulTypedName",
														"src": "11493:3:11",
														"type": ""
													}
												],
												"src": "11351:366:11"
											},
											{
												"body": {
													"nativeSrc": "11894:248:11",
													"nodeType": "YulBlock",
													"src": "11894:248:11",
													"statements": [
														{
															"nativeSrc": "11904:26:11",
															"nodeType": "YulAssignment",
															"src": "11904:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11916:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11916:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11927:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11927:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11912:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11912:3:11"
																},
																"nativeSrc": "11912:18:11",
																"nodeType": "YulFunctionCall",
																"src": "11912:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11904:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11904:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11951:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11951:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11962:1:11",
																				"nodeType": "YulLiteral",
																				"src": "11962:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11947:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11947:3:11"
																		},
																		"nativeSrc": "11947:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11947:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11970:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "11970:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11976:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11976:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11966:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11966:3:11"
																		},
																		"nativeSrc": "11966:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11966:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11940:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11940:6:11"
																},
																"nativeSrc": "11940:47:11",
																"nodeType": "YulFunctionCall",
																"src": "11940:47:11"
															},
															"nativeSrc": "11940:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "11940:47:11"
														},
														{
															"nativeSrc": "11996:139:11",
															"nodeType": "YulAssignment",
															"src": "11996:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12130:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "12130:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e731ba893c68928f02781756791066f23259e50b4884778db05599c2eb032f36_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12004:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "12004:124:11"
																},
																"nativeSrc": "12004:131:11",
																"nodeType": "YulFunctionCall",
																"src": "12004:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11996:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11996:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e731ba893c68928f02781756791066f23259e50b4884778db05599c2eb032f36__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11723:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11874:9:11",
														"nodeType": "YulTypedName",
														"src": "11874:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11889:4:11",
														"nodeType": "YulTypedName",
														"src": "11889:4:11",
														"type": ""
													}
												],
												"src": "11723:419:11"
											},
											{
												"body": {
													"nativeSrc": "12176:152:11",
													"nodeType": "YulBlock",
													"src": "12176:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12193:1:11",
																		"nodeType": "YulLiteral",
																		"src": "12193:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12196:77:11",
																		"nodeType": "YulLiteral",
																		"src": "12196:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12186:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12186:6:11"
																},
																"nativeSrc": "12186:88:11",
																"nodeType": "YulFunctionCall",
																"src": "12186:88:11"
															},
															"nativeSrc": "12186:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "12186:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12290:1:11",
																		"nodeType": "YulLiteral",
																		"src": "12290:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12293:4:11",
																		"nodeType": "YulLiteral",
																		"src": "12293:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12283:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12283:6:11"
																},
																"nativeSrc": "12283:15:11",
																"nodeType": "YulFunctionCall",
																"src": "12283:15:11"
															},
															"nativeSrc": "12283:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "12283:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12314:1:11",
																		"nodeType": "YulLiteral",
																		"src": "12314:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12317:4:11",
																		"nodeType": "YulLiteral",
																		"src": "12317:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12307:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12307:6:11"
																},
																"nativeSrc": "12307:15:11",
																"nodeType": "YulFunctionCall",
																"src": "12307:15:11"
															},
															"nativeSrc": "12307:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "12307:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "12148:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "12148:180:11"
											},
											{
												"body": {
													"nativeSrc": "12379:149:11",
													"nodeType": "YulBlock",
													"src": "12379:149:11",
													"statements": [
														{
															"nativeSrc": "12389:25:11",
															"nodeType": "YulAssignment",
															"src": "12389:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12412:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12412:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12394:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "12394:17:11"
																},
																"nativeSrc": "12394:20:11",
																"nodeType": "YulFunctionCall",
																"src": "12394:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12389:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "12389:1:11"
																}
															]
														},
														{
															"nativeSrc": "12423:25:11",
															"nodeType": "YulAssignment",
															"src": "12423:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12446:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12446:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12428:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "12428:17:11"
																},
																"nativeSrc": "12428:20:11",
																"nodeType": "YulFunctionCall",
																"src": "12428:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12423:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "12423:1:11"
																}
															]
														},
														{
															"nativeSrc": "12457:17:11",
															"nodeType": "YulAssignment",
															"src": "12457:17:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12469:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12469:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12472:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12472:1:11"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "12465:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12465:3:11"
																},
																"nativeSrc": "12465:9:11",
																"nodeType": "YulFunctionCall",
																"src": "12465:9:11"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "12457:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "12457:4:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12499:22:11",
																"nodeType": "YulBlock",
																"src": "12499:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12501:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "12501:16:11"
																			},
																			"nativeSrc": "12501:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "12501:18:11"
																		},
																		"nativeSrc": "12501:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "12501:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "12490:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "12490:4:11"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "12496:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12496:1:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12487:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "12487:2:11"
																},
																"nativeSrc": "12487:11:11",
																"nodeType": "YulFunctionCall",
																"src": "12487:11:11"
															},
															"nativeSrc": "12484:37:11",
															"nodeType": "YulIf",
															"src": "12484:37:11"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "12334:194:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12365:1:11",
														"nodeType": "YulTypedName",
														"src": "12365:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12368:1:11",
														"nodeType": "YulTypedName",
														"src": "12368:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "12374:4:11",
														"nodeType": "YulTypedName",
														"src": "12374:4:11",
														"type": ""
													}
												],
												"src": "12334:194:11"
											},
											{
												"body": {
													"nativeSrc": "12640:62:11",
													"nodeType": "YulBlock",
													"src": "12640:62:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12662:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "12662:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12670:1:11",
																				"nodeType": "YulLiteral",
																				"src": "12670:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12658:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12658:3:11"
																		},
																		"nativeSrc": "12658:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12658:14:11"
																	},
																	{
																		"hexValue": "436f6e747261637420697320706175736564",
																		"kind": "string",
																		"nativeSrc": "12674:20:11",
																		"nodeType": "YulLiteral",
																		"src": "12674:20:11",
																		"type": "",
																		"value": "Contract is paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12651:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12651:6:11"
																},
																"nativeSrc": "12651:44:11",
																"nodeType": "YulFunctionCall",
																"src": "12651:44:11"
															},
															"nativeSrc": "12651:44:11",
															"nodeType": "YulExpressionStatement",
															"src": "12651:44:11"
														}
													]
												},
												"name": "store_literal_in_memory_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d",
												"nativeSrc": "12534:168:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12632:6:11",
														"nodeType": "YulTypedName",
														"src": "12632:6:11",
														"type": ""
													}
												],
												"src": "12534:168:11"
											},
											{
												"body": {
													"nativeSrc": "12854:220:11",
													"nodeType": "YulBlock",
													"src": "12854:220:11",
													"statements": [
														{
															"nativeSrc": "12864:74:11",
															"nodeType": "YulAssignment",
															"src": "12864:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12930:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12930:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12935:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12935:2:11",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12871:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "12871:58:11"
																},
																"nativeSrc": "12871:67:11",
																"nodeType": "YulFunctionCall",
																"src": "12871:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12864:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12864:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13036:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "13036:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d",
																	"nativeSrc": "12947:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "12947:88:11"
																},
																"nativeSrc": "12947:93:11",
																"nodeType": "YulFunctionCall",
																"src": "12947:93:11"
															},
															"nativeSrc": "12947:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "12947:93:11"
														},
														{
															"nativeSrc": "13049:19:11",
															"nodeType": "YulAssignment",
															"src": "13049:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13060:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "13060:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13065:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13065:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13056:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13056:3:11"
																},
																"nativeSrc": "13056:12:11",
																"nodeType": "YulFunctionCall",
																"src": "13056:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13049:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13049:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12708:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12842:3:11",
														"nodeType": "YulTypedName",
														"src": "12842:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12850:3:11",
														"nodeType": "YulTypedName",
														"src": "12850:3:11",
														"type": ""
													}
												],
												"src": "12708:366:11"
											},
											{
												"body": {
													"nativeSrc": "13251:248:11",
													"nodeType": "YulBlock",
													"src": "13251:248:11",
													"statements": [
														{
															"nativeSrc": "13261:26:11",
															"nodeType": "YulAssignment",
															"src": "13261:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13273:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "13273:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13284:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13284:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13269:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13269:3:11"
																},
																"nativeSrc": "13269:18:11",
																"nodeType": "YulFunctionCall",
																"src": "13269:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13261:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "13261:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13308:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13308:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13319:1:11",
																				"nodeType": "YulLiteral",
																				"src": "13319:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13304:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13304:3:11"
																		},
																		"nativeSrc": "13304:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13304:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13327:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "13327:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13333:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13333:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13323:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13323:3:11"
																		},
																		"nativeSrc": "13323:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13323:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13297:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13297:6:11"
																},
																"nativeSrc": "13297:47:11",
																"nodeType": "YulFunctionCall",
																"src": "13297:47:11"
															},
															"nativeSrc": "13297:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "13297:47:11"
														},
														{
															"nativeSrc": "13353:139:11",
															"nodeType": "YulAssignment",
															"src": "13353:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13487:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "13487:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13361:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "13361:124:11"
																},
																"nativeSrc": "13361:131:11",
																"nodeType": "YulFunctionCall",
																"src": "13361:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13353:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "13353:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13080:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13231:9:11",
														"nodeType": "YulTypedName",
														"src": "13231:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13246:4:11",
														"nodeType": "YulTypedName",
														"src": "13246:4:11",
														"type": ""
													}
												],
												"src": "13080:419:11"
											},
											{
												"body": {
													"nativeSrc": "13611:58:11",
													"nodeType": "YulBlock",
													"src": "13611:58:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13633:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "13633:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13641:1:11",
																				"nodeType": "YulLiteral",
																				"src": "13641:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13629:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13629:3:11"
																		},
																		"nativeSrc": "13629:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13629:14:11"
																	},
																	{
																		"hexValue": "43616e6e6f74207374616b652030",
																		"kind": "string",
																		"nativeSrc": "13645:16:11",
																		"nodeType": "YulLiteral",
																		"src": "13645:16:11",
																		"type": "",
																		"value": "Cannot stake 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13622:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13622:6:11"
																},
																"nativeSrc": "13622:40:11",
																"nodeType": "YulFunctionCall",
																"src": "13622:40:11"
															},
															"nativeSrc": "13622:40:11",
															"nodeType": "YulExpressionStatement",
															"src": "13622:40:11"
														}
													]
												},
												"name": "store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
												"nativeSrc": "13505:164:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13603:6:11",
														"nodeType": "YulTypedName",
														"src": "13603:6:11",
														"type": ""
													}
												],
												"src": "13505:164:11"
											},
											{
												"body": {
													"nativeSrc": "13821:220:11",
													"nodeType": "YulBlock",
													"src": "13821:220:11",
													"statements": [
														{
															"nativeSrc": "13831:74:11",
															"nodeType": "YulAssignment",
															"src": "13831:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13897:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "13897:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13902:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13902:2:11",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13838:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "13838:58:11"
																},
																"nativeSrc": "13838:67:11",
																"nodeType": "YulFunctionCall",
																"src": "13838:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13831:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13831:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14003:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "14003:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																	"nativeSrc": "13914:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "13914:88:11"
																},
																"nativeSrc": "13914:93:11",
																"nodeType": "YulFunctionCall",
																"src": "13914:93:11"
															},
															"nativeSrc": "13914:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "13914:93:11"
														},
														{
															"nativeSrc": "14016:19:11",
															"nodeType": "YulAssignment",
															"src": "14016:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14027:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "14027:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14032:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14032:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14023:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14023:3:11"
																},
																"nativeSrc": "14023:12:11",
																"nodeType": "YulFunctionCall",
																"src": "14023:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14016:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14016:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13675:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13809:3:11",
														"nodeType": "YulTypedName",
														"src": "13809:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13817:3:11",
														"nodeType": "YulTypedName",
														"src": "13817:3:11",
														"type": ""
													}
												],
												"src": "13675:366:11"
											},
											{
												"body": {
													"nativeSrc": "14218:248:11",
													"nodeType": "YulBlock",
													"src": "14218:248:11",
													"statements": [
														{
															"nativeSrc": "14228:26:11",
															"nodeType": "YulAssignment",
															"src": "14228:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14240:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "14240:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14251:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14251:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14236:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14236:3:11"
																},
																"nativeSrc": "14236:18:11",
																"nodeType": "YulFunctionCall",
																"src": "14236:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14228:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "14228:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14275:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14275:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14286:1:11",
																				"nodeType": "YulLiteral",
																				"src": "14286:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14271:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14271:3:11"
																		},
																		"nativeSrc": "14271:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14271:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14294:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "14294:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14300:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14300:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14290:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14290:3:11"
																		},
																		"nativeSrc": "14290:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14290:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14264:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14264:6:11"
																},
																"nativeSrc": "14264:47:11",
																"nodeType": "YulFunctionCall",
																"src": "14264:47:11"
															},
															"nativeSrc": "14264:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "14264:47:11"
														},
														{
															"nativeSrc": "14320:139:11",
															"nodeType": "YulAssignment",
															"src": "14320:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14454:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "14454:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14328:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "14328:124:11"
																},
																"nativeSrc": "14328:131:11",
																"nodeType": "YulFunctionCall",
																"src": "14328:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14320:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "14320:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14047:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14198:9:11",
														"nodeType": "YulTypedName",
														"src": "14198:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14213:4:11",
														"nodeType": "YulTypedName",
														"src": "14213:4:11",
														"type": ""
													}
												],
												"src": "14047:419:11"
											},
											{
												"body": {
													"nativeSrc": "14516:147:11",
													"nodeType": "YulBlock",
													"src": "14516:147:11",
													"statements": [
														{
															"nativeSrc": "14526:25:11",
															"nodeType": "YulAssignment",
															"src": "14526:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14549:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "14549:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14531:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "14531:17:11"
																},
																"nativeSrc": "14531:20:11",
																"nodeType": "YulFunctionCall",
																"src": "14531:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14526:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "14526:1:11"
																}
															]
														},
														{
															"nativeSrc": "14560:25:11",
															"nodeType": "YulAssignment",
															"src": "14560:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14583:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "14583:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14565:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "14565:17:11"
																},
																"nativeSrc": "14565:20:11",
																"nodeType": "YulFunctionCall",
																"src": "14565:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14560:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "14560:1:11"
																}
															]
														},
														{
															"nativeSrc": "14594:16:11",
															"nodeType": "YulAssignment",
															"src": "14594:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14605:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "14605:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14608:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "14608:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14601:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14601:3:11"
																},
																"nativeSrc": "14601:9:11",
																"nodeType": "YulFunctionCall",
																"src": "14601:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "14594:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14594:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14634:22:11",
																"nodeType": "YulBlock",
																"src": "14634:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14636:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "14636:16:11"
																			},
																			"nativeSrc": "14636:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "14636:18:11"
																		},
																		"nativeSrc": "14636:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "14636:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14626:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "14626:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "14629:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "14629:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14623:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "14623:2:11"
																},
																"nativeSrc": "14623:10:11",
																"nodeType": "YulFunctionCall",
																"src": "14623:10:11"
															},
															"nativeSrc": "14620:36:11",
															"nodeType": "YulIf",
															"src": "14620:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "14472:191:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14503:1:11",
														"nodeType": "YulTypedName",
														"src": "14503:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14506:1:11",
														"nodeType": "YulTypedName",
														"src": "14506:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "14512:3:11",
														"nodeType": "YulTypedName",
														"src": "14512:3:11",
														"type": ""
													}
												],
												"src": "14472:191:11"
											},
											{
												"body": {
													"nativeSrc": "14795:206:11",
													"nodeType": "YulBlock",
													"src": "14795:206:11",
													"statements": [
														{
															"nativeSrc": "14805:26:11",
															"nodeType": "YulAssignment",
															"src": "14805:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14817:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "14817:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14828:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14828:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14813:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14813:3:11"
																},
																"nativeSrc": "14813:18:11",
																"nodeType": "YulFunctionCall",
																"src": "14813:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14805:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "14805:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14885:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "14885:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14898:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14898:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14909:1:11",
																				"nodeType": "YulLiteral",
																				"src": "14909:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14894:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14894:3:11"
																		},
																		"nativeSrc": "14894:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14894:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14841:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "14841:43:11"
																},
																"nativeSrc": "14841:71:11",
																"nodeType": "YulFunctionCall",
																"src": "14841:71:11"
															},
															"nativeSrc": "14841:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "14841:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14966:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "14966:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14979:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14979:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14990:2:11",
																				"nodeType": "YulLiteral",
																				"src": "14990:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14975:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14975:3:11"
																		},
																		"nativeSrc": "14975:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14975:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14922:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "14922:43:11"
																},
																"nativeSrc": "14922:72:11",
																"nodeType": "YulFunctionCall",
																"src": "14922:72:11"
															},
															"nativeSrc": "14922:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "14922:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "14669:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14759:9:11",
														"nodeType": "YulTypedName",
														"src": "14759:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14771:6:11",
														"nodeType": "YulTypedName",
														"src": "14771:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14779:6:11",
														"nodeType": "YulTypedName",
														"src": "14779:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14790:4:11",
														"nodeType": "YulTypedName",
														"src": "14790:4:11",
														"type": ""
													}
												],
												"src": "14669:332:11"
											},
											{
												"body": {
													"nativeSrc": "15060:32:11",
													"nodeType": "YulBlock",
													"src": "15060:32:11",
													"statements": [
														{
															"nativeSrc": "15070:16:11",
															"nodeType": "YulAssignment",
															"src": "15070:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "15081:5:11",
																"nodeType": "YulIdentifier",
																"src": "15081:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "15070:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "15070:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "15007:85:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15042:5:11",
														"nodeType": "YulTypedName",
														"src": "15042:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "15052:7:11",
														"nodeType": "YulTypedName",
														"src": "15052:7:11",
														"type": ""
													}
												],
												"src": "15007:85:11"
											},
											{
												"body": {
													"nativeSrc": "15142:57:11",
													"nodeType": "YulBlock",
													"src": "15142:57:11",
													"statements": [
														{
															"nativeSrc": "15152:41:11",
															"nodeType": "YulAssignment",
															"src": "15152:41:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15167:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "15167:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15174:18:11",
																		"nodeType": "YulLiteral",
																		"src": "15174:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "15163:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15163:3:11"
																},
																"nativeSrc": "15163:30:11",
																"nodeType": "YulFunctionCall",
																"src": "15163:30:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "15152:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "15152:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "15098:101:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15124:5:11",
														"nodeType": "YulTypedName",
														"src": "15124:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "15134:7:11",
														"nodeType": "YulTypedName",
														"src": "15134:7:11",
														"type": ""
													}
												],
												"src": "15098:101:11"
											},
											{
												"body": {
													"nativeSrc": "15272:89:11",
													"nodeType": "YulBlock",
													"src": "15272:89:11",
													"statements": [
														{
															"nativeSrc": "15282:73:11",
															"nodeType": "YulAssignment",
															"src": "15282:73:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15347:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "15347:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "15321:25:11",
																					"nodeType": "YulIdentifier",
																					"src": "15321:25:11"
																				},
																				"nativeSrc": "15321:32:11",
																				"nodeType": "YulFunctionCall",
																				"src": "15321:32:11"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "15312:8:11",
																			"nodeType": "YulIdentifier",
																			"src": "15312:8:11"
																		},
																		"nativeSrc": "15312:42:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15312:42:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "15295:16:11",
																	"nodeType": "YulIdentifier",
																	"src": "15295:16:11"
																},
																"nativeSrc": "15295:60:11",
																"nodeType": "YulFunctionCall",
																"src": "15295:60:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "15282:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "15282:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "15205:156:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15252:5:11",
														"nodeType": "YulTypedName",
														"src": "15252:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "15262:9:11",
														"nodeType": "YulTypedName",
														"src": "15262:9:11",
														"type": ""
													}
												],
												"src": "15205:156:11"
											},
											{
												"body": {
													"nativeSrc": "15439:73:11",
													"nodeType": "YulBlock",
													"src": "15439:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15456:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "15456:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15499:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "15499:5:11"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "15461:37:11",
																			"nodeType": "YulIdentifier",
																			"src": "15461:37:11"
																		},
																		"nativeSrc": "15461:44:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15461:44:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15449:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15449:6:11"
																},
																"nativeSrc": "15449:57:11",
																"nodeType": "YulFunctionCall",
																"src": "15449:57:11"
															},
															"nativeSrc": "15449:57:11",
															"nodeType": "YulExpressionStatement",
															"src": "15449:57:11"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "15367:145:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15427:5:11",
														"nodeType": "YulTypedName",
														"src": "15427:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15434:3:11",
														"nodeType": "YulTypedName",
														"src": "15434:3:11",
														"type": ""
													}
												],
												"src": "15367:145:11"
											},
											{
												"body": {
													"nativeSrc": "15623:131:11",
													"nodeType": "YulBlock",
													"src": "15623:131:11",
													"statements": [
														{
															"nativeSrc": "15633:26:11",
															"nodeType": "YulAssignment",
															"src": "15633:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15645:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "15645:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15656:2:11",
																		"nodeType": "YulLiteral",
																		"src": "15656:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15641:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15641:3:11"
																},
																"nativeSrc": "15641:18:11",
																"nodeType": "YulFunctionCall",
																"src": "15641:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15633:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "15633:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15720:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "15720:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15733:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "15733:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15744:1:11",
																				"nodeType": "YulLiteral",
																				"src": "15744:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15729:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15729:3:11"
																		},
																		"nativeSrc": "15729:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15729:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "15669:50:11",
																	"nodeType": "YulIdentifier",
																	"src": "15669:50:11"
																},
																"nativeSrc": "15669:78:11",
																"nodeType": "YulFunctionCall",
																"src": "15669:78:11"
															},
															"nativeSrc": "15669:78:11",
															"nodeType": "YulExpressionStatement",
															"src": "15669:78:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "15518:236:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15595:9:11",
														"nodeType": "YulTypedName",
														"src": "15595:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15607:6:11",
														"nodeType": "YulTypedName",
														"src": "15607:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15618:4:11",
														"nodeType": "YulTypedName",
														"src": "15618:4:11",
														"type": ""
													}
												],
												"src": "15518:236:11"
											},
											{
												"body": {
													"nativeSrc": "15866:70:11",
													"nodeType": "YulBlock",
													"src": "15866:70:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15888:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "15888:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15896:1:11",
																				"nodeType": "YulLiteral",
																				"src": "15896:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15884:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15884:3:11"
																		},
																		"nativeSrc": "15884:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15884:14:11"
																	},
																	{
																		"hexValue": "496e73756666696369656e74207374616b656420616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "15900:28:11",
																		"nodeType": "YulLiteral",
																		"src": "15900:28:11",
																		"type": "",
																		"value": "Insufficient staked amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15877:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15877:6:11"
																},
																"nativeSrc": "15877:52:11",
																"nodeType": "YulFunctionCall",
																"src": "15877:52:11"
															},
															"nativeSrc": "15877:52:11",
															"nodeType": "YulExpressionStatement",
															"src": "15877:52:11"
														}
													]
												},
												"name": "store_literal_in_memory_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16",
												"nativeSrc": "15760:176:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15858:6:11",
														"nodeType": "YulTypedName",
														"src": "15858:6:11",
														"type": ""
													}
												],
												"src": "15760:176:11"
											},
											{
												"body": {
													"nativeSrc": "16088:220:11",
													"nodeType": "YulBlock",
													"src": "16088:220:11",
													"statements": [
														{
															"nativeSrc": "16098:74:11",
															"nodeType": "YulAssignment",
															"src": "16098:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16164:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16164:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16169:2:11",
																		"nodeType": "YulLiteral",
																		"src": "16169:2:11",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16105:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "16105:58:11"
																},
																"nativeSrc": "16105:67:11",
																"nodeType": "YulFunctionCall",
																"src": "16105:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16098:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16098:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16270:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16270:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16",
																	"nativeSrc": "16181:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "16181:88:11"
																},
																"nativeSrc": "16181:93:11",
																"nodeType": "YulFunctionCall",
																"src": "16181:93:11"
															},
															"nativeSrc": "16181:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "16181:93:11"
														},
														{
															"nativeSrc": "16283:19:11",
															"nodeType": "YulAssignment",
															"src": "16283:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16294:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16294:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16299:2:11",
																		"nodeType": "YulLiteral",
																		"src": "16299:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16290:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16290:3:11"
																},
																"nativeSrc": "16290:12:11",
																"nodeType": "YulFunctionCall",
																"src": "16290:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16283:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16283:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15942:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16076:3:11",
														"nodeType": "YulTypedName",
														"src": "16076:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16084:3:11",
														"nodeType": "YulTypedName",
														"src": "16084:3:11",
														"type": ""
													}
												],
												"src": "15942:366:11"
											},
											{
												"body": {
													"nativeSrc": "16485:248:11",
													"nodeType": "YulBlock",
													"src": "16485:248:11",
													"statements": [
														{
															"nativeSrc": "16495:26:11",
															"nodeType": "YulAssignment",
															"src": "16495:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16507:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "16507:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16518:2:11",
																		"nodeType": "YulLiteral",
																		"src": "16518:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16503:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16503:3:11"
																},
																"nativeSrc": "16503:18:11",
																"nodeType": "YulFunctionCall",
																"src": "16503:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16495:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "16495:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16542:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "16542:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16553:1:11",
																				"nodeType": "YulLiteral",
																				"src": "16553:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16538:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "16538:3:11"
																		},
																		"nativeSrc": "16538:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "16538:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16561:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "16561:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16567:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "16567:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16557:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "16557:3:11"
																		},
																		"nativeSrc": "16557:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "16557:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16531:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "16531:6:11"
																},
																"nativeSrc": "16531:47:11",
																"nodeType": "YulFunctionCall",
																"src": "16531:47:11"
															},
															"nativeSrc": "16531:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "16531:47:11"
														},
														{
															"nativeSrc": "16587:139:11",
															"nodeType": "YulAssignment",
															"src": "16587:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16721:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "16721:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16595:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "16595:124:11"
																},
																"nativeSrc": "16595:131:11",
																"nodeType": "YulFunctionCall",
																"src": "16595:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16587:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "16587:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16314:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16465:9:11",
														"nodeType": "YulTypedName",
														"src": "16465:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16480:4:11",
														"nodeType": "YulTypedName",
														"src": "16480:4:11",
														"type": ""
													}
												],
												"src": "16314:419:11"
											},
											{
												"body": {
													"nativeSrc": "16845:65:11",
													"nodeType": "YulBlock",
													"src": "16845:65:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16867:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "16867:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16875:1:11",
																				"nodeType": "YulLiteral",
																				"src": "16875:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16863:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "16863:3:11"
																		},
																		"nativeSrc": "16863:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "16863:14:11"
																	},
																	{
																		"hexValue": "5374616b65206973207374696c6c206c6f636b6564",
																		"kind": "string",
																		"nativeSrc": "16879:23:11",
																		"nodeType": "YulLiteral",
																		"src": "16879:23:11",
																		"type": "",
																		"value": "Stake is still locked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16856:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "16856:6:11"
																},
																"nativeSrc": "16856:47:11",
																"nodeType": "YulFunctionCall",
																"src": "16856:47:11"
															},
															"nativeSrc": "16856:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "16856:47:11"
														}
													]
												},
												"name": "store_literal_in_memory_70a4a744132fc9399c082f0c459154fe3f5ba22b57af6b69242ec317d0c935a9",
												"nativeSrc": "16739:171:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16837:6:11",
														"nodeType": "YulTypedName",
														"src": "16837:6:11",
														"type": ""
													}
												],
												"src": "16739:171:11"
											},
											{
												"body": {
													"nativeSrc": "17062:220:11",
													"nodeType": "YulBlock",
													"src": "17062:220:11",
													"statements": [
														{
															"nativeSrc": "17072:74:11",
															"nodeType": "YulAssignment",
															"src": "17072:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17138:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "17138:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17143:2:11",
																		"nodeType": "YulLiteral",
																		"src": "17143:2:11",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17079:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "17079:58:11"
																},
																"nativeSrc": "17079:67:11",
																"nodeType": "YulFunctionCall",
																"src": "17079:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17072:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17072:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17244:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "17244:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_70a4a744132fc9399c082f0c459154fe3f5ba22b57af6b69242ec317d0c935a9",
																	"nativeSrc": "17155:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "17155:88:11"
																},
																"nativeSrc": "17155:93:11",
																"nodeType": "YulFunctionCall",
																"src": "17155:93:11"
															},
															"nativeSrc": "17155:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "17155:93:11"
														},
														{
															"nativeSrc": "17257:19:11",
															"nodeType": "YulAssignment",
															"src": "17257:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17268:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "17268:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17273:2:11",
																		"nodeType": "YulLiteral",
																		"src": "17273:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17264:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17264:3:11"
																},
																"nativeSrc": "17264:12:11",
																"nodeType": "YulFunctionCall",
																"src": "17264:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17257:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17257:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_70a4a744132fc9399c082f0c459154fe3f5ba22b57af6b69242ec317d0c935a9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16916:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17050:3:11",
														"nodeType": "YulTypedName",
														"src": "17050:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17058:3:11",
														"nodeType": "YulTypedName",
														"src": "17058:3:11",
														"type": ""
													}
												],
												"src": "16916:366:11"
											},
											{
												"body": {
													"nativeSrc": "17459:248:11",
													"nodeType": "YulBlock",
													"src": "17459:248:11",
													"statements": [
														{
															"nativeSrc": "17469:26:11",
															"nodeType": "YulAssignment",
															"src": "17469:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17481:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "17481:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17492:2:11",
																		"nodeType": "YulLiteral",
																		"src": "17492:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17477:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17477:3:11"
																},
																"nativeSrc": "17477:18:11",
																"nodeType": "YulFunctionCall",
																"src": "17477:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17469:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "17469:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17516:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "17516:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17527:1:11",
																				"nodeType": "YulLiteral",
																				"src": "17527:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17512:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17512:3:11"
																		},
																		"nativeSrc": "17512:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17512:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17535:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "17535:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17541:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "17541:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17531:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17531:3:11"
																		},
																		"nativeSrc": "17531:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17531:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17505:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "17505:6:11"
																},
																"nativeSrc": "17505:47:11",
																"nodeType": "YulFunctionCall",
																"src": "17505:47:11"
															},
															"nativeSrc": "17505:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "17505:47:11"
														},
														{
															"nativeSrc": "17561:139:11",
															"nodeType": "YulAssignment",
															"src": "17561:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17695:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "17695:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_70a4a744132fc9399c082f0c459154fe3f5ba22b57af6b69242ec317d0c935a9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17569:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "17569:124:11"
																},
																"nativeSrc": "17569:131:11",
																"nodeType": "YulFunctionCall",
																"src": "17569:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17561:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "17561:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70a4a744132fc9399c082f0c459154fe3f5ba22b57af6b69242ec317d0c935a9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17288:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17439:9:11",
														"nodeType": "YulTypedName",
														"src": "17439:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17454:4:11",
														"nodeType": "YulTypedName",
														"src": "17454:4:11",
														"type": ""
													}
												],
												"src": "17288:419:11"
											},
											{
												"body": {
													"nativeSrc": "17819:64:11",
													"nodeType": "YulBlock",
													"src": "17819:64:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17841:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "17841:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17849:1:11",
																				"nodeType": "YulLiteral",
																				"src": "17849:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17837:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17837:3:11"
																		},
																		"nativeSrc": "17837:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17837:14:11"
																	},
																	{
																		"hexValue": "526566657272657220616c726561647920736574",
																		"kind": "string",
																		"nativeSrc": "17853:22:11",
																		"nodeType": "YulLiteral",
																		"src": "17853:22:11",
																		"type": "",
																		"value": "Referrer already set"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17830:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "17830:6:11"
																},
																"nativeSrc": "17830:46:11",
																"nodeType": "YulFunctionCall",
																"src": "17830:46:11"
															},
															"nativeSrc": "17830:46:11",
															"nodeType": "YulExpressionStatement",
															"src": "17830:46:11"
														}
													]
												},
												"name": "store_literal_in_memory_6e5308c76c16e443e61e6f371a85ac036d94edcc9d74e3b3746b595a2d6481ab",
												"nativeSrc": "17713:170:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17811:6:11",
														"nodeType": "YulTypedName",
														"src": "17811:6:11",
														"type": ""
													}
												],
												"src": "17713:170:11"
											},
											{
												"body": {
													"nativeSrc": "18035:220:11",
													"nodeType": "YulBlock",
													"src": "18035:220:11",
													"statements": [
														{
															"nativeSrc": "18045:74:11",
															"nodeType": "YulAssignment",
															"src": "18045:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18111:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "18111:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18116:2:11",
																		"nodeType": "YulLiteral",
																		"src": "18116:2:11",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18052:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "18052:58:11"
																},
																"nativeSrc": "18052:67:11",
																"nodeType": "YulFunctionCall",
																"src": "18052:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18045:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "18045:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18217:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "18217:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6e5308c76c16e443e61e6f371a85ac036d94edcc9d74e3b3746b595a2d6481ab",
																	"nativeSrc": "18128:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "18128:88:11"
																},
																"nativeSrc": "18128:93:11",
																"nodeType": "YulFunctionCall",
																"src": "18128:93:11"
															},
															"nativeSrc": "18128:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "18128:93:11"
														},
														{
															"nativeSrc": "18230:19:11",
															"nodeType": "YulAssignment",
															"src": "18230:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18241:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "18241:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18246:2:11",
																		"nodeType": "YulLiteral",
																		"src": "18246:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18237:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "18237:3:11"
																},
																"nativeSrc": "18237:12:11",
																"nodeType": "YulFunctionCall",
																"src": "18237:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18230:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "18230:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6e5308c76c16e443e61e6f371a85ac036d94edcc9d74e3b3746b595a2d6481ab_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17889:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18023:3:11",
														"nodeType": "YulTypedName",
														"src": "18023:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18031:3:11",
														"nodeType": "YulTypedName",
														"src": "18031:3:11",
														"type": ""
													}
												],
												"src": "17889:366:11"
											},
											{
												"body": {
													"nativeSrc": "18432:248:11",
													"nodeType": "YulBlock",
													"src": "18432:248:11",
													"statements": [
														{
															"nativeSrc": "18442:26:11",
															"nodeType": "YulAssignment",
															"src": "18442:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18454:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "18454:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18465:2:11",
																		"nodeType": "YulLiteral",
																		"src": "18465:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18450:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "18450:3:11"
																},
																"nativeSrc": "18450:18:11",
																"nodeType": "YulFunctionCall",
																"src": "18450:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18442:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "18442:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18489:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "18489:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18500:1:11",
																				"nodeType": "YulLiteral",
																				"src": "18500:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18485:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "18485:3:11"
																		},
																		"nativeSrc": "18485:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18485:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18508:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "18508:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18514:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "18514:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18504:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "18504:3:11"
																		},
																		"nativeSrc": "18504:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18504:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18478:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "18478:6:11"
																},
																"nativeSrc": "18478:47:11",
																"nodeType": "YulFunctionCall",
																"src": "18478:47:11"
															},
															"nativeSrc": "18478:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "18478:47:11"
														},
														{
															"nativeSrc": "18534:139:11",
															"nodeType": "YulAssignment",
															"src": "18534:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18668:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "18668:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6e5308c76c16e443e61e6f371a85ac036d94edcc9d74e3b3746b595a2d6481ab_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18542:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "18542:124:11"
																},
																"nativeSrc": "18542:131:11",
																"nodeType": "YulFunctionCall",
																"src": "18542:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18534:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "18534:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6e5308c76c16e443e61e6f371a85ac036d94edcc9d74e3b3746b595a2d6481ab__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18261:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18412:9:11",
														"nodeType": "YulTypedName",
														"src": "18412:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18427:4:11",
														"nodeType": "YulTypedName",
														"src": "18427:4:11",
														"type": ""
													}
												],
												"src": "18261:419:11"
											},
											{
												"body": {
													"nativeSrc": "18792:65:11",
													"nodeType": "YulBlock",
													"src": "18792:65:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18814:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "18814:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18822:1:11",
																				"nodeType": "YulLiteral",
																				"src": "18822:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18810:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "18810:3:11"
																		},
																		"nativeSrc": "18810:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18810:14:11"
																	},
																	{
																		"hexValue": "43616e6e6f7420726566657220796f757273656c66",
																		"kind": "string",
																		"nativeSrc": "18826:23:11",
																		"nodeType": "YulLiteral",
																		"src": "18826:23:11",
																		"type": "",
																		"value": "Cannot refer yourself"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18803:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "18803:6:11"
																},
																"nativeSrc": "18803:47:11",
																"nodeType": "YulFunctionCall",
																"src": "18803:47:11"
															},
															"nativeSrc": "18803:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "18803:47:11"
														}
													]
												},
												"name": "store_literal_in_memory_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51",
												"nativeSrc": "18686:171:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18784:6:11",
														"nodeType": "YulTypedName",
														"src": "18784:6:11",
														"type": ""
													}
												],
												"src": "18686:171:11"
											},
											{
												"body": {
													"nativeSrc": "19009:220:11",
													"nodeType": "YulBlock",
													"src": "19009:220:11",
													"statements": [
														{
															"nativeSrc": "19019:74:11",
															"nodeType": "YulAssignment",
															"src": "19019:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19085:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "19085:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19090:2:11",
																		"nodeType": "YulLiteral",
																		"src": "19090:2:11",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19026:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "19026:58:11"
																},
																"nativeSrc": "19026:67:11",
																"nodeType": "YulFunctionCall",
																"src": "19026:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19019:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "19019:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19191:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "19191:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51",
																	"nativeSrc": "19102:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "19102:88:11"
																},
																"nativeSrc": "19102:93:11",
																"nodeType": "YulFunctionCall",
																"src": "19102:93:11"
															},
															"nativeSrc": "19102:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "19102:93:11"
														},
														{
															"nativeSrc": "19204:19:11",
															"nodeType": "YulAssignment",
															"src": "19204:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19215:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "19215:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19220:2:11",
																		"nodeType": "YulLiteral",
																		"src": "19220:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19211:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "19211:3:11"
																},
																"nativeSrc": "19211:12:11",
																"nodeType": "YulFunctionCall",
																"src": "19211:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19204:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "19204:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18863:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18997:3:11",
														"nodeType": "YulTypedName",
														"src": "18997:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19005:3:11",
														"nodeType": "YulTypedName",
														"src": "19005:3:11",
														"type": ""
													}
												],
												"src": "18863:366:11"
											},
											{
												"body": {
													"nativeSrc": "19406:248:11",
													"nodeType": "YulBlock",
													"src": "19406:248:11",
													"statements": [
														{
															"nativeSrc": "19416:26:11",
															"nodeType": "YulAssignment",
															"src": "19416:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19428:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "19428:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19439:2:11",
																		"nodeType": "YulLiteral",
																		"src": "19439:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19424:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "19424:3:11"
																},
																"nativeSrc": "19424:18:11",
																"nodeType": "YulFunctionCall",
																"src": "19424:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19416:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "19416:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19463:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "19463:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19474:1:11",
																				"nodeType": "YulLiteral",
																				"src": "19474:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19459:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "19459:3:11"
																		},
																		"nativeSrc": "19459:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19459:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19482:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "19482:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19488:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "19488:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19478:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "19478:3:11"
																		},
																		"nativeSrc": "19478:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19478:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19452:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "19452:6:11"
																},
																"nativeSrc": "19452:47:11",
																"nodeType": "YulFunctionCall",
																"src": "19452:47:11"
															},
															"nativeSrc": "19452:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "19452:47:11"
														},
														{
															"nativeSrc": "19508:139:11",
															"nodeType": "YulAssignment",
															"src": "19508:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19642:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "19642:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19516:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "19516:124:11"
																},
																"nativeSrc": "19516:131:11",
																"nodeType": "YulFunctionCall",
																"src": "19516:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19508:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "19508:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19235:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19386:9:11",
														"nodeType": "YulTypedName",
														"src": "19386:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19401:4:11",
														"nodeType": "YulTypedName",
														"src": "19401:4:11",
														"type": ""
													}
												],
												"src": "19235:419:11"
											},
											{
												"body": {
													"nativeSrc": "19842:371:11",
													"nodeType": "YulBlock",
													"src": "19842:371:11",
													"statements": [
														{
															"nativeSrc": "19852:27:11",
															"nodeType": "YulAssignment",
															"src": "19852:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19864:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "19864:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19875:3:11",
																		"nodeType": "YulLiteral",
																		"src": "19875:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19860:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "19860:3:11"
																},
																"nativeSrc": "19860:19:11",
																"nodeType": "YulFunctionCall",
																"src": "19860:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19852:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "19852:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19933:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "19933:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19946:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "19946:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19957:1:11",
																				"nodeType": "YulLiteral",
																				"src": "19957:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19942:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "19942:3:11"
																		},
																		"nativeSrc": "19942:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19942:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19889:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "19889:43:11"
																},
																"nativeSrc": "19889:71:11",
																"nodeType": "YulFunctionCall",
																"src": "19889:71:11"
															},
															"nativeSrc": "19889:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "19889:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20014:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "20014:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20027:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "20027:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20038:2:11",
																				"nodeType": "YulLiteral",
																				"src": "20038:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20023:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "20023:3:11"
																		},
																		"nativeSrc": "20023:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "20023:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19970:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "19970:43:11"
																},
																"nativeSrc": "19970:72:11",
																"nodeType": "YulFunctionCall",
																"src": "19970:72:11"
															},
															"nativeSrc": "19970:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "19970:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "20096:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "20096:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20109:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "20109:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20120:2:11",
																				"nodeType": "YulLiteral",
																				"src": "20120:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20105:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "20105:3:11"
																		},
																		"nativeSrc": "20105:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "20105:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20052:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "20052:43:11"
																},
																"nativeSrc": "20052:72:11",
																"nodeType": "YulFunctionCall",
																"src": "20052:72:11"
															},
															"nativeSrc": "20052:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "20052:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "20178:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "20178:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20191:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "20191:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20202:2:11",
																				"nodeType": "YulLiteral",
																				"src": "20202:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20187:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "20187:3:11"
																		},
																		"nativeSrc": "20187:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "20187:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20134:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "20134:43:11"
																},
																"nativeSrc": "20134:72:11",
																"nodeType": "YulFunctionCall",
																"src": "20134:72:11"
															},
															"nativeSrc": "20134:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "20134:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "19660:553:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19790:9:11",
														"nodeType": "YulTypedName",
														"src": "19790:9:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "19802:6:11",
														"nodeType": "YulTypedName",
														"src": "19802:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "19810:6:11",
														"nodeType": "YulTypedName",
														"src": "19810:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19818:6:11",
														"nodeType": "YulTypedName",
														"src": "19818:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19826:6:11",
														"nodeType": "YulTypedName",
														"src": "19826:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19837:4:11",
														"nodeType": "YulTypedName",
														"src": "19837:4:11",
														"type": ""
													}
												],
												"src": "19660:553:11"
											},
											{
												"body": {
													"nativeSrc": "20325:75:11",
													"nodeType": "YulBlock",
													"src": "20325:75:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20347:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "20347:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20355:1:11",
																				"nodeType": "YulLiteral",
																				"src": "20355:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20343:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "20343:3:11"
																		},
																		"nativeSrc": "20343:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "20343:14:11"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "20359:33:11",
																		"nodeType": "YulLiteral",
																		"src": "20359:33:11",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20336:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "20336:6:11"
																},
																"nativeSrc": "20336:57:11",
																"nodeType": "YulFunctionCall",
																"src": "20336:57:11"
															},
															"nativeSrc": "20336:57:11",
															"nodeType": "YulExpressionStatement",
															"src": "20336:57:11"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "20219:181:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20317:6:11",
														"nodeType": "YulTypedName",
														"src": "20317:6:11",
														"type": ""
													}
												],
												"src": "20219:181:11"
											},
											{
												"body": {
													"nativeSrc": "20552:220:11",
													"nodeType": "YulBlock",
													"src": "20552:220:11",
													"statements": [
														{
															"nativeSrc": "20562:74:11",
															"nodeType": "YulAssignment",
															"src": "20562:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20628:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "20628:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20633:2:11",
																		"nodeType": "YulLiteral",
																		"src": "20633:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20569:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "20569:58:11"
																},
																"nativeSrc": "20569:67:11",
																"nodeType": "YulFunctionCall",
																"src": "20569:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20562:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "20562:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20734:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "20734:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "20645:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "20645:88:11"
																},
																"nativeSrc": "20645:93:11",
																"nodeType": "YulFunctionCall",
																"src": "20645:93:11"
															},
															"nativeSrc": "20645:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "20645:93:11"
														},
														{
															"nativeSrc": "20747:19:11",
															"nodeType": "YulAssignment",
															"src": "20747:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20758:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "20758:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20763:2:11",
																		"nodeType": "YulLiteral",
																		"src": "20763:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20754:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "20754:3:11"
																},
																"nativeSrc": "20754:12:11",
																"nodeType": "YulFunctionCall",
																"src": "20754:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20747:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "20747:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20406:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20540:3:11",
														"nodeType": "YulTypedName",
														"src": "20540:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20548:3:11",
														"nodeType": "YulTypedName",
														"src": "20548:3:11",
														"type": ""
													}
												],
												"src": "20406:366:11"
											},
											{
												"body": {
													"nativeSrc": "20949:248:11",
													"nodeType": "YulBlock",
													"src": "20949:248:11",
													"statements": [
														{
															"nativeSrc": "20959:26:11",
															"nodeType": "YulAssignment",
															"src": "20959:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20971:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "20971:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20982:2:11",
																		"nodeType": "YulLiteral",
																		"src": "20982:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20967:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "20967:3:11"
																},
																"nativeSrc": "20967:18:11",
																"nodeType": "YulFunctionCall",
																"src": "20967:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20959:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "20959:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21006:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "21006:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21017:1:11",
																				"nodeType": "YulLiteral",
																				"src": "21017:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21002:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "21002:3:11"
																		},
																		"nativeSrc": "21002:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "21002:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21025:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "21025:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21031:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "21031:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21021:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "21021:3:11"
																		},
																		"nativeSrc": "21021:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "21021:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20995:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "20995:6:11"
																},
																"nativeSrc": "20995:47:11",
																"nodeType": "YulFunctionCall",
																"src": "20995:47:11"
															},
															"nativeSrc": "20995:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "20995:47:11"
														},
														{
															"nativeSrc": "21051:139:11",
															"nodeType": "YulAssignment",
															"src": "21051:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21185:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "21185:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21059:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "21059:124:11"
																},
																"nativeSrc": "21059:131:11",
																"nodeType": "YulFunctionCall",
																"src": "21059:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21051:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "21051:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20778:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20929:9:11",
														"nodeType": "YulTypedName",
														"src": "20929:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20944:4:11",
														"nodeType": "YulTypedName",
														"src": "20944:4:11",
														"type": ""
													}
												],
												"src": "20778:419:11"
											},
											{
												"body": {
													"nativeSrc": "21329:206:11",
													"nodeType": "YulBlock",
													"src": "21329:206:11",
													"statements": [
														{
															"nativeSrc": "21339:26:11",
															"nodeType": "YulAssignment",
															"src": "21339:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21351:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "21351:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21362:2:11",
																		"nodeType": "YulLiteral",
																		"src": "21362:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21347:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "21347:3:11"
																},
																"nativeSrc": "21347:18:11",
																"nodeType": "YulFunctionCall",
																"src": "21347:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21339:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "21339:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21419:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "21419:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21432:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "21432:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21443:1:11",
																				"nodeType": "YulLiteral",
																				"src": "21443:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21428:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "21428:3:11"
																		},
																		"nativeSrc": "21428:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "21428:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21375:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "21375:43:11"
																},
																"nativeSrc": "21375:71:11",
																"nodeType": "YulFunctionCall",
																"src": "21375:71:11"
															},
															"nativeSrc": "21375:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "21375:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21500:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "21500:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21513:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "21513:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21524:2:11",
																				"nodeType": "YulLiteral",
																				"src": "21524:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21509:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "21509:3:11"
																		},
																		"nativeSrc": "21509:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "21509:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21456:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "21456:43:11"
																},
																"nativeSrc": "21456:72:11",
																"nodeType": "YulFunctionCall",
																"src": "21456:72:11"
															},
															"nativeSrc": "21456:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "21456:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "21203:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21293:9:11",
														"nodeType": "YulTypedName",
														"src": "21293:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21305:6:11",
														"nodeType": "YulTypedName",
														"src": "21305:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21313:6:11",
														"nodeType": "YulTypedName",
														"src": "21313:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21324:4:11",
														"nodeType": "YulTypedName",
														"src": "21324:4:11",
														"type": ""
													}
												],
												"src": "21203:332:11"
											},
											{
												"body": {
													"nativeSrc": "21589:362:11",
													"nodeType": "YulBlock",
													"src": "21589:362:11",
													"statements": [
														{
															"nativeSrc": "21599:25:11",
															"nodeType": "YulAssignment",
															"src": "21599:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21622:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "21622:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21604:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "21604:17:11"
																},
																"nativeSrc": "21604:20:11",
																"nodeType": "YulFunctionCall",
																"src": "21604:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "21599:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "21599:1:11"
																}
															]
														},
														{
															"nativeSrc": "21633:25:11",
															"nodeType": "YulAssignment",
															"src": "21633:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "21656:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "21656:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21638:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "21638:17:11"
																},
																"nativeSrc": "21638:20:11",
																"nodeType": "YulFunctionCall",
																"src": "21638:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "21633:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "21633:1:11"
																}
															]
														},
														{
															"nativeSrc": "21667:28:11",
															"nodeType": "YulVariableDeclaration",
															"src": "21667:28:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21690:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "21690:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "21693:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "21693:1:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "21686:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "21686:3:11"
																},
																"nativeSrc": "21686:9:11",
																"nodeType": "YulFunctionCall",
																"src": "21686:9:11"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "21671:11:11",
																	"nodeType": "YulTypedName",
																	"src": "21671:11:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "21704:41:11",
															"nodeType": "YulAssignment",
															"src": "21704:41:11",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "21733:11:11",
																		"nodeType": "YulIdentifier",
																		"src": "21733:11:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21715:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "21715:17:11"
																},
																"nativeSrc": "21715:30:11",
																"nodeType": "YulFunctionCall",
																"src": "21715:30:11"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "21704:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "21704:7:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21922:22:11",
																"nodeType": "YulBlock",
																"src": "21922:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "21924:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "21924:16:11"
																			},
																			"nativeSrc": "21924:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "21924:18:11"
																		},
																		"nativeSrc": "21924:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "21924:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "21855:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "21855:1:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "21848:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "21848:6:11"
																				},
																				"nativeSrc": "21848:9:11",
																				"nodeType": "YulFunctionCall",
																				"src": "21848:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "21878:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "21878:1:11"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "21885:7:11",
																								"nodeType": "YulIdentifier",
																								"src": "21885:7:11"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "21894:1:11",
																								"nodeType": "YulIdentifier",
																								"src": "21894:1:11"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "21881:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "21881:3:11"
																						},
																						"nativeSrc": "21881:15:11",
																						"nodeType": "YulFunctionCall",
																						"src": "21881:15:11"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "21875:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "21875:2:11"
																				},
																				"nativeSrc": "21875:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "21875:22:11"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "21828:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "21828:2:11"
																		},
																		"nativeSrc": "21828:83:11",
																		"nodeType": "YulFunctionCall",
																		"src": "21828:83:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "21808:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "21808:6:11"
																},
																"nativeSrc": "21808:113:11",
																"nodeType": "YulFunctionCall",
																"src": "21808:113:11"
															},
															"nativeSrc": "21805:139:11",
															"nodeType": "YulIf",
															"src": "21805:139:11"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "21541:410:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "21572:1:11",
														"nodeType": "YulTypedName",
														"src": "21572:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "21575:1:11",
														"nodeType": "YulTypedName",
														"src": "21575:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "21581:7:11",
														"nodeType": "YulTypedName",
														"src": "21581:7:11",
														"type": ""
													}
												],
												"src": "21541:410:11"
											},
											{
												"body": {
													"nativeSrc": "21985:152:11",
													"nodeType": "YulBlock",
													"src": "21985:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22002:1:11",
																		"nodeType": "YulLiteral",
																		"src": "22002:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22005:77:11",
																		"nodeType": "YulLiteral",
																		"src": "22005:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21995:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "21995:6:11"
																},
																"nativeSrc": "21995:88:11",
																"nodeType": "YulFunctionCall",
																"src": "21995:88:11"
															},
															"nativeSrc": "21995:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "21995:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22099:1:11",
																		"nodeType": "YulLiteral",
																		"src": "22099:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22102:4:11",
																		"nodeType": "YulLiteral",
																		"src": "22102:4:11",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22092:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "22092:6:11"
																},
																"nativeSrc": "22092:15:11",
																"nodeType": "YulFunctionCall",
																"src": "22092:15:11"
															},
															"nativeSrc": "22092:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "22092:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22123:1:11",
																		"nodeType": "YulLiteral",
																		"src": "22123:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22126:4:11",
																		"nodeType": "YulLiteral",
																		"src": "22126:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "22116:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "22116:6:11"
																},
																"nativeSrc": "22116:15:11",
																"nodeType": "YulFunctionCall",
																"src": "22116:15:11"
															},
															"nativeSrc": "22116:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "22116:15:11"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "21957:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "21957:180:11"
											},
											{
												"body": {
													"nativeSrc": "22185:143:11",
													"nodeType": "YulBlock",
													"src": "22185:143:11",
													"statements": [
														{
															"nativeSrc": "22195:25:11",
															"nodeType": "YulAssignment",
															"src": "22195:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "22218:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "22218:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "22200:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "22200:17:11"
																},
																"nativeSrc": "22200:20:11",
																"nodeType": "YulFunctionCall",
																"src": "22200:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "22195:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "22195:1:11"
																}
															]
														},
														{
															"nativeSrc": "22229:25:11",
															"nodeType": "YulAssignment",
															"src": "22229:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "22252:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "22252:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "22234:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "22234:17:11"
																},
																"nativeSrc": "22234:20:11",
																"nodeType": "YulFunctionCall",
																"src": "22234:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "22229:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "22229:1:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "22276:22:11",
																"nodeType": "YulBlock",
																"src": "22276:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "22278:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "22278:16:11"
																			},
																			"nativeSrc": "22278:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "22278:18:11"
																		},
																		"nativeSrc": "22278:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "22278:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "22273:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "22273:1:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "22266:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "22266:6:11"
																},
																"nativeSrc": "22266:9:11",
																"nodeType": "YulFunctionCall",
																"src": "22266:9:11"
															},
															"nativeSrc": "22263:35:11",
															"nodeType": "YulIf",
															"src": "22263:35:11"
														},
														{
															"nativeSrc": "22308:14:11",
															"nodeType": "YulAssignment",
															"src": "22308:14:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "22317:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "22317:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "22320:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "22320:1:11"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "22313:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "22313:3:11"
																},
																"nativeSrc": "22313:9:11",
																"nodeType": "YulFunctionCall",
																"src": "22313:9:11"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "22308:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "22308:1:11"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "22143:185:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "22174:1:11",
														"nodeType": "YulTypedName",
														"src": "22174:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "22177:1:11",
														"nodeType": "YulTypedName",
														"src": "22177:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "22183:1:11",
														"nodeType": "YulTypedName",
														"src": "22183:1:11",
														"type": ""
													}
												],
												"src": "22143:185:11"
											},
											{
												"body": {
													"nativeSrc": "22397:80:11",
													"nodeType": "YulBlock",
													"src": "22397:80:11",
													"statements": [
														{
															"nativeSrc": "22407:22:11",
															"nodeType": "YulAssignment",
															"src": "22407:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "22422:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "22422:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "22416:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "22416:5:11"
																},
																"nativeSrc": "22416:13:11",
																"nodeType": "YulFunctionCall",
																"src": "22416:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "22407:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "22407:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22465:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "22465:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "22438:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "22438:26:11"
																},
																"nativeSrc": "22438:33:11",
																"nodeType": "YulFunctionCall",
																"src": "22438:33:11"
															},
															"nativeSrc": "22438:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "22438:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "22334:143:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "22375:6:11",
														"nodeType": "YulTypedName",
														"src": "22375:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "22383:3:11",
														"nodeType": "YulTypedName",
														"src": "22383:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "22391:5:11",
														"nodeType": "YulTypedName",
														"src": "22391:5:11",
														"type": ""
													}
												],
												"src": "22334:143:11"
											},
											{
												"body": {
													"nativeSrc": "22560:274:11",
													"nodeType": "YulBlock",
													"src": "22560:274:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "22606:83:11",
																"nodeType": "YulBlock",
																"src": "22606:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "22608:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "22608:77:11"
																			},
																			"nativeSrc": "22608:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "22608:79:11"
																		},
																		"nativeSrc": "22608:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "22608:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "22581:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "22581:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22590:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "22590:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22577:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "22577:3:11"
																		},
																		"nativeSrc": "22577:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "22577:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22602:2:11",
																		"nodeType": "YulLiteral",
																		"src": "22602:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "22573:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "22573:3:11"
																},
																"nativeSrc": "22573:32:11",
																"nodeType": "YulFunctionCall",
																"src": "22573:32:11"
															},
															"nativeSrc": "22570:119:11",
															"nodeType": "YulIf",
															"src": "22570:119:11"
														},
														{
															"nativeSrc": "22699:128:11",
															"nodeType": "YulBlock",
															"src": "22699:128:11",
															"statements": [
																{
																	"nativeSrc": "22714:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "22714:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "22728:1:11",
																		"nodeType": "YulLiteral",
																		"src": "22728:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "22718:6:11",
																			"nodeType": "YulTypedName",
																			"src": "22718:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "22743:74:11",
																	"nodeType": "YulAssignment",
																	"src": "22743:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "22789:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "22789:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "22800:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "22800:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "22785:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "22785:3:11"
																				},
																				"nativeSrc": "22785:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "22785:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "22809:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "22809:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "22753:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "22753:31:11"
																		},
																		"nativeSrc": "22753:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "22753:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "22743:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "22743:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "22483:351:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22530:9:11",
														"nodeType": "YulTypedName",
														"src": "22530:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "22541:7:11",
														"nodeType": "YulTypedName",
														"src": "22541:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "22553:6:11",
														"nodeType": "YulTypedName",
														"src": "22553:6:11",
														"type": ""
													}
												],
												"src": "22483:351:11"
											},
											{
												"body": {
													"nativeSrc": "22994:288:11",
													"nodeType": "YulBlock",
													"src": "22994:288:11",
													"statements": [
														{
															"nativeSrc": "23004:26:11",
															"nodeType": "YulAssignment",
															"src": "23004:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23016:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "23016:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23027:2:11",
																		"nodeType": "YulLiteral",
																		"src": "23027:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23012:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "23012:3:11"
																},
																"nativeSrc": "23012:18:11",
																"nodeType": "YulFunctionCall",
																"src": "23012:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23004:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "23004:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23084:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "23084:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23097:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "23097:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23108:1:11",
																				"nodeType": "YulLiteral",
																				"src": "23108:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23093:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "23093:3:11"
																		},
																		"nativeSrc": "23093:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "23093:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "23040:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "23040:43:11"
																},
																"nativeSrc": "23040:71:11",
																"nodeType": "YulFunctionCall",
																"src": "23040:71:11"
															},
															"nativeSrc": "23040:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "23040:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "23165:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "23165:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23178:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "23178:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23189:2:11",
																				"nodeType": "YulLiteral",
																				"src": "23189:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23174:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "23174:3:11"
																		},
																		"nativeSrc": "23174:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "23174:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "23121:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "23121:43:11"
																},
																"nativeSrc": "23121:72:11",
																"nodeType": "YulFunctionCall",
																"src": "23121:72:11"
															},
															"nativeSrc": "23121:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "23121:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "23247:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "23247:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23260:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "23260:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23271:2:11",
																				"nodeType": "YulLiteral",
																				"src": "23271:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23256:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "23256:3:11"
																		},
																		"nativeSrc": "23256:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "23256:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23203:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "23203:43:11"
																},
																"nativeSrc": "23203:72:11",
																"nodeType": "YulFunctionCall",
																"src": "23203:72:11"
															},
															"nativeSrc": "23203:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "23203:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "22840:442:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22950:9:11",
														"nodeType": "YulTypedName",
														"src": "22950:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "22962:6:11",
														"nodeType": "YulTypedName",
														"src": "22962:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22970:6:11",
														"nodeType": "YulTypedName",
														"src": "22970:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22978:6:11",
														"nodeType": "YulTypedName",
														"src": "22978:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22989:4:11",
														"nodeType": "YulTypedName",
														"src": "22989:4:11",
														"type": ""
													}
												],
												"src": "22840:442:11"
											},
											{
												"body": {
													"nativeSrc": "23328:76:11",
													"nodeType": "YulBlock",
													"src": "23328:76:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "23382:16:11",
																"nodeType": "YulBlock",
																"src": "23382:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "23391:1:11",
																					"nodeType": "YulLiteral",
																					"src": "23391:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "23394:1:11",
																					"nodeType": "YulLiteral",
																					"src": "23394:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "23384:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "23384:6:11"
																			},
																			"nativeSrc": "23384:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "23384:12:11"
																		},
																		"nativeSrc": "23384:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "23384:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "23351:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "23351:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "23373:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "23373:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "23358:14:11",
																					"nodeType": "YulIdentifier",
																					"src": "23358:14:11"
																				},
																				"nativeSrc": "23358:21:11",
																				"nodeType": "YulFunctionCall",
																				"src": "23358:21:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "23348:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "23348:2:11"
																		},
																		"nativeSrc": "23348:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "23348:32:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "23341:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "23341:6:11"
																},
																"nativeSrc": "23341:40:11",
																"nodeType": "YulFunctionCall",
																"src": "23341:40:11"
															},
															"nativeSrc": "23338:60:11",
															"nodeType": "YulIf",
															"src": "23338:60:11"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "23288:116:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23321:5:11",
														"nodeType": "YulTypedName",
														"src": "23321:5:11",
														"type": ""
													}
												],
												"src": "23288:116:11"
											},
											{
												"body": {
													"nativeSrc": "23470:77:11",
													"nodeType": "YulBlock",
													"src": "23470:77:11",
													"statements": [
														{
															"nativeSrc": "23480:22:11",
															"nodeType": "YulAssignment",
															"src": "23480:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "23495:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "23495:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "23489:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "23489:5:11"
																},
																"nativeSrc": "23489:13:11",
																"nodeType": "YulFunctionCall",
																"src": "23489:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "23480:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "23480:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23535:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "23535:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "23511:23:11",
																	"nodeType": "YulIdentifier",
																	"src": "23511:23:11"
																},
																"nativeSrc": "23511:30:11",
																"nodeType": "YulFunctionCall",
																"src": "23511:30:11"
															},
															"nativeSrc": "23511:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "23511:30:11"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "23410:137:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "23448:6:11",
														"nodeType": "YulTypedName",
														"src": "23448:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "23456:3:11",
														"nodeType": "YulTypedName",
														"src": "23456:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "23464:5:11",
														"nodeType": "YulTypedName",
														"src": "23464:5:11",
														"type": ""
													}
												],
												"src": "23410:137:11"
											},
											{
												"body": {
													"nativeSrc": "23627:271:11",
													"nodeType": "YulBlock",
													"src": "23627:271:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "23673:83:11",
																"nodeType": "YulBlock",
																"src": "23673:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "23675:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "23675:77:11"
																			},
																			"nativeSrc": "23675:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "23675:79:11"
																		},
																		"nativeSrc": "23675:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "23675:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "23648:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "23648:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23657:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "23657:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23644:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "23644:3:11"
																		},
																		"nativeSrc": "23644:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "23644:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23669:2:11",
																		"nodeType": "YulLiteral",
																		"src": "23669:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "23640:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "23640:3:11"
																},
																"nativeSrc": "23640:32:11",
																"nodeType": "YulFunctionCall",
																"src": "23640:32:11"
															},
															"nativeSrc": "23637:119:11",
															"nodeType": "YulIf",
															"src": "23637:119:11"
														},
														{
															"nativeSrc": "23766:125:11",
															"nodeType": "YulBlock",
															"src": "23766:125:11",
															"statements": [
																{
																	"nativeSrc": "23781:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "23781:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "23795:1:11",
																		"nodeType": "YulLiteral",
																		"src": "23795:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "23785:6:11",
																			"nodeType": "YulTypedName",
																			"src": "23785:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "23810:71:11",
																	"nodeType": "YulAssignment",
																	"src": "23810:71:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "23853:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "23853:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "23864:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "23864:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "23849:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "23849:3:11"
																				},
																				"nativeSrc": "23849:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "23849:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "23873:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "23873:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "23820:28:11",
																			"nodeType": "YulIdentifier",
																			"src": "23820:28:11"
																		},
																		"nativeSrc": "23820:61:11",
																		"nodeType": "YulFunctionCall",
																		"src": "23820:61:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "23810:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "23810:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "23553:345:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23597:9:11",
														"nodeType": "YulTypedName",
														"src": "23597:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "23608:7:11",
														"nodeType": "YulTypedName",
														"src": "23608:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "23620:6:11",
														"nodeType": "YulTypedName",
														"src": "23620:6:11",
														"type": ""
													}
												],
												"src": "23553:345:11"
											},
											{
												"body": {
													"nativeSrc": "24010:123:11",
													"nodeType": "YulBlock",
													"src": "24010:123:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "24032:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "24032:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24040:1:11",
																				"nodeType": "YulLiteral",
																				"src": "24040:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24028:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "24028:3:11"
																		},
																		"nativeSrc": "24028:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "24028:14:11"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nativeSrc": "24044:34:11",
																		"nodeType": "YulLiteral",
																		"src": "24044:34:11",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24021:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "24021:6:11"
																},
																"nativeSrc": "24021:58:11",
																"nodeType": "YulFunctionCall",
																"src": "24021:58:11"
															},
															"nativeSrc": "24021:58:11",
															"nodeType": "YulExpressionStatement",
															"src": "24021:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "24100:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "24100:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24108:2:11",
																				"nodeType": "YulLiteral",
																				"src": "24108:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24096:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "24096:3:11"
																		},
																		"nativeSrc": "24096:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "24096:15:11"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nativeSrc": "24113:12:11",
																		"nodeType": "YulLiteral",
																		"src": "24113:12:11",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24089:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "24089:6:11"
																},
																"nativeSrc": "24089:37:11",
																"nodeType": "YulFunctionCall",
																"src": "24089:37:11"
															},
															"nativeSrc": "24089:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "24089:37:11"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nativeSrc": "23904:229:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "24002:6:11",
														"nodeType": "YulTypedName",
														"src": "24002:6:11",
														"type": ""
													}
												],
												"src": "23904:229:11"
											},
											{
												"body": {
													"nativeSrc": "24285:220:11",
													"nodeType": "YulBlock",
													"src": "24285:220:11",
													"statements": [
														{
															"nativeSrc": "24295:74:11",
															"nodeType": "YulAssignment",
															"src": "24295:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24361:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "24361:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24366:2:11",
																		"nodeType": "YulLiteral",
																		"src": "24366:2:11",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24302:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "24302:58:11"
																},
																"nativeSrc": "24302:67:11",
																"nodeType": "YulFunctionCall",
																"src": "24302:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24295:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "24295:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24467:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "24467:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nativeSrc": "24378:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "24378:88:11"
																},
																"nativeSrc": "24378:93:11",
																"nodeType": "YulFunctionCall",
																"src": "24378:93:11"
															},
															"nativeSrc": "24378:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "24378:93:11"
														},
														{
															"nativeSrc": "24480:19:11",
															"nodeType": "YulAssignment",
															"src": "24480:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24491:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "24491:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24496:2:11",
																		"nodeType": "YulLiteral",
																		"src": "24496:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24487:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "24487:3:11"
																},
																"nativeSrc": "24487:12:11",
																"nodeType": "YulFunctionCall",
																"src": "24487:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24480:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "24480:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "24139:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24273:3:11",
														"nodeType": "YulTypedName",
														"src": "24273:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24281:3:11",
														"nodeType": "YulTypedName",
														"src": "24281:3:11",
														"type": ""
													}
												],
												"src": "24139:366:11"
											},
											{
												"body": {
													"nativeSrc": "24682:248:11",
													"nodeType": "YulBlock",
													"src": "24682:248:11",
													"statements": [
														{
															"nativeSrc": "24692:26:11",
															"nodeType": "YulAssignment",
															"src": "24692:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24704:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "24704:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24715:2:11",
																		"nodeType": "YulLiteral",
																		"src": "24715:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24700:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "24700:3:11"
																},
																"nativeSrc": "24700:18:11",
																"nodeType": "YulFunctionCall",
																"src": "24700:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24692:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "24692:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24739:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "24739:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24750:1:11",
																				"nodeType": "YulLiteral",
																				"src": "24750:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24735:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "24735:3:11"
																		},
																		"nativeSrc": "24735:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "24735:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24758:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "24758:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24764:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "24764:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24754:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "24754:3:11"
																		},
																		"nativeSrc": "24754:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "24754:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24728:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "24728:6:11"
																},
																"nativeSrc": "24728:47:11",
																"nodeType": "YulFunctionCall",
																"src": "24728:47:11"
															},
															"nativeSrc": "24728:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "24728:47:11"
														},
														{
															"nativeSrc": "24784:139:11",
															"nodeType": "YulAssignment",
															"src": "24784:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "24918:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "24918:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24792:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "24792:124:11"
																},
																"nativeSrc": "24792:131:11",
																"nodeType": "YulFunctionCall",
																"src": "24792:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24784:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "24784:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "24511:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24662:9:11",
														"nodeType": "YulTypedName",
														"src": "24662:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24677:4:11",
														"nodeType": "YulTypedName",
														"src": "24677:4:11",
														"type": ""
													}
												],
												"src": "24511:419:11"
											},
											{
												"body": {
													"nativeSrc": "25042:119:11",
													"nodeType": "YulBlock",
													"src": "25042:119:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "25064:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "25064:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25072:1:11",
																				"nodeType": "YulLiteral",
																				"src": "25072:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25060:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "25060:3:11"
																		},
																		"nativeSrc": "25060:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "25060:14:11"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nativeSrc": "25076:34:11",
																		"nodeType": "YulLiteral",
																		"src": "25076:34:11",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25053:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "25053:6:11"
																},
																"nativeSrc": "25053:58:11",
																"nodeType": "YulFunctionCall",
																"src": "25053:58:11"
															},
															"nativeSrc": "25053:58:11",
															"nodeType": "YulExpressionStatement",
															"src": "25053:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "25132:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "25132:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25140:2:11",
																				"nodeType": "YulLiteral",
																				"src": "25140:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25128:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "25128:3:11"
																		},
																		"nativeSrc": "25128:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "25128:15:11"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nativeSrc": "25145:8:11",
																		"nodeType": "YulLiteral",
																		"src": "25145:8:11",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25121:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "25121:6:11"
																},
																"nativeSrc": "25121:33:11",
																"nodeType": "YulFunctionCall",
																"src": "25121:33:11"
															},
															"nativeSrc": "25121:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "25121:33:11"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nativeSrc": "24936:225:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "25034:6:11",
														"nodeType": "YulTypedName",
														"src": "25034:6:11",
														"type": ""
													}
												],
												"src": "24936:225:11"
											},
											{
												"body": {
													"nativeSrc": "25313:220:11",
													"nodeType": "YulBlock",
													"src": "25313:220:11",
													"statements": [
														{
															"nativeSrc": "25323:74:11",
															"nodeType": "YulAssignment",
															"src": "25323:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25389:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "25389:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25394:2:11",
																		"nodeType": "YulLiteral",
																		"src": "25394:2:11",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25330:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "25330:58:11"
																},
																"nativeSrc": "25330:67:11",
																"nodeType": "YulFunctionCall",
																"src": "25330:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "25323:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "25323:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25495:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "25495:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nativeSrc": "25406:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "25406:88:11"
																},
																"nativeSrc": "25406:93:11",
																"nodeType": "YulFunctionCall",
																"src": "25406:93:11"
															},
															"nativeSrc": "25406:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "25406:93:11"
														},
														{
															"nativeSrc": "25508:19:11",
															"nodeType": "YulAssignment",
															"src": "25508:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25519:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "25519:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25524:2:11",
																		"nodeType": "YulLiteral",
																		"src": "25524:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25515:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "25515:3:11"
																},
																"nativeSrc": "25515:12:11",
																"nodeType": "YulFunctionCall",
																"src": "25515:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "25508:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "25508:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "25167:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "25301:3:11",
														"nodeType": "YulTypedName",
														"src": "25301:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "25309:3:11",
														"nodeType": "YulTypedName",
														"src": "25309:3:11",
														"type": ""
													}
												],
												"src": "25167:366:11"
											},
											{
												"body": {
													"nativeSrc": "25710:248:11",
													"nodeType": "YulBlock",
													"src": "25710:248:11",
													"statements": [
														{
															"nativeSrc": "25720:26:11",
															"nodeType": "YulAssignment",
															"src": "25720:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25732:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "25732:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25743:2:11",
																		"nodeType": "YulLiteral",
																		"src": "25743:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25728:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "25728:3:11"
																},
																"nativeSrc": "25728:18:11",
																"nodeType": "YulFunctionCall",
																"src": "25728:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25720:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "25720:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25767:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "25767:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25778:1:11",
																				"nodeType": "YulLiteral",
																				"src": "25778:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25763:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "25763:3:11"
																		},
																		"nativeSrc": "25763:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "25763:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "25786:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "25786:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "25792:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "25792:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "25782:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "25782:3:11"
																		},
																		"nativeSrc": "25782:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "25782:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25756:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "25756:6:11"
																},
																"nativeSrc": "25756:47:11",
																"nodeType": "YulFunctionCall",
																"src": "25756:47:11"
															},
															"nativeSrc": "25756:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "25756:47:11"
														},
														{
															"nativeSrc": "25812:139:11",
															"nodeType": "YulAssignment",
															"src": "25812:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "25946:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "25946:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25820:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "25820:124:11"
																},
																"nativeSrc": "25820:131:11",
																"nodeType": "YulFunctionCall",
																"src": "25820:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25812:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "25812:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "25539:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25690:9:11",
														"nodeType": "YulTypedName",
														"src": "25690:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25705:4:11",
														"nodeType": "YulTypedName",
														"src": "25705:4:11",
														"type": ""
													}
												],
												"src": "25539:419:11"
											},
											{
												"body": {
													"nativeSrc": "26022:40:11",
													"nodeType": "YulBlock",
													"src": "26022:40:11",
													"statements": [
														{
															"nativeSrc": "26033:22:11",
															"nodeType": "YulAssignment",
															"src": "26033:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "26049:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "26049:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "26043:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "26043:5:11"
																},
																"nativeSrc": "26043:12:11",
																"nodeType": "YulFunctionCall",
																"src": "26043:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "26033:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "26033:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "25964:98:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "26005:5:11",
														"nodeType": "YulTypedName",
														"src": "26005:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "26015:6:11",
														"nodeType": "YulTypedName",
														"src": "26015:6:11",
														"type": ""
													}
												],
												"src": "25964:98:11"
											},
											{
												"body": {
													"nativeSrc": "26181:34:11",
													"nodeType": "YulBlock",
													"src": "26181:34:11",
													"statements": [
														{
															"nativeSrc": "26191:18:11",
															"nodeType": "YulAssignment",
															"src": "26191:18:11",
															"value": {
																"name": "pos",
																"nativeSrc": "26206:3:11",
																"nodeType": "YulIdentifier",
																"src": "26206:3:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "26191:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "26191:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "26068:147:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "26153:3:11",
														"nodeType": "YulTypedName",
														"src": "26153:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "26158:6:11",
														"nodeType": "YulTypedName",
														"src": "26158:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "26169:11:11",
														"nodeType": "YulTypedName",
														"src": "26169:11:11",
														"type": ""
													}
												],
												"src": "26068:147:11"
											},
											{
												"body": {
													"nativeSrc": "26283:77:11",
													"nodeType": "YulBlock",
													"src": "26283:77:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "26300:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "26300:3:11"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "26305:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "26305:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "26310:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "26310:6:11"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "26294:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "26294:5:11"
																},
																"nativeSrc": "26294:23:11",
																"nodeType": "YulFunctionCall",
																"src": "26294:23:11"
															},
															"nativeSrc": "26294:23:11",
															"nodeType": "YulExpressionStatement",
															"src": "26294:23:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "26337:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "26337:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "26342:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "26342:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26333:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "26333:3:11"
																		},
																		"nativeSrc": "26333:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "26333:16:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26351:1:11",
																		"nodeType": "YulLiteral",
																		"src": "26351:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26326:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "26326:6:11"
																},
																"nativeSrc": "26326:27:11",
																"nodeType": "YulFunctionCall",
																"src": "26326:27:11"
															},
															"nativeSrc": "26326:27:11",
															"nodeType": "YulExpressionStatement",
															"src": "26326:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "26221:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "26265:3:11",
														"nodeType": "YulTypedName",
														"src": "26265:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "26270:3:11",
														"nodeType": "YulTypedName",
														"src": "26270:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "26275:6:11",
														"nodeType": "YulTypedName",
														"src": "26275:6:11",
														"type": ""
													}
												],
												"src": "26221:139:11"
											},
											{
												"body": {
													"nativeSrc": "26474:278:11",
													"nodeType": "YulBlock",
													"src": "26474:278:11",
													"statements": [
														{
															"nativeSrc": "26484:52:11",
															"nodeType": "YulVariableDeclaration",
															"src": "26484:52:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "26530:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "26530:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "26498:31:11",
																	"nodeType": "YulIdentifier",
																	"src": "26498:31:11"
																},
																"nativeSrc": "26498:38:11",
																"nodeType": "YulFunctionCall",
																"src": "26498:38:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "26488:6:11",
																	"nodeType": "YulTypedName",
																	"src": "26488:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "26545:95:11",
															"nodeType": "YulAssignment",
															"src": "26545:95:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26628:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "26628:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "26633:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "26633:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "26552:75:11",
																	"nodeType": "YulIdentifier",
																	"src": "26552:75:11"
																},
																"nativeSrc": "26552:88:11",
																"nodeType": "YulFunctionCall",
																"src": "26552:88:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "26545:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "26545:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "26688:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "26688:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26695:4:11",
																				"nodeType": "YulLiteral",
																				"src": "26695:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26684:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "26684:3:11"
																		},
																		"nativeSrc": "26684:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "26684:16:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "26702:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "26702:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "26707:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "26707:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "26649:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "26649:34:11"
																},
																"nativeSrc": "26649:65:11",
																"nodeType": "YulFunctionCall",
																"src": "26649:65:11"
															},
															"nativeSrc": "26649:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "26649:65:11"
														},
														{
															"nativeSrc": "26723:23:11",
															"nodeType": "YulAssignment",
															"src": "26723:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26734:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "26734:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "26739:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "26739:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26730:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "26730:3:11"
																},
																"nativeSrc": "26730:16:11",
																"nodeType": "YulFunctionCall",
																"src": "26730:16:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "26723:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "26723:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "26366:386:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "26455:5:11",
														"nodeType": "YulTypedName",
														"src": "26455:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "26462:3:11",
														"nodeType": "YulTypedName",
														"src": "26462:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "26470:3:11",
														"nodeType": "YulTypedName",
														"src": "26470:3:11",
														"type": ""
													}
												],
												"src": "26366:386:11"
											},
											{
												"body": {
													"nativeSrc": "26892:137:11",
													"nodeType": "YulBlock",
													"src": "26892:137:11",
													"statements": [
														{
															"nativeSrc": "26903:100:11",
															"nodeType": "YulAssignment",
															"src": "26903:100:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "26990:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "26990:6:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "26999:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "26999:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "26910:79:11",
																	"nodeType": "YulIdentifier",
																	"src": "26910:79:11"
																},
																"nativeSrc": "26910:93:11",
																"nodeType": "YulFunctionCall",
																"src": "26910:93:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "26903:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "26903:3:11"
																}
															]
														},
														{
															"nativeSrc": "27013:10:11",
															"nodeType": "YulAssignment",
															"src": "27013:10:11",
															"value": {
																"name": "pos",
																"nativeSrc": "27020:3:11",
																"nodeType": "YulIdentifier",
																"src": "27020:3:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "27013:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "27013:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "26758:271:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "26871:3:11",
														"nodeType": "YulTypedName",
														"src": "26871:3:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "26877:6:11",
														"nodeType": "YulTypedName",
														"src": "26877:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "26888:3:11",
														"nodeType": "YulTypedName",
														"src": "26888:3:11",
														"type": ""
													}
												],
												"src": "26758:271:11"
											},
											{
												"body": {
													"nativeSrc": "27141:73:11",
													"nodeType": "YulBlock",
													"src": "27141:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "27163:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "27163:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27171:1:11",
																				"nodeType": "YulLiteral",
																				"src": "27171:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27159:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "27159:3:11"
																		},
																		"nativeSrc": "27159:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "27159:14:11"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "27175:31:11",
																		"nodeType": "YulLiteral",
																		"src": "27175:31:11",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27152:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "27152:6:11"
																},
																"nativeSrc": "27152:55:11",
																"nodeType": "YulFunctionCall",
																"src": "27152:55:11"
															},
															"nativeSrc": "27152:55:11",
															"nodeType": "YulExpressionStatement",
															"src": "27152:55:11"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nativeSrc": "27035:179:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "27133:6:11",
														"nodeType": "YulTypedName",
														"src": "27133:6:11",
														"type": ""
													}
												],
												"src": "27035:179:11"
											},
											{
												"body": {
													"nativeSrc": "27366:220:11",
													"nodeType": "YulBlock",
													"src": "27366:220:11",
													"statements": [
														{
															"nativeSrc": "27376:74:11",
															"nodeType": "YulAssignment",
															"src": "27376:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27442:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "27442:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27447:2:11",
																		"nodeType": "YulLiteral",
																		"src": "27447:2:11",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "27383:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "27383:58:11"
																},
																"nativeSrc": "27383:67:11",
																"nodeType": "YulFunctionCall",
																"src": "27383:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "27376:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "27376:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27548:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "27548:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nativeSrc": "27459:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "27459:88:11"
																},
																"nativeSrc": "27459:93:11",
																"nodeType": "YulFunctionCall",
																"src": "27459:93:11"
															},
															"nativeSrc": "27459:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "27459:93:11"
														},
														{
															"nativeSrc": "27561:19:11",
															"nodeType": "YulAssignment",
															"src": "27561:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27572:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "27572:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27577:2:11",
																		"nodeType": "YulLiteral",
																		"src": "27577:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27568:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "27568:3:11"
																},
																"nativeSrc": "27568:12:11",
																"nodeType": "YulFunctionCall",
																"src": "27568:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "27561:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "27561:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "27220:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "27354:3:11",
														"nodeType": "YulTypedName",
														"src": "27354:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "27362:3:11",
														"nodeType": "YulTypedName",
														"src": "27362:3:11",
														"type": ""
													}
												],
												"src": "27220:366:11"
											},
											{
												"body": {
													"nativeSrc": "27763:248:11",
													"nodeType": "YulBlock",
													"src": "27763:248:11",
													"statements": [
														{
															"nativeSrc": "27773:26:11",
															"nodeType": "YulAssignment",
															"src": "27773:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "27785:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "27785:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27796:2:11",
																		"nodeType": "YulLiteral",
																		"src": "27796:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27781:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "27781:3:11"
																},
																"nativeSrc": "27781:18:11",
																"nodeType": "YulFunctionCall",
																"src": "27781:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27773:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "27773:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27820:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "27820:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27831:1:11",
																				"nodeType": "YulLiteral",
																				"src": "27831:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27816:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "27816:3:11"
																		},
																		"nativeSrc": "27816:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "27816:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "27839:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "27839:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "27845:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "27845:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "27835:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "27835:3:11"
																		},
																		"nativeSrc": "27835:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "27835:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27809:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "27809:6:11"
																},
																"nativeSrc": "27809:47:11",
																"nodeType": "YulFunctionCall",
																"src": "27809:47:11"
															},
															"nativeSrc": "27809:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "27809:47:11"
														},
														{
															"nativeSrc": "27865:139:11",
															"nodeType": "YulAssignment",
															"src": "27865:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "27999:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "27999:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "27873:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "27873:124:11"
																},
																"nativeSrc": "27873:131:11",
																"nodeType": "YulFunctionCall",
																"src": "27873:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27865:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "27865:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "27592:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27743:9:11",
														"nodeType": "YulTypedName",
														"src": "27743:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "27758:4:11",
														"nodeType": "YulTypedName",
														"src": "27758:4:11",
														"type": ""
													}
												],
												"src": "27592:419:11"
											},
											{
												"body": {
													"nativeSrc": "28076:40:11",
													"nodeType": "YulBlock",
													"src": "28076:40:11",
													"statements": [
														{
															"nativeSrc": "28087:22:11",
															"nodeType": "YulAssignment",
															"src": "28087:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "28103:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "28103:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "28097:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "28097:5:11"
																},
																"nativeSrc": "28097:12:11",
																"nodeType": "YulFunctionCall",
																"src": "28097:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "28087:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "28087:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "28017:99:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "28059:5:11",
														"nodeType": "YulTypedName",
														"src": "28059:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "28069:6:11",
														"nodeType": "YulTypedName",
														"src": "28069:6:11",
														"type": ""
													}
												],
												"src": "28017:99:11"
											},
											{
												"body": {
													"nativeSrc": "28170:54:11",
													"nodeType": "YulBlock",
													"src": "28170:54:11",
													"statements": [
														{
															"nativeSrc": "28180:38:11",
															"nodeType": "YulAssignment",
															"src": "28180:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "28198:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "28198:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28205:2:11",
																				"nodeType": "YulLiteral",
																				"src": "28205:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28194:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "28194:3:11"
																		},
																		"nativeSrc": "28194:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "28194:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "28214:2:11",
																				"nodeType": "YulLiteral",
																				"src": "28214:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "28210:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "28210:3:11"
																		},
																		"nativeSrc": "28210:7:11",
																		"nodeType": "YulFunctionCall",
																		"src": "28210:7:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "28190:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "28190:3:11"
																},
																"nativeSrc": "28190:28:11",
																"nodeType": "YulFunctionCall",
																"src": "28190:28:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "28180:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "28180:6:11"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "28122:102:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "28153:5:11",
														"nodeType": "YulTypedName",
														"src": "28153:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "28163:6:11",
														"nodeType": "YulTypedName",
														"src": "28163:6:11",
														"type": ""
													}
												],
												"src": "28122:102:11"
											},
											{
												"body": {
													"nativeSrc": "28322:285:11",
													"nodeType": "YulBlock",
													"src": "28322:285:11",
													"statements": [
														{
															"nativeSrc": "28332:53:11",
															"nodeType": "YulVariableDeclaration",
															"src": "28332:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "28379:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "28379:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "28346:32:11",
																	"nodeType": "YulIdentifier",
																	"src": "28346:32:11"
																},
																"nativeSrc": "28346:39:11",
																"nodeType": "YulFunctionCall",
																"src": "28346:39:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "28336:6:11",
																	"nodeType": "YulTypedName",
																	"src": "28336:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "28394:78:11",
															"nodeType": "YulAssignment",
															"src": "28394:78:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28460:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "28460:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "28465:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "28465:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "28401:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "28401:58:11"
																},
																"nativeSrc": "28401:71:11",
																"nodeType": "YulFunctionCall",
																"src": "28401:71:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "28394:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "28394:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "28520:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "28520:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28527:4:11",
																				"nodeType": "YulLiteral",
																				"src": "28527:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28516:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "28516:3:11"
																		},
																		"nativeSrc": "28516:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "28516:16:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "28534:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "28534:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "28539:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "28539:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "28481:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "28481:34:11"
																},
																"nativeSrc": "28481:65:11",
																"nodeType": "YulFunctionCall",
																"src": "28481:65:11"
															},
															"nativeSrc": "28481:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "28481:65:11"
														},
														{
															"nativeSrc": "28555:46:11",
															"nodeType": "YulAssignment",
															"src": "28555:46:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28566:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "28566:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "28593:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "28593:6:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "28571:21:11",
																			"nodeType": "YulIdentifier",
																			"src": "28571:21:11"
																		},
																		"nativeSrc": "28571:29:11",
																		"nodeType": "YulFunctionCall",
																		"src": "28571:29:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28562:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "28562:3:11"
																},
																"nativeSrc": "28562:39:11",
																"nodeType": "YulFunctionCall",
																"src": "28562:39:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "28555:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "28555:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "28230:377:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "28303:5:11",
														"nodeType": "YulTypedName",
														"src": "28303:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "28310:3:11",
														"nodeType": "YulTypedName",
														"src": "28310:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "28318:3:11",
														"nodeType": "YulTypedName",
														"src": "28318:3:11",
														"type": ""
													}
												],
												"src": "28230:377:11"
											},
											{
												"body": {
													"nativeSrc": "28731:195:11",
													"nodeType": "YulBlock",
													"src": "28731:195:11",
													"statements": [
														{
															"nativeSrc": "28741:26:11",
															"nodeType": "YulAssignment",
															"src": "28741:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "28753:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "28753:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28764:2:11",
																		"nodeType": "YulLiteral",
																		"src": "28764:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28749:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "28749:3:11"
																},
																"nativeSrc": "28749:18:11",
																"nodeType": "YulFunctionCall",
																"src": "28749:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28741:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "28741:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28788:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "28788:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28799:1:11",
																				"nodeType": "YulLiteral",
																				"src": "28799:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28784:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "28784:3:11"
																		},
																		"nativeSrc": "28784:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "28784:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "28807:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "28807:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "28813:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "28813:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "28803:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "28803:3:11"
																		},
																		"nativeSrc": "28803:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "28803:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28777:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "28777:6:11"
																},
																"nativeSrc": "28777:47:11",
																"nodeType": "YulFunctionCall",
																"src": "28777:47:11"
															},
															"nativeSrc": "28777:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "28777:47:11"
														},
														{
															"nativeSrc": "28833:86:11",
															"nodeType": "YulAssignment",
															"src": "28833:86:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "28905:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "28905:6:11"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "28914:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "28914:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "28841:63:11",
																	"nodeType": "YulIdentifier",
																	"src": "28841:63:11"
																},
																"nativeSrc": "28841:78:11",
																"nodeType": "YulFunctionCall",
																"src": "28841:78:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28833:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "28833:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "28613:313:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "28703:9:11",
														"nodeType": "YulTypedName",
														"src": "28703:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "28715:6:11",
														"nodeType": "YulTypedName",
														"src": "28715:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "28726:4:11",
														"nodeType": "YulTypedName",
														"src": "28726:4:11",
														"type": ""
													}
												],
												"src": "28613:313:11"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20Upgradeable_$611_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20Upgradeable_$611_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20Upgradeable_$611_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20Upgradeable_$611_t_contract$_IERC20Upgradeable_$611_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_contract$_IERC20Upgradeable_$611_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_contract$_IERC20Upgradeable_$611_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_contract$_IERC20Upgradeable_$611(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20Upgradeable_$611(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20Upgradeable_$611(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20Upgradeable_$611(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20Upgradeable_$611(value)\n    }\n\n    function cleanup_t_contract$_IERC721Upgradeable_$1139(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC721Upgradeable_$1139(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC721Upgradeable_$1139(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC721Upgradeable_$1139(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC721Upgradeable_$1139(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20Upgradeable_$611t_contract$_IERC721Upgradeable_$1139t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7 {\n        if slt(sub(dataEnd, headStart), 256) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20Upgradeable_$611(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC721Upgradeable_$1139(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 224\n\n            value7 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20Upgradeable_$611t_contract$_IERC20Upgradeable_$611t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20Upgradeable_$611(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC20Upgradeable_$611(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_contract$_IERC721Upgradeable_$1139_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC721Upgradeable_$1139_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721Upgradeable_$1139_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC721Upgradeable_$1139__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC721Upgradeable_$1139_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20Upgradeable_$611__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20Upgradeable_$611_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_e731ba893c68928f02781756791066f23259e50b4884778db05599c2eb032f36(memPtr) {\n\n        mstore(add(memPtr, 0), \"No staked amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_e731ba893c68928f02781756791066f23259e50b4884778db05599c2eb032f36_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_e731ba893c68928f02781756791066f23259e50b4884778db05599c2eb032f36(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e731ba893c68928f02781756791066f23259e50b4884778db05599c2eb032f36__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e731ba893c68928f02781756791066f23259e50b4884778db05599c2eb032f36_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract is paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot stake 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient staked amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_70a4a744132fc9399c082f0c459154fe3f5ba22b57af6b69242ec317d0c935a9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Stake is still locked\")\n\n    }\n\n    function abi_encode_t_stringliteral_70a4a744132fc9399c082f0c459154fe3f5ba22b57af6b69242ec317d0c935a9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_70a4a744132fc9399c082f0c459154fe3f5ba22b57af6b69242ec317d0c935a9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_70a4a744132fc9399c082f0c459154fe3f5ba22b57af6b69242ec317d0c935a9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_70a4a744132fc9399c082f0c459154fe3f5ba22b57af6b69242ec317d0c935a9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6e5308c76c16e443e61e6f371a85ac036d94edcc9d74e3b3746b595a2d6481ab(memPtr) {\n\n        mstore(add(memPtr, 0), \"Referrer already set\")\n\n    }\n\n    function abi_encode_t_stringliteral_6e5308c76c16e443e61e6f371a85ac036d94edcc9d74e3b3746b595a2d6481ab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_6e5308c76c16e443e61e6f371a85ac036d94edcc9d74e3b3746b595a2d6481ab(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6e5308c76c16e443e61e6f371a85ac036d94edcc9d74e3b3746b595a2d6481ab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6e5308c76c16e443e61e6f371a85ac036d94edcc9d74e3b3746b595a2d6481ab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot refer yourself\")\n\n    }\n\n    function abi_encode_t_stringliteral_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106101cd575f3560e01c80638456cb5911610102578063c20632ba116100a0578063dfaae4121161006f578063dfaae412146104bf578063e0283faf146104db578063f2fde38b146104f9578063f96dae0a14610515576101cd565b8063c20632ba14610449578063ce7842f514610465578063ce98f04914610483578063d06fcba8146104a1576101cd565b80639e2c8a5b116100dc5780639e2c8a5b146103d7578063a18a7bfc146103f3578063ae169a501461040f578063afbf34401461042b576101cd565b80638456cb59146103935780638ba796af1461039d5780638da5cb5b146103b9576101cd565b80633f4ba83a1161016f57806353aaa63b1161014957806353aaa63b1461031f5780635c975abb1461034f578063715018a61461036d5780637b0472f014610377576101cd565b80633f4ba83a146102c95780634a3b68cc146102d35780635312ea8e14610303576101cd565b80631526fe27116101ab5780631526fe27146102295780633462e0a81461025f578063381e75eb1461027b5780633b1e3eb8146102ad576101cd565b80630187aea0146101d1578063085cde2d146101ef578063126796dd1461020d575b5f80fd5b6101d9610533565b6040516101e69190611ff1565b60405180910390f35b6101f7610539565b6040516102049190611ff1565b60405180910390f35b61022760048036038101906102229190612038565b61053f565b005b610243600480360381019061023e9190612076565b610573565b604051610256979695949392919061211b565b60405180910390f35b61027960048036038101906102749190612038565b6105fe565b005b610295600480360381019061029091906121c3565b610632565b6040516102a493929190612201565b60405180910390f35b6102c760048036038101906102c29190612076565b610663565b005b6102d1610675565b005b6102ed60048036038101906102e89190612236565b610698565b6040516102fa9190612270565b60405180910390f35b61031d60048036038101906103189190612076565b6106c8565b005b61033960048036038101906103349190612236565b610863565b6040516103469190611ff1565b60405180910390f35b610357610878565b60405161036491906122a3565b60405180910390f35b61037561088a565b005b610391600480360381019061038c9190612038565b61089d565b005b61039b610ab8565b005b6103b760048036038101906103b29190612332565b610adc565b005b6103c1610d17565b6040516103ce9190612270565b60405180910390f35b6103f160048036038101906103ec9190612038565b610d4c565b005b61040d60048036038101906104089190612236565b610f43565b005b61042960048036038101906104249190612076565b6111fd565b005b610433611387565b6040516104409190611ff1565b60405180910390f35b610463600480360381019061045e91906123e3565b61138d565b005b61046d61152f565b60405161047a9190611ff1565b60405180910390f35b61048b611535565b6040516104989190611ff1565b60405180910390f35b6104a961153b565b6040516104b69190612467565b60405180910390f35b6104d960048036038101906104d49190612480565b611561565b005b6104e36115b9565b6040516104f09190611ff1565b60405180910390f35b610513600480360381019061050e9190612236565b6115bf565b005b61051d611643565b60405161052a91906124be565b60405180910390f35b60375481565b60385481565b610547611668565b806032838154811061055c5761055b6124d7565b5b905f5260205f209060070201600301819055505050565b60328181548110610582575f80fd5b905f5260205f2090600702015f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040154908060050154908060060154905087565b610606611668565b806032838154811061061b5761061a6124d7565b5b905f5260205f209060070201600201819055505050565b6033602052815f5260405f20602052805f5260405f205f9150915050805f0154908060010154908060020154905083565b61066b611668565b8060398190555050565b61067d611668565b5f603c5f6101000a81548160ff021916908315150217905550565b6034602052805f5260405f205f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106d06116ef565b5f603282815481106106e5576106e46124d7565b5b905f5260205f20906007020190505f60335f8481526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f815f015411610787576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077e9061255e565b60405180910390fd5b5f815f015490505f825f01819055505f826001018190555080836004015f8282546107b291906125a9565b925050819055506108063382855f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661173c9092919063ffffffff16565b833373ffffffffffffffffffffffffffffffffffffffff167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05958360405161084d9190611ff1565b60405180910390a35050506108606117c2565b50565b6035602052805f5260405f205f915090505481565b603c5f9054906101000a900460ff1681565b610892611668565b61089b5f6117cb565b565b6108a56116ef565b603c5f9054906101000a900460ff16156108f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108eb90612626565b60405180910390fd5b5f8111610936576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092d9061268e565b60405180910390fd5b5f6032838154811061094b5761094a6124d7565b5b905f5260205f20906007020190505f60335f8581526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090506109b18461189c565b6109bb843361193a565b610a0a333085855f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611b2a909392919063ffffffff16565b82815f015f828254610a1c91906126ac565b92505081905550816003015442610a3391906126ac565b816002018190555082826004015f828254610a4e91906126ac565b92505081905550833373ffffffffffffffffffffffffffffffffffffffff167fb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed858460020154604051610aa29291906126df565b60405180910390a35050610ab46117c2565b5050565b610ac0611668565b6001603c5f6101000a81548160ff021916908315150217905550565b5f610ae5611bb3565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff16148015610b2d5750825b90505f60018367ffffffffffffffff16148015610b6057505f3073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610b6e575080155b15610ba5576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610bf2576001855f0160086101000a81548160ff0219169083151502179055505b610bfb33611bda565b610c03611bee565b8c603d5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508b603c60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508a60368190555089603781905550886038819055508760398190555086603a8190555085603b819055508315610d08575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610cff9190612752565b60405180910390a15b50505050505050505050505050565b5f80610d21611c00565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b610d546116ef565b5f60328381548110610d6957610d686124d7565b5b905f5260205f20906007020190505f60335f8581526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905082815f01541015610e0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e03906127b5565b60405180910390fd5b8060020154421015610e53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4a9061281d565b60405180910390fd5b610e5c8461189c565b610e66843361193a565b82815f015f828254610e7891906125a9565b9250508190555082826004015f828254610e9291906125a9565b92505081905550610ee63384845f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661173c9092919063ffffffff16565b833373ffffffffffffffffffffffffffffffffffffffff167f7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e85604051610f2d9190611ff1565b60405180910390a35050610f3f6117c2565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff1660345f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461100d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100490612885565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361107b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611072906128ed565b60405180910390fd5b8060345f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603a5460355f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461114491906126ac565b92505081905550603b5460355f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461119991906126ac565b925050819055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f5f7165288eef601591cf549e15ff19ef9060b7f71b9c115be946fa1fe7ebf68a60405160405180910390a350565b6112056116ef565b61120e8161189c565b611218813361193a565b5f60335f8381526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015490505f60335f8481526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001018190555061132c3382603285815481106112d8576112d76124d7565b5b905f5260205f2090600702016001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661173c9092919063ffffffff16565b813373ffffffffffffffffffffffffffffffffffffffff167fd6f2c8500df5b44f11e9e48b91ff9f1b9d81bc496d55570c2b1b75bf65243f51836040516113739190611ff1565b60405180910390a3506113846117c2565b50565b60365481565b611395611668565b60326040518060e001604052808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020015f81526020015f815260200142815250908060018154018082558091505060019003905f5260205f2090600702015f909190919091505f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060155505060016032805490506114ec91906125a9565b7fe1111ad6e2ccaf57d3d9aa458493b64bcf6a66c2028304b95772fe72e1fc361285858585604051611521949392919061290b565b60405180910390a250505050565b603a5481565b603b5481565b603c60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611569611668565b6115b58282603d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661173c9092919063ffffffff16565b5050565b60395481565b6115c7611668565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611637575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161162e9190612270565b60405180910390fd5b611640816117cb565b50565b603d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611670611c27565b73ffffffffffffffffffffffffffffffffffffffff1661168e610d17565b73ffffffffffffffffffffffffffffffffffffffff16146116ed576116b1611c27565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016116e49190612270565b60405180910390fd5b565b60025f5403611733576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161172a90612998565b60405180910390fd5b60025f81905550565b6117bd8363a9059cbb60e01b848460405160240161175b9291906129b6565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611c2e565b505050565b60015f81905550565b5f6117d4611c00565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f603282815481106118b1576118b06124d7565b5b905f5260205f20906007020190505f8160040154111561192d575f8160060154426118dc91906125a9565b90505f8260020154826118ef91906129dd565b9050826004015464e8d4a510008261190791906129dd565b6119119190612a4b565b836005015f82825461192391906126ac565b9250508190555050505b4281600601819055505050565b5f6032838154811061194f5761194e6124d7565b5b905f5260205f20906007020190505f60335f8581526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f815f01541115611b24575f816001015464e8d4a510008460050154845f01546119d691906129dd565b6119e09190612a4b565b6119ea91906125a9565b90505f83600301548360020154611a0191906125a9565b42611a0c91906125a9565b90505f611a1882611cf4565b905060365481603654611a2b91906126ac565b84611a3691906129dd565b611a409190612a4b565b92508284600101819055505f603c60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231886040518263ffffffff1660e01b8152600401611aa79190612270565b602060405180830381865afa158015611ac2573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611ae69190612a8f565b1115611b2057606460395484611afc91906129dd565b611b069190612a4b565b846001015f828254611b1891906126ac565b925050819055505b5050505b50505050565b611bad846323b872dd60e01b858585604051602401611b4b93929190612aba565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611c2e565b50505050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b611be2611d21565b611beb81611d61565b50565b611bf6611d21565b611bfe611de5565b565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f33905090565b5f611c8f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611df69092919063ffffffff16565b90505f81511480611cb0575080806020019051810190611caf9190612b19565b5b611cef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ce690612bb4565b60405180910390fd5b505050565b5f8060385483611d049190612a4b565b90506037548111611d155780611d19565b6037545b915050919050565b611d29611e0d565b611d5f576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611d69611d21565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611dd9575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611dd09190612270565b60405180910390fd5b611de2816117cb565b50565b611ded611d21565b60015f81905550565b6060611e0484845f85611e2b565b90509392505050565b5f611e16611bb3565b5f0160089054906101000a900460ff16905090565b606082471015611e70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e6790612c42565b60405180910390fd5b5f808673ffffffffffffffffffffffffffffffffffffffff168587604051611e989190612cb2565b5f6040518083038185875af1925050503d805f8114611ed2576040519150601f19603f3d011682016040523d82523d5f602084013e611ed7565b606091505b5091509150611ee887838387611ef4565b92505050949350505050565b60608315611f55575f835103611f4d57611f0d85611f68565b611f4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f4390612d12565b60405180910390fd5b5b829050611f60565b611f5f8383611f8a565b5b949350505050565b5f808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b5f82511115611f9c5781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fd09190612d82565b60405180910390fd5b5f819050919050565b611feb81611fd9565b82525050565b5f6020820190506120045f830184611fe2565b92915050565b5f80fd5b61201781611fd9565b8114612021575f80fd5b50565b5f813590506120328161200e565b92915050565b5f806040838503121561204e5761204d61200a565b5b5f61205b85828601612024565b925050602061206c85828601612024565b9150509250929050565b5f6020828403121561208b5761208a61200a565b5b5f61209884828501612024565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f6120e36120de6120d9846120a1565b6120c0565b6120a1565b9050919050565b5f6120f4826120c9565b9050919050565b5f612105826120ea565b9050919050565b612115816120fb565b82525050565b5f60e08201905061212e5f83018a61210c565b61213b602083018961210c565b6121486040830188611fe2565b6121556060830187611fe2565b6121626080830186611fe2565b61216f60a0830185611fe2565b61217c60c0830184611fe2565b98975050505050505050565b5f612192826120a1565b9050919050565b6121a281612188565b81146121ac575f80fd5b50565b5f813590506121bd81612199565b92915050565b5f80604083850312156121d9576121d861200a565b5b5f6121e685828601612024565b92505060206121f7858286016121af565b9150509250929050565b5f6060820190506122145f830186611fe2565b6122216020830185611fe2565b61222e6040830184611fe2565b949350505050565b5f6020828403121561224b5761224a61200a565b5b5f612258848285016121af565b91505092915050565b61226a81612188565b82525050565b5f6020820190506122835f830184612261565b92915050565b5f8115159050919050565b61229d81612289565b82525050565b5f6020820190506122b65f830184612294565b92915050565b5f6122c682612188565b9050919050565b6122d6816122bc565b81146122e0575f80fd5b50565b5f813590506122f1816122cd565b92915050565b5f61230182612188565b9050919050565b612311816122f7565b811461231b575f80fd5b50565b5f8135905061232c81612308565b92915050565b5f805f805f805f80610100898b03121561234f5761234e61200a565b5b5f61235c8b828c016122e3565b985050602061236d8b828c0161231e565b975050604061237e8b828c01612024565b965050606061238f8b828c01612024565b95505060806123a08b828c01612024565b94505060a06123b18b828c01612024565b93505060c06123c28b828c01612024565b92505060e06123d38b828c01612024565b9150509295985092959890939650565b5f805f80608085870312156123fb576123fa61200a565b5b5f612408878288016122e3565b9450506020612419878288016122e3565b935050604061242a87828801612024565b925050606061243b87828801612024565b91505092959194509250565b5f612451826120ea565b9050919050565b61246181612447565b82525050565b5f60208201905061247a5f830184612458565b92915050565b5f80604083850312156124965761249561200a565b5b5f6124a3858286016121af565b92505060206124b485828601612024565b9150509250929050565b5f6020820190506124d15f83018461210c565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82825260208201905092915050565b7f4e6f207374616b656420616d6f756e74000000000000000000000000000000005f82015250565b5f612548601083612504565b915061255382612514565b602082019050919050565b5f6020820190508181035f8301526125758161253c565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6125b382611fd9565b91506125be83611fd9565b92508282039050818111156125d6576125d561257c565b5b92915050565b7f436f6e74726163742069732070617573656400000000000000000000000000005f82015250565b5f612610601283612504565b915061261b826125dc565b602082019050919050565b5f6020820190508181035f83015261263d81612604565b9050919050565b7f43616e6e6f74207374616b6520300000000000000000000000000000000000005f82015250565b5f612678600e83612504565b915061268382612644565b602082019050919050565b5f6020820190508181035f8301526126a58161266c565b9050919050565b5f6126b682611fd9565b91506126c183611fd9565b92508282019050808211156126d9576126d861257c565b5b92915050565b5f6040820190506126f25f830185611fe2565b6126ff6020830184611fe2565b9392505050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f61273c61273761273284612706565b6120c0565b61270f565b9050919050565b61274c81612722565b82525050565b5f6020820190506127655f830184612743565b92915050565b7f496e73756666696369656e74207374616b656420616d6f756e740000000000005f82015250565b5f61279f601a83612504565b91506127aa8261276b565b602082019050919050565b5f6020820190508181035f8301526127cc81612793565b9050919050565b7f5374616b65206973207374696c6c206c6f636b656400000000000000000000005f82015250565b5f612807601583612504565b9150612812826127d3565b602082019050919050565b5f6020820190508181035f830152612834816127fb565b9050919050565b7f526566657272657220616c7265616479207365740000000000000000000000005f82015250565b5f61286f601483612504565b915061287a8261283b565b602082019050919050565b5f6020820190508181035f83015261289c81612863565b9050919050565b7f43616e6e6f7420726566657220796f757273656c6600000000000000000000005f82015250565b5f6128d7601583612504565b91506128e2826128a3565b602082019050919050565b5f6020820190508181035f830152612904816128cb565b9050919050565b5f60808201905061291e5f830187612261565b61292b6020830186612261565b6129386040830185611fe2565b6129456060830184611fe2565b95945050505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612982601f83612504565b915061298d8261294e565b602082019050919050565b5f6020820190508181035f8301526129af81612976565b9050919050565b5f6040820190506129c95f830185612261565b6129d66020830184611fe2565b9392505050565b5f6129e782611fd9565b91506129f283611fd9565b9250828202612a0081611fd9565b91508282048414831517612a1757612a1661257c565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f612a5582611fd9565b9150612a6083611fd9565b925082612a7057612a6f612a1e565b5b828204905092915050565b5f81519050612a898161200e565b92915050565b5f60208284031215612aa457612aa361200a565b5b5f612ab184828501612a7b565b91505092915050565b5f606082019050612acd5f830186612261565b612ada6020830185612261565b612ae76040830184611fe2565b949350505050565b612af881612289565b8114612b02575f80fd5b50565b5f81519050612b1381612aef565b92915050565b5f60208284031215612b2e57612b2d61200a565b5b5f612b3b84828501612b05565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e5f8201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b5f612b9e602a83612504565b9150612ba982612b44565b604082019050919050565b5f6020820190508181035f830152612bcb81612b92565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f5f8201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b5f612c2c602683612504565b9150612c3782612bd2565b604082019050919050565b5f6020820190508181035f830152612c5981612c20565b9050919050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f612c8c82612c60565b612c968185612c6a565b9350612ca6818560208601612c74565b80840191505092915050565b5f612cbd8284612c82565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000005f82015250565b5f612cfc601d83612504565b9150612d0782612cc8565b602082019050919050565b5f6020820190508181035f830152612d2981612cf0565b9050919050565b5f81519050919050565b5f601f19601f8301169050919050565b5f612d5482612d30565b612d5e8185612504565b9350612d6e818560208601612c74565b612d7781612d3a565b840191505092915050565b5f6020820190508181035f830152612d9a8184612d4a565b90509291505056fea2646970667358221220f649a6dc36ebb7caee4da0b9e104c5c8b81a60080b765f6c4136a532bd3f7caf64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xC20632BA GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xDFAAE412 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDFAAE412 EQ PUSH2 0x4BF JUMPI DUP1 PUSH4 0xE0283FAF EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0xF96DAE0A EQ PUSH2 0x515 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0xC20632BA EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0xCE7842F5 EQ PUSH2 0x465 JUMPI DUP1 PUSH4 0xCE98F049 EQ PUSH2 0x483 JUMPI DUP1 PUSH4 0xD06FCBA8 EQ PUSH2 0x4A1 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x9E2C8A5B GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x9E2C8A5B EQ PUSH2 0x3D7 JUMPI DUP1 PUSH4 0xA18A7BFC EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0xAE169A50 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0xAFBF3440 EQ PUSH2 0x42B JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0x8BA796AF EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3B9 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x16F JUMPI DUP1 PUSH4 0x53AAA63B GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x53AAA63B EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x377 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x4A3B68CC EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x303 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x1526FE27 GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x3462E0A8 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x381E75EB EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x3B1E3EB8 EQ PUSH2 0x2AD JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x187AEA0 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x85CDE2D EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x126796DD EQ PUSH2 0x20D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1D9 PUSH2 0x533 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x1FF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH2 0x539 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x1FF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x2038 JUMP JUMPDEST PUSH2 0x53F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x2076 JUMP JUMPDEST PUSH2 0x573 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x211B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x279 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x2038 JUMP JUMPDEST PUSH2 0x5FE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x21C3 JUMP JUMPDEST PUSH2 0x632 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2201 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x2076 JUMP JUMPDEST PUSH2 0x663 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D1 PUSH2 0x675 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH2 0x698 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x2270 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x2076 JUMP JUMPDEST PUSH2 0x6C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x339 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x334 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH2 0x863 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x1FF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x357 PUSH2 0x878 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x22A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x375 PUSH2 0x88A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x391 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x2038 JUMP JUMPDEST PUSH2 0x89D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39B PUSH2 0xAB8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x2332 JUMP JUMPDEST PUSH2 0xADC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C1 PUSH2 0xD17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x2270 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EC SWAP2 SWAP1 PUSH2 0x2038 JUMP JUMPDEST PUSH2 0xD4C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x40D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x408 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH2 0xF43 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x429 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x424 SWAP2 SWAP1 PUSH2 0x2076 JUMP JUMPDEST PUSH2 0x11FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x433 PUSH2 0x1387 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x440 SWAP2 SWAP1 PUSH2 0x1FF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x463 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45E SWAP2 SWAP1 PUSH2 0x23E3 JUMP JUMPDEST PUSH2 0x138D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46D PUSH2 0x152F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47A SWAP2 SWAP1 PUSH2 0x1FF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48B PUSH2 0x1535 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x498 SWAP2 SWAP1 PUSH2 0x1FF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A9 PUSH2 0x153B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B6 SWAP2 SWAP1 PUSH2 0x2467 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D4 SWAP2 SWAP1 PUSH2 0x2480 JUMP JUMPDEST PUSH2 0x1561 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E3 PUSH2 0x15B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0x1FF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x513 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50E SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH2 0x15BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x51D PUSH2 0x1643 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52A SWAP2 SWAP1 PUSH2 0x24BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x37 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x38 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x547 PUSH2 0x1668 JUMP JUMPDEST DUP1 PUSH1 0x32 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x55C JUMPI PUSH2 0x55B PUSH2 0x24D7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x32 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x582 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST PUSH2 0x606 PUSH2 0x1668 JUMP JUMPDEST DUP1 PUSH1 0x32 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x61B JUMPI PUSH2 0x61A PUSH2 0x24D7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x33 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0x66B PUSH2 0x1668 JUMP JUMPDEST DUP1 PUSH1 0x39 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x67D PUSH2 0x1668 JUMP JUMPDEST PUSH0 PUSH1 0x3C PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x34 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x6D0 PUSH2 0x16EF JUMP JUMPDEST PUSH0 PUSH1 0x32 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x6E5 JUMPI PUSH2 0x6E4 PUSH2 0x24D7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP PUSH0 PUSH1 0x33 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD GT PUSH2 0x787 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77E SWAP1 PUSH2 0x255E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP PUSH0 DUP3 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH0 DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP1 DUP4 PUSH1 0x4 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7B2 SWAP2 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x806 CALLER DUP3 DUP6 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x173C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 DUP4 PUSH1 0x40 MLOAD PUSH2 0x84D SWAP2 SWAP1 PUSH2 0x1FF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP PUSH2 0x860 PUSH2 0x17C2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x35 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3C PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x892 PUSH2 0x1668 JUMP JUMPDEST PUSH2 0x89B PUSH0 PUSH2 0x17CB JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x8A5 PUSH2 0x16EF JUMP JUMPDEST PUSH1 0x3C PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8EB SWAP1 PUSH2 0x2626 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x936 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92D SWAP1 PUSH2 0x268E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x32 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x94B JUMPI PUSH2 0x94A PUSH2 0x24D7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP PUSH0 PUSH1 0x33 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0x9B1 DUP5 PUSH2 0x189C JUMP JUMPDEST PUSH2 0x9BB DUP5 CALLER PUSH2 0x193A JUMP JUMPDEST PUSH2 0xA0A CALLER ADDRESS DUP6 DUP6 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B2A SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA1C SWAP2 SWAP1 PUSH2 0x26AC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0xA33 SWAP2 SWAP1 PUSH2 0x26AC JUMP JUMPDEST DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP3 DUP3 PUSH1 0x4 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA4E SWAP2 SWAP1 PUSH2 0x26AC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED DUP6 DUP5 PUSH1 0x2 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xAA2 SWAP3 SWAP2 SWAP1 PUSH2 0x26DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH2 0xAB4 PUSH2 0x17C2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xAC0 PUSH2 0x1668 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3C PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xAE5 PUSH2 0x1BB3 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB2D JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB60 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xB6E JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xBA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xBF2 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xBFB CALLER PUSH2 0x1BDA JUMP JUMPDEST PUSH2 0xC03 PUSH2 0x1BEE JUMP JUMPDEST DUP13 PUSH1 0x3D PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP12 PUSH1 0x3C PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP11 PUSH1 0x36 DUP2 SWAP1 SSTORE POP DUP10 PUSH1 0x37 DUP2 SWAP1 SSTORE POP DUP9 PUSH1 0x38 DUP2 SWAP1 SSTORE POP DUP8 PUSH1 0x39 DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x3A DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x3B DUP2 SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xD08 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xCFF SWAP2 SWAP1 PUSH2 0x2752 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xD21 PUSH2 0x1C00 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xD54 PUSH2 0x16EF JUMP JUMPDEST PUSH0 PUSH1 0x32 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xD69 JUMPI PUSH2 0xD68 PUSH2 0x24D7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP PUSH0 PUSH1 0x33 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH0 ADD SLOAD LT ISZERO PUSH2 0xE0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE03 SWAP1 PUSH2 0x27B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0xE53 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE4A SWAP1 PUSH2 0x281D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE5C DUP5 PUSH2 0x189C JUMP JUMPDEST PUSH2 0xE66 DUP5 CALLER PUSH2 0x193A JUMP JUMPDEST DUP3 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE78 SWAP2 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 DUP3 PUSH1 0x4 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE92 SWAP2 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xEE6 CALLER DUP5 DUP5 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x173C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7FC4727E062E336010F2C282598EF5F14FACB3DE68CF8195C2F23E1454B2B74E DUP6 PUSH1 0x40 MLOAD PUSH2 0xF2D SWAP2 SWAP1 PUSH2 0x1FF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH2 0xF3F PUSH2 0x17C2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x34 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x100D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1004 SWAP1 PUSH2 0x2885 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x107B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1072 SWAP1 PUSH2 0x28ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x34 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3A SLOAD PUSH1 0x35 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1144 SWAP2 SWAP1 PUSH2 0x26AC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x3B SLOAD PUSH1 0x35 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1199 SWAP2 SWAP1 PUSH2 0x26AC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5F7165288EEF601591CF549E15FF19EF9060B7F71B9C115BE946FA1FE7EBF68A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x1205 PUSH2 0x16EF JUMP JUMPDEST PUSH2 0x120E DUP2 PUSH2 0x189C JUMP JUMPDEST PUSH2 0x1218 DUP2 CALLER PUSH2 0x193A JUMP JUMPDEST PUSH0 PUSH1 0x33 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH0 PUSH1 0x33 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x132C CALLER DUP3 PUSH1 0x32 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x12D8 JUMPI PUSH2 0x12D7 PUSH2 0x24D7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x173C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD6F2C8500DF5B44F11E9E48B91FF9F1B9D81BC496D55570C2B1B75BF65243F51 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1373 SWAP2 SWAP1 PUSH2 0x1FF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x1384 PUSH2 0x17C2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x36 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1395 PUSH2 0x1668 JUMP JUMPDEST PUSH1 0x32 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE POP POP PUSH1 0x1 PUSH1 0x32 DUP1 SLOAD SWAP1 POP PUSH2 0x14EC SWAP2 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST PUSH32 0xE1111AD6E2CCAF57D3D9AA458493B64BCF6A66C2028304B95772FE72E1FC3612 DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1521 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x290B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x3A SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3B SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3C PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1569 PUSH2 0x1668 JUMP JUMPDEST PUSH2 0x15B5 DUP3 DUP3 PUSH1 0x3D PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x173C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x39 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x15C7 PUSH2 0x1668 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1637 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x162E SWAP2 SWAP1 PUSH2 0x2270 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1640 DUP2 PUSH2 0x17CB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3D PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1670 PUSH2 0x1C27 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x168E PUSH2 0xD17 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16ED JUMPI PUSH2 0x16B1 PUSH2 0x1C27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16E4 SWAP2 SWAP1 PUSH2 0x2270 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x1733 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x172A SWAP1 PUSH2 0x2998 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x17BD DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x175B SWAP3 SWAP2 SWAP1 PUSH2 0x29B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1C2E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17D4 PUSH2 0x1C00 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x32 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x18B1 JUMPI PUSH2 0x18B0 PUSH2 0x24D7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP PUSH0 DUP2 PUSH1 0x4 ADD SLOAD GT ISZERO PUSH2 0x192D JUMPI PUSH0 DUP2 PUSH1 0x6 ADD SLOAD TIMESTAMP PUSH2 0x18DC SWAP2 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x2 ADD SLOAD DUP3 PUSH2 0x18EF SWAP2 SWAP1 PUSH2 0x29DD JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x4 ADD SLOAD PUSH5 0xE8D4A51000 DUP3 PUSH2 0x1907 SWAP2 SWAP1 PUSH2 0x29DD JUMP JUMPDEST PUSH2 0x1911 SWAP2 SWAP1 PUSH2 0x2A4B JUMP JUMPDEST DUP4 PUSH1 0x5 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1923 SWAP2 SWAP1 PUSH2 0x26AC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMPDEST TIMESTAMP DUP2 PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x32 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x194F JUMPI PUSH2 0x194E PUSH2 0x24D7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP PUSH0 PUSH1 0x33 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD GT ISZERO PUSH2 0x1B24 JUMPI PUSH0 DUP2 PUSH1 0x1 ADD SLOAD PUSH5 0xE8D4A51000 DUP5 PUSH1 0x5 ADD SLOAD DUP5 PUSH0 ADD SLOAD PUSH2 0x19D6 SWAP2 SWAP1 PUSH2 0x29DD JUMP JUMPDEST PUSH2 0x19E0 SWAP2 SWAP1 PUSH2 0x2A4B JUMP JUMPDEST PUSH2 0x19EA SWAP2 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH1 0x3 ADD SLOAD DUP4 PUSH1 0x2 ADD SLOAD PUSH2 0x1A01 SWAP2 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST TIMESTAMP PUSH2 0x1A0C SWAP2 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1A18 DUP3 PUSH2 0x1CF4 JUMP JUMPDEST SWAP1 POP PUSH1 0x36 SLOAD DUP2 PUSH1 0x36 SLOAD PUSH2 0x1A2B SWAP2 SWAP1 PUSH2 0x26AC JUMP JUMPDEST DUP5 PUSH2 0x1A36 SWAP2 SWAP1 PUSH2 0x29DD JUMP JUMPDEST PUSH2 0x1A40 SWAP2 SWAP1 PUSH2 0x2A4B JUMP JUMPDEST SWAP3 POP DUP3 DUP5 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x3C PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP9 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AA7 SWAP2 SWAP1 PUSH2 0x2270 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AC2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AE6 SWAP2 SWAP1 PUSH2 0x2A8F JUMP JUMPDEST GT ISZERO PUSH2 0x1B20 JUMPI PUSH1 0x64 PUSH1 0x39 SLOAD DUP5 PUSH2 0x1AFC SWAP2 SWAP1 PUSH2 0x29DD JUMP JUMPDEST PUSH2 0x1B06 SWAP2 SWAP1 PUSH2 0x2A4B JUMP JUMPDEST DUP5 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1B18 SWAP2 SWAP1 PUSH2 0x26AC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1BAD DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1B4B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2ABA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1C2E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1BE2 PUSH2 0x1D21 JUMP JUMPDEST PUSH2 0x1BEB DUP2 PUSH2 0x1D61 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1BF6 PUSH2 0x1D21 JUMP JUMPDEST PUSH2 0x1BFE PUSH2 0x1DE5 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x1C8F DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DF6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x1CB0 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1CAF SWAP2 SWAP1 PUSH2 0x2B19 JUMP JUMPDEST JUMPDEST PUSH2 0x1CEF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CE6 SWAP1 PUSH2 0x2BB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x38 SLOAD DUP4 PUSH2 0x1D04 SWAP2 SWAP1 PUSH2 0x2A4B JUMP JUMPDEST SWAP1 POP PUSH1 0x37 SLOAD DUP2 GT PUSH2 0x1D15 JUMPI DUP1 PUSH2 0x1D19 JUMP JUMPDEST PUSH1 0x37 SLOAD JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D29 PUSH2 0x1E0D JUMP JUMPDEST PUSH2 0x1D5F JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1D69 PUSH2 0x1D21 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1DD9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DD0 SWAP2 SWAP1 PUSH2 0x2270 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DE2 DUP2 PUSH2 0x17CB JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1DED PUSH2 0x1D21 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1E04 DUP5 DUP5 PUSH0 DUP6 PUSH2 0x1E2B JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E16 PUSH2 0x1BB3 JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1E70 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E67 SWAP1 PUSH2 0x2C42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1E98 SWAP2 SWAP1 PUSH2 0x2CB2 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1ED2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1ED7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1EE8 DUP8 DUP4 DUP4 DUP8 PUSH2 0x1EF4 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1F55 JUMPI PUSH0 DUP4 MLOAD SUB PUSH2 0x1F4D JUMPI PUSH2 0x1F0D DUP6 PUSH2 0x1F68 JUMP JUMPDEST PUSH2 0x1F4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F43 SWAP1 PUSH2 0x2D12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x1F60 JUMP JUMPDEST PUSH2 0x1F5F DUP4 DUP4 PUSH2 0x1F8A JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x1F9C JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FD0 SWAP2 SWAP1 PUSH2 0x2D82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FEB DUP2 PUSH2 0x1FD9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2004 PUSH0 DUP4 ADD DUP5 PUSH2 0x1FE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2017 DUP2 PUSH2 0x1FD9 JUMP JUMPDEST DUP2 EQ PUSH2 0x2021 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2032 DUP2 PUSH2 0x200E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x204E JUMPI PUSH2 0x204D PUSH2 0x200A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x205B DUP6 DUP3 DUP7 ADD PUSH2 0x2024 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x206C DUP6 DUP3 DUP7 ADD PUSH2 0x2024 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x208B JUMPI PUSH2 0x208A PUSH2 0x200A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2098 DUP5 DUP3 DUP6 ADD PUSH2 0x2024 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20E3 PUSH2 0x20DE PUSH2 0x20D9 DUP5 PUSH2 0x20A1 JUMP JUMPDEST PUSH2 0x20C0 JUMP JUMPDEST PUSH2 0x20A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20F4 DUP3 PUSH2 0x20C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2105 DUP3 PUSH2 0x20EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2115 DUP2 PUSH2 0x20FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x212E PUSH0 DUP4 ADD DUP11 PUSH2 0x210C JUMP JUMPDEST PUSH2 0x213B PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x210C JUMP JUMPDEST PUSH2 0x2148 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x1FE2 JUMP JUMPDEST PUSH2 0x2155 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1FE2 JUMP JUMPDEST PUSH2 0x2162 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1FE2 JUMP JUMPDEST PUSH2 0x216F PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1FE2 JUMP JUMPDEST PUSH2 0x217C PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x1FE2 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2192 DUP3 PUSH2 0x20A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21A2 DUP2 PUSH2 0x2188 JUMP JUMPDEST DUP2 EQ PUSH2 0x21AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21BD DUP2 PUSH2 0x2199 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21D9 JUMPI PUSH2 0x21D8 PUSH2 0x200A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21E6 DUP6 DUP3 DUP7 ADD PUSH2 0x2024 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21F7 DUP6 DUP3 DUP7 ADD PUSH2 0x21AF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2214 PUSH0 DUP4 ADD DUP7 PUSH2 0x1FE2 JUMP JUMPDEST PUSH2 0x2221 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1FE2 JUMP JUMPDEST PUSH2 0x222E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1FE2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x224B JUMPI PUSH2 0x224A PUSH2 0x200A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2258 DUP5 DUP3 DUP6 ADD PUSH2 0x21AF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x226A DUP2 PUSH2 0x2188 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2283 PUSH0 DUP4 ADD DUP5 PUSH2 0x2261 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x229D DUP2 PUSH2 0x2289 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22B6 PUSH0 DUP4 ADD DUP5 PUSH2 0x2294 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22C6 DUP3 PUSH2 0x2188 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22D6 DUP2 PUSH2 0x22BC JUMP JUMPDEST DUP2 EQ PUSH2 0x22E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22F1 DUP2 PUSH2 0x22CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2301 DUP3 PUSH2 0x2188 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2311 DUP2 PUSH2 0x22F7 JUMP JUMPDEST DUP2 EQ PUSH2 0x231B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x232C DUP2 PUSH2 0x2308 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x234F JUMPI PUSH2 0x234E PUSH2 0x200A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x235C DUP12 DUP3 DUP13 ADD PUSH2 0x22E3 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x236D DUP12 DUP3 DUP13 ADD PUSH2 0x231E JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x237E DUP12 DUP3 DUP13 ADD PUSH2 0x2024 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x238F DUP12 DUP3 DUP13 ADD PUSH2 0x2024 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH2 0x23A0 DUP12 DUP3 DUP13 ADD PUSH2 0x2024 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 PUSH2 0x23B1 DUP12 DUP3 DUP13 ADD PUSH2 0x2024 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 PUSH2 0x23C2 DUP12 DUP3 DUP13 ADD PUSH2 0x2024 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xE0 PUSH2 0x23D3 DUP12 DUP3 DUP13 ADD PUSH2 0x2024 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x23FB JUMPI PUSH2 0x23FA PUSH2 0x200A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2408 DUP8 DUP3 DUP9 ADD PUSH2 0x22E3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2419 DUP8 DUP3 DUP9 ADD PUSH2 0x22E3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x242A DUP8 DUP3 DUP9 ADD PUSH2 0x2024 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x243B DUP8 DUP3 DUP9 ADD PUSH2 0x2024 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH2 0x2451 DUP3 PUSH2 0x20EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2461 DUP2 PUSH2 0x2447 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x247A PUSH0 DUP4 ADD DUP5 PUSH2 0x2458 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2496 JUMPI PUSH2 0x2495 PUSH2 0x200A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24A3 DUP6 DUP3 DUP7 ADD PUSH2 0x21AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x24B4 DUP6 DUP3 DUP7 ADD PUSH2 0x2024 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24D1 PUSH0 DUP4 ADD DUP5 PUSH2 0x210C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F207374616B656420616D6F756E7400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2548 PUSH1 0x10 DUP4 PUSH2 0x2504 JUMP JUMPDEST SWAP2 POP PUSH2 0x2553 DUP3 PUSH2 0x2514 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2575 DUP2 PUSH2 0x253C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x25B3 DUP3 PUSH2 0x1FD9 JUMP JUMPDEST SWAP2 POP PUSH2 0x25BE DUP4 PUSH2 0x1FD9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x25D6 JUMPI PUSH2 0x25D5 PUSH2 0x257C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6E7472616374206973207061757365640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2610 PUSH1 0x12 DUP4 PUSH2 0x2504 JUMP JUMPDEST SWAP2 POP PUSH2 0x261B DUP3 PUSH2 0x25DC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x263D DUP2 PUSH2 0x2604 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2678 PUSH1 0xE DUP4 PUSH2 0x2504 JUMP JUMPDEST SWAP2 POP PUSH2 0x2683 DUP3 PUSH2 0x2644 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26A5 DUP2 PUSH2 0x266C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x26B6 DUP3 PUSH2 0x1FD9 JUMP JUMPDEST SWAP2 POP PUSH2 0x26C1 DUP4 PUSH2 0x1FD9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x26D9 JUMPI PUSH2 0x26D8 PUSH2 0x257C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x26F2 PUSH0 DUP4 ADD DUP6 PUSH2 0x1FE2 JUMP JUMPDEST PUSH2 0x26FF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1FE2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x273C PUSH2 0x2737 PUSH2 0x2732 DUP5 PUSH2 0x2706 JUMP JUMPDEST PUSH2 0x20C0 JUMP JUMPDEST PUSH2 0x270F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x274C DUP2 PUSH2 0x2722 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2765 PUSH0 DUP4 ADD DUP5 PUSH2 0x2743 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74207374616B656420616D6F756E74000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x279F PUSH1 0x1A DUP4 PUSH2 0x2504 JUMP JUMPDEST SWAP2 POP PUSH2 0x27AA DUP3 PUSH2 0x276B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x27CC DUP2 PUSH2 0x2793 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B65206973207374696C6C206C6F636B65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2807 PUSH1 0x15 DUP4 PUSH2 0x2504 JUMP JUMPDEST SWAP2 POP PUSH2 0x2812 DUP3 PUSH2 0x27D3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2834 DUP2 PUSH2 0x27FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526566657272657220616C726561647920736574000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x286F PUSH1 0x14 DUP4 PUSH2 0x2504 JUMP JUMPDEST SWAP2 POP PUSH2 0x287A DUP3 PUSH2 0x283B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x289C DUP2 PUSH2 0x2863 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420726566657220796F757273656C660000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x28D7 PUSH1 0x15 DUP4 PUSH2 0x2504 JUMP JUMPDEST SWAP2 POP PUSH2 0x28E2 DUP3 PUSH2 0x28A3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2904 DUP2 PUSH2 0x28CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x291E PUSH0 DUP4 ADD DUP8 PUSH2 0x2261 JUMP JUMPDEST PUSH2 0x292B PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2261 JUMP JUMPDEST PUSH2 0x2938 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1FE2 JUMP JUMPDEST PUSH2 0x2945 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1FE2 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2982 PUSH1 0x1F DUP4 PUSH2 0x2504 JUMP JUMPDEST SWAP2 POP PUSH2 0x298D DUP3 PUSH2 0x294E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29AF DUP2 PUSH2 0x2976 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x29C9 PUSH0 DUP4 ADD DUP6 PUSH2 0x2261 JUMP JUMPDEST PUSH2 0x29D6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1FE2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x29E7 DUP3 PUSH2 0x1FD9 JUMP JUMPDEST SWAP2 POP PUSH2 0x29F2 DUP4 PUSH2 0x1FD9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2A00 DUP2 PUSH2 0x1FD9 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2A17 JUMPI PUSH2 0x2A16 PUSH2 0x257C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2A55 DUP3 PUSH2 0x1FD9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A60 DUP4 PUSH2 0x1FD9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2A70 JUMPI PUSH2 0x2A6F PUSH2 0x2A1E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2A89 DUP2 PUSH2 0x200E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AA4 JUMPI PUSH2 0x2AA3 PUSH2 0x200A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2AB1 DUP5 DUP3 DUP6 ADD PUSH2 0x2A7B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2ACD PUSH0 DUP4 ADD DUP7 PUSH2 0x2261 JUMP JUMPDEST PUSH2 0x2ADA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2261 JUMP JUMPDEST PUSH2 0x2AE7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1FE2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2AF8 DUP2 PUSH2 0x2289 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B02 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B13 DUP2 PUSH2 0x2AEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B2E JUMPI PUSH2 0x2B2D PUSH2 0x200A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B3B DUP5 DUP3 DUP6 ADD PUSH2 0x2B05 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B9E PUSH1 0x2A DUP4 PUSH2 0x2504 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BA9 DUP3 PUSH2 0x2B44 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2BCB DUP2 PUSH2 0x2B92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C2C PUSH1 0x26 DUP4 PUSH2 0x2504 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C37 DUP3 PUSH2 0x2BD2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C59 DUP2 PUSH2 0x2C20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2C8C DUP3 PUSH2 0x2C60 JUMP JUMPDEST PUSH2 0x2C96 DUP2 DUP6 PUSH2 0x2C6A JUMP JUMPDEST SWAP4 POP PUSH2 0x2CA6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2C74 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2CBD DUP3 DUP5 PUSH2 0x2C82 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2CFC PUSH1 0x1D DUP4 PUSH2 0x2504 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D07 DUP3 PUSH2 0x2CC8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D29 DUP2 PUSH2 0x2CF0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2D54 DUP3 PUSH2 0x2D30 JUMP JUMPDEST PUSH2 0x2D5E DUP2 DUP6 PUSH2 0x2504 JUMP JUMPDEST SWAP4 POP PUSH2 0x2D6E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2C74 JUMP JUMPDEST PUSH2 0x2D77 DUP2 PUSH2 0x2D3A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D9A DUP2 DUP5 PUSH2 0x2D4A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 BLOBHASH 0xA6 0xDC CALLDATASIZE 0xEB 0xB7 0xCA 0xEE 0x4D LOG0 0xB9 0xE1 DIV 0xC5 0xC8 0xB8 BYTE PUSH1 0x8 SIGNEXTEND PUSH23 0x5F6C4136A532BD3F7CAF64736F6C634300081A00330000 ",
							"sourceMap": "739:11718:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2302:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2374:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9557:141;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1813:26;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;9255:133;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1885:67;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;9822:112;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10490:69;;;:::i;:::-;;2011:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8066:509;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2117:50;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2668:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3155:101:0;;;:::i;:::-;;6046:616:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10349:66;;;:::i;:::-;;4231:724;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2441:144:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6826:609:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8693:399;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7554:374;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2228:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5268:620;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2531:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2602:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2760:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10128:148;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2462:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3405:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2834:40:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2302:28;;;;:::o;2374:33::-;;;;:::o;9557:141::-;2334:13:0;:11;:13::i;:::-;9678::10::1;9648:8;9657:4;9648:14;;;;;;;;:::i;:::-;;;;;;;;;;;;:27;;:43;;;;9557:141:::0;;:::o;1813:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9255:133::-;2334:13:0;:11;:13::i;:::-;9370:11:10::1;9342:8;9351:4;9342:14;;;;;;;;:::i;:::-;;;;;;;;;;;;:25;;:39;;;;9255:133:::0;;:::o;1885:67::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9822:112::-;2334:13:0;:11;:13::i;:::-;9914::10::1;9899:12;:28;;;;9822:112:::0;:::o;10490:69::-;2334:13:0;:11;:13::i;:::-;10547:5:10::1;10538:6;;:14;;;;;;;;;;;;;;;;;;10490:69::o:0;2011:44::-;;;;;;;;;;;;;;;;;;;;;;:::o;8066:509::-;2526:21:2;:19;:21::i;:::-;8139::10::1;8163:8;8172:4;8163:14;;;;;;;;:::i;:::-;;;;;;;;;;;;8139:38;;8187:27;8217:10;:16;8228:4;8217:16;;;;;;;;;;;:28;8234:10;8217:28;;;;;;;;;;;;;;;8187:58;;8282:1;8263:9;:16;;;:20;8255:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;8315:14;8332:9;:16;;;8315:33;;8377:1;8358:9;:16;;:20;;;;8411:1;8388:9;:20;;:24;;;;8443:6;8423:4;:16;;;:26;;;;;;;:::i;:::-;;;;;;;;8459:50;8490:10;8502:6;8459:4;:17;;;;;;;;;;;;:30;;;;:50;;;;;:::i;:::-;8555:4;8543:10;8525:43;;;8561:6;8525:43;;;;;;:::i;:::-;;;;;;;;8129:446;;;2568:20:2::0;:18;:20::i;:::-;8066:509:10;:::o;2117:50::-;;;;;;;;;;;;;;;;;:::o;2668:18::-;;;;;;;;;;;;;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;6046:616:10:-;2526:21:2;:19;:21::i;:::-;3603:6:10::1;;;;;;;;;;;3602:7;3594:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;6156:1:::2;6146:7;:11;6138:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;6187:21;6211:8;6220:4;6211:14;;;;;;;;:::i;:::-;;;;;;;;;;;;6187:38;;6235:27;6265:10;:16;6276:4;6265:16;;;;;;;;;;;:28;6282:10;6265:28;;;;;;;;;;;;;;;6235:58;;6303:17;6315:4;6303:11;:17::i;:::-;6330:32;6345:4;6351:10;6330:14;:32::i;:::-;6373:70;6408:10;6428:4;6435:7;6373:4;:17;;;;;;;;;;;;:34;;;;:70;;;;;;:::i;:::-;6474:7;6454:9;:16;;;:27;;;;;;;:::i;:::-;;;;;;;;6531:4;:17;;;6513:15;:35;;;;:::i;:::-;6491:9;:19;;:57;;;;6578:7;6558:4;:16;;;:27;;;;;;;:::i;:::-;;;;;;;;6620:4;6608:10;6601:54;;;6626:7;6635:9;:19;;;6601:54;;;;;;;:::i;:::-;;;;;;;;6128:534;;2568:20:2::0;:18;:20::i;:::-;6046:616:10;;:::o;10349:66::-;2334:13:0;:11;:13::i;:::-;10404:4:10::1;10395:6;;:13;;;;;;;;;;;;;;;;;;10349:66::o:0;4231:724::-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;4566:26:10::1;4581:10;4566:14;:26::i;:::-;4602:24;:22;:24::i;:::-;4654:16;4636:15;;:34;;;;;;;;;;;;;;;;;;4691:9;4680:8;;:20;;;;;;;;;;;;;;;;;;4727:15;4710:14;:32;;;;4768:14;4752:13;:30;;;;4813:19;4792:18;:40;;;;4857:13;4842:12;:28;;;;4896:14;4880:13;:30;;;;4935:13;4920:12;:28;;;;5070:14:1::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;4231:724:10;;;;;;;;:::o;2441:144:0:-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;6826:609:10:-;2526:21:2;:19;:21::i;:::-;6906::10::1;6930:8;6939:4;6930:14;;;;;;;;:::i;:::-;;;;;;;;;;;;6906:38;;6954:27;6984:10;:16;6995:4;6984:16;;;;;;;;;;;:28;7001:10;6984:28;;;;;;;;;;;;;;;6954:58;;7050:7;7030:9;:16;;;:27;;7022:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;7125:9;:19;;;7106:15;:38;;7098:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7181:17;7193:4;7181:11;:17::i;:::-;7208:32;7223:4;7229:10;7208:14;:32::i;:::-;7271:7;7251:9;:16;;;:27;;;;;;;:::i;:::-;;;;;;;;7308:7;7288:4;:16;;;:27;;;;;;;:::i;:::-;;;;;;;;7326:51;7357:10;7369:7;7326:4;:17;;;;;;;;;;;;:30;;;;:51;;;;;:::i;:::-;7414:4;7402:10;7393:35;;;7420:7;7393:35;;;;;;:::i;:::-;;;;;;;;6896:539;;2568:20:2::0;:18;:20::i;:::-;6826:609:10;;:::o;8693:399::-;8793:1;8760:35;;:9;:21;8770:10;8760:21;;;;;;;;;;;;;;;;;;;;;;;;;:35;;;8752:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;8851:10;8838:23;;:9;:23;;;8830:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;8921:9;8897;:21;8907:10;8897:21;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;8970:13;;8940:15;:26;8956:9;8940:26;;;;;;;;;;;;;;;;:43;;;;;;;:::i;:::-;;;;;;;;9024:12;;8993:15;:27;9009:10;8993:27;;;;;;;;;;;;;;;;:43;;;;;;;:::i;:::-;;;;;;;;9075:9;9051:34;;9063:10;9051:34;;;;;;;;;;;;8693:399;:::o;7554:374::-;2526:21:2;:19;:21::i;:::-;7621:17:10::1;7633:4;7621:11;:17::i;:::-;7648:32;7663:4;7669:10;7648:14;:32::i;:::-;7690:14;7707:10;:16;7718:4;7707:16;;;;;;;;;;;:28;7724:10;7707:28;;;;;;;;;;;;;;;:39;;;7690:56;;7798:1;7756:10;:16;7767:4;7756:16;;;;;;;;;;;:28;7773:10;7756:28;;;;;;;;;;;;;;;:39;;:43;;;;7810:59;7850:10;7862:6;7810:8;7819:4;7810:14;;;;;;;;:::i;:::-;;;;;;;;;;;;:26;;;;;;;;;;;;:39;;;;:59;;;;;:::i;:::-;7908:4;7896:10;7885:36;;;7914:6;7885:36;;;;;;:::i;:::-;;;;;;;;7611:317;2568:20:2::0;:18;:20::i;:::-;7554:374:10;:::o;2228:29::-;;;;:::o;5268:620::-;2334:13:0;:11;:13::i;:::-;5461:8:10::1;5475:285;;;;;;;;5512:13;5475:285;;;;;;5552:12;5475:285;;;;;;5590:11;5475:285;;;;5629:13;5475:285;;;;5669:1;5475:285;;;;5703:1;5475:285;;;;5734:15;5475:285;;::::0;5461:300:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5804:1;5786:8;:15;;;;:19;;;;:::i;:::-;5776:105;5815:13;5839:12;5854:11;5867:13;5776:105;;;;;;;;;:::i;:::-;;;;;;;;5268:620:::0;;;;:::o;2531:28::-;;;;:::o;2602:27::-;;;;:::o;2760:34::-;;;;;;;;;;;;;:::o;10128:148::-;2334:13:0;:11;:13::i;:::-;10225:44:10::1;10254:5;10261:7;10225:15;;;;;;;;;;;:28;;;;:44;;;;;:::i;:::-;10128:148:::0;;:::o;2462:27::-;;;;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;2834:40:10:-;;;;;;;;;;;;;:::o;2658:162:0:-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;2601:287:2:-;1851:1;2733:7;;:19;2725:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1851:1;2863:7;:18;;;;2601:287::o;996:186:5:-;1089:86;1109:5;1139:23;;;1164:2;1168:5;1116:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1089:19;:86::i;:::-;996:186;;;:::o;2894:209:2:-;1808:1;3074:7;:22;;;;2894:209::o;3774:248:0:-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;11106:397:10:-;11160:21;11184:8;11193:4;11184:14;;;;;;;;:::i;:::-;;;;;;;;;;;;11160:38;;11231:1;11212:4;:16;;;:20;11208:242;;;11248:18;11287:4;:19;;;11269:15;:37;;;;:::i;:::-;11248:58;;11320:14;11350:4;:15;;;11337:10;:28;;;;:::i;:::-;11320:45;;11423:4;:16;;;11415:4;11406:6;:13;;;;:::i;:::-;11405:34;;;;:::i;:::-;11379:4;:22;;;:60;;;;;;;:::i;:::-;;;;;;;;11234:216;;11208:242;11481:15;11459:4;:19;;:37;;;;11150:353;11106:397;:::o;11662:793::-;11734:21;11758:8;11767:4;11758:14;;;;;;;;:::i;:::-;;;;;;;;;;;;11734:38;;11782:27;11812:10;:16;11823:4;11812:16;;;;;;;;;;;:23;11829:5;11812:23;;;;;;;;;;;;;;;11782:53;;11868:1;11849:9;:16;;;:20;11845:604;;;11885:21;11962:9;:20;;;11955:4;11929;:22;;;11910:9;:16;;;:41;;;;:::i;:::-;11909:50;;;;:::i;:::-;:73;;;;:::i;:::-;11885:97;;11996:22;12062:4;:17;;;12040:9;:19;;;:39;;;;:::i;:::-;12021:15;:59;;;;:::i;:::-;11996:84;;12094:18;12115:42;12142:14;12115:26;:42::i;:::-;12094:63;;12235:14;;12221:10;12204:14;;:27;;;;:::i;:::-;12187:13;:45;;;;:::i;:::-;:62;;;;:::i;:::-;12171:78;;12286:13;12263:9;:20;;:36;;;;12345:1;12317:8;;;;;;;;;;;:18;;;12336:5;12317:25;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:29;12313:126;;;12421:3;12406:12;;12390:13;:28;;;;:::i;:::-;:34;;;;:::i;:::-;12366:9;:20;;;:58;;;;;;;:::i;:::-;;;;;;;;12313:126;11871:578;;;11845:604;11724:731;;11662:793;;:::o;1421:214:5:-;1532:96;1552:5;1582:27;;;1611:4;1617:2;1621:5;1559:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1532:19;:96::i;:::-;1421:214;;;;:::o;8737:170:1:-;8795:30;8870:21;8860:31;;8737:170;:::o;1847:127:0:-;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;:::-;1847:127:::0;:::o;1889:111:2:-;6931:20:1;:18;:20::i;:::-;1959:34:2::1;:32;:34::i;:::-;1889:111::o:0;1192:159:0:-;1244:24;1313:22;1303:32;;1192:159;:::o;887:96:8:-;940:7;966:10;959:17;;887:96;:::o;5328:653:5:-;5758:23;5784:69;5812:4;5784:69;;;;;;;;;;;;;;;;;5792:5;5784:27;;;;:69;;;;;:::i;:::-;5758:95;;5892:1;5871:10;:17;:22;:56;;;;5908:10;5897:30;;;;;;;;;;;;:::i;:::-;5871:56;5863:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;5409:572;5328:653;;:::o;10761:237:10:-;10844:7;10863:18;10901;;10884:14;:35;;;;:::i;:::-;10863:56;;10949:13;;10936:10;:26;:55;;10981:10;10936:55;;;10965:13;;10936:55;10929:62;;;10761:237;;;:::o;7084:141:1:-;7151:17;:15;:17::i;:::-;7146:73;;7191:17;;;;;;;;;;;;;;7146:73;7084:141::o;1980:235:0:-;6931:20:1;:18;:20::i;:::-;2100:1:0::1;2076:26;;:12;:26;;::::0;2072:95:::1;;2153:1;2125:31;;;;;;;;;;;:::i;:::-;;;;;;;;2072:95;2176:32;2195:12;2176:18;:32::i;:::-;1980:235:::0;:::o;2006:109:2:-;6931:20:1;:18;:20::i;:::-;1808:1:2::1;2086:7;:22;;;;2006:109::o:0;4119:223:7:-;4252:12;4283:52;4305:6;4313:4;4319:1;4322:12;4283:21;:52::i;:::-;4276:59;;4119:223;;;;;:::o;8487:120:1:-;8537:4;8560:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8553:47;;8487:120;:::o;5176:446:7:-;5341:12;5398:5;5373:21;:30;;5365:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5457:12;5471:23;5498:6;:11;;5517:5;5524:4;5498:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5456:73;;;;5546:69;5573:6;5581:7;5590:10;5602:12;5546:26;:69::i;:::-;5539:76;;;;5176:446;;;;;;:::o;7682:628::-;7862:12;7890:7;7886:418;;;7938:1;7917:10;:17;:22;7913:286;;8132:18;8143:6;8132:10;:18::i;:::-;8124:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7913:286;8219:10;8212:17;;;;7886:418;8260:33;8268:10;8280:12;8260:7;:33::i;:::-;7682:628;;;;;;;:::o;1423:320::-;1483:4;1735:1;1713:7;:19;;;:23;1706:30;;1423:320;;;:::o;8832:540::-;9011:1;8991:10;:17;:21;8987:379;;;9219:10;9213:17;9275:15;9262:10;9258:2;9254:19;9247:44;8987:379;9342:12;9335:20;;;;;;;;;;;:::i;:::-;;;;;;;;7:77:11;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:474::-;1110:6;1118;1167:2;1155:9;1146:7;1142:23;1138:32;1135:119;;;1173:79;;:::i;:::-;1135:119;1293:1;1318:53;1363:7;1354:6;1343:9;1339:22;1318:53;:::i;:::-;1308:63;;1264:117;1420:2;1446:53;1491:7;1482:6;1471:9;1467:22;1446:53;:::i;:::-;1436:63;;1391:118;1042:474;;;;;:::o;1522:329::-;1581:6;1630:2;1618:9;1609:7;1605:23;1601:32;1598:119;;;1636:79;;:::i;:::-;1598:119;1756:1;1781:53;1826:7;1817:6;1806:9;1802:22;1781:53;:::i;:::-;1771:63;;1727:117;1522:329;;;;:::o;1857:126::-;1894:7;1934:42;1927:5;1923:54;1912:65;;1857:126;;;:::o;1989:60::-;2017:3;2038:5;2031:12;;1989:60;;;:::o;2055:142::-;2105:9;2138:53;2156:34;2165:24;2183:5;2165:24;:::i;:::-;2156:34;:::i;:::-;2138:53;:::i;:::-;2125:66;;2055:142;;;:::o;2203:126::-;2253:9;2286:37;2317:5;2286:37;:::i;:::-;2273:50;;2203:126;;;:::o;2335:151::-;2410:9;2443:37;2474:5;2443:37;:::i;:::-;2430:50;;2335:151;;;:::o;2492:181::-;2604:62;2660:5;2604:62;:::i;:::-;2599:3;2592:75;2492:181;;:::o;2679:986::-;2990:4;3028:3;3017:9;3013:19;3005:27;;3042:96;3135:1;3124:9;3120:17;3111:6;3042:96;:::i;:::-;3148:97;3241:2;3230:9;3226:18;3217:6;3148:97;:::i;:::-;3255:72;3323:2;3312:9;3308:18;3299:6;3255:72;:::i;:::-;3337;3405:2;3394:9;3390:18;3381:6;3337:72;:::i;:::-;3419:73;3487:3;3476:9;3472:19;3463:6;3419:73;:::i;:::-;3502;3570:3;3559:9;3555:19;3546:6;3502:73;:::i;:::-;3585;3653:3;3642:9;3638:19;3629:6;3585:73;:::i;:::-;2679:986;;;;;;;;;;:::o;3671:96::-;3708:7;3737:24;3755:5;3737:24;:::i;:::-;3726:35;;3671:96;;;:::o;3773:122::-;3846:24;3864:5;3846:24;:::i;:::-;3839:5;3836:35;3826:63;;3885:1;3882;3875:12;3826:63;3773:122;:::o;3901:139::-;3947:5;3985:6;3972:20;3963:29;;4001:33;4028:5;4001:33;:::i;:::-;3901:139;;;;:::o;4046:474::-;4114:6;4122;4171:2;4159:9;4150:7;4146:23;4142:32;4139:119;;;4177:79;;:::i;:::-;4139:119;4297:1;4322:53;4367:7;4358:6;4347:9;4343:22;4322:53;:::i;:::-;4312:63;;4268:117;4424:2;4450:53;4495:7;4486:6;4475:9;4471:22;4450:53;:::i;:::-;4440:63;;4395:118;4046:474;;;;;:::o;4526:442::-;4675:4;4713:2;4702:9;4698:18;4690:26;;4726:71;4794:1;4783:9;4779:17;4770:6;4726:71;:::i;:::-;4807:72;4875:2;4864:9;4860:18;4851:6;4807:72;:::i;:::-;4889;4957:2;4946:9;4942:18;4933:6;4889:72;:::i;:::-;4526:442;;;;;;:::o;4974:329::-;5033:6;5082:2;5070:9;5061:7;5057:23;5053:32;5050:119;;;5088:79;;:::i;:::-;5050:119;5208:1;5233:53;5278:7;5269:6;5258:9;5254:22;5233:53;:::i;:::-;5223:63;;5179:117;4974:329;;;;:::o;5309:118::-;5396:24;5414:5;5396:24;:::i;:::-;5391:3;5384:37;5309:118;;:::o;5433:222::-;5526:4;5564:2;5553:9;5549:18;5541:26;;5577:71;5645:1;5634:9;5630:17;5621:6;5577:71;:::i;:::-;5433:222;;;;:::o;5661:90::-;5695:7;5738:5;5731:13;5724:21;5713:32;;5661:90;;;:::o;5757:109::-;5838:21;5853:5;5838:21;:::i;:::-;5833:3;5826:34;5757:109;;:::o;5872:210::-;5959:4;5997:2;5986:9;5982:18;5974:26;;6010:65;6072:1;6061:9;6057:17;6048:6;6010:65;:::i;:::-;5872:210;;;;:::o;6088:121::-;6150:7;6179:24;6197:5;6179:24;:::i;:::-;6168:35;;6088:121;;;:::o;6215:172::-;6313:49;6356:5;6313:49;:::i;:::-;6306:5;6303:60;6293:88;;6377:1;6374;6367:12;6293:88;6215:172;:::o;6393:189::-;6464:5;6502:6;6489:20;6480:29;;6518:58;6570:5;6518:58;:::i;:::-;6393:189;;;;:::o;6588:123::-;6652:7;6681:24;6699:5;6681:24;:::i;:::-;6670:35;;6588:123;;;:::o;6717:176::-;6817:51;6862:5;6817:51;:::i;:::-;6810:5;6807:62;6797:90;;6883:1;6880;6873:12;6797:90;6717:176;:::o;6899:193::-;6972:5;7010:6;6997:20;6988:29;;7026:60;7080:5;7026:60;:::i;:::-;6899:193;;;;:::o;7098:1453::-;7272:6;7280;7288;7296;7304;7312;7320;7328;7377:3;7365:9;7356:7;7352:23;7348:33;7345:120;;;7384:79;;:::i;:::-;7345:120;7504:1;7529:78;7599:7;7590:6;7579:9;7575:22;7529:78;:::i;:::-;7519:88;;7475:142;7656:2;7682:80;7754:7;7745:6;7734:9;7730:22;7682:80;:::i;:::-;7672:90;;7627:145;7811:2;7837:53;7882:7;7873:6;7862:9;7858:22;7837:53;:::i;:::-;7827:63;;7782:118;7939:2;7965:53;8010:7;8001:6;7990:9;7986:22;7965:53;:::i;:::-;7955:63;;7910:118;8067:3;8094:53;8139:7;8130:6;8119:9;8115:22;8094:53;:::i;:::-;8084:63;;8038:119;8196:3;8223:53;8268:7;8259:6;8248:9;8244:22;8223:53;:::i;:::-;8213:63;;8167:119;8325:3;8352:53;8397:7;8388:6;8377:9;8373:22;8352:53;:::i;:::-;8342:63;;8296:119;8454:3;8481:53;8526:7;8517:6;8506:9;8502:22;8481:53;:::i;:::-;8471:63;;8425:119;7098:1453;;;;;;;;;;;:::o;8557:865::-;8693:6;8701;8709;8717;8766:3;8754:9;8745:7;8741:23;8737:33;8734:120;;;8773:79;;:::i;:::-;8734:120;8893:1;8918:78;8988:7;8979:6;8968:9;8964:22;8918:78;:::i;:::-;8908:88;;8864:142;9045:2;9071:78;9141:7;9132:6;9121:9;9117:22;9071:78;:::i;:::-;9061:88;;9016:143;9198:2;9224:53;9269:7;9260:6;9249:9;9245:22;9224:53;:::i;:::-;9214:63;;9169:118;9326:2;9352:53;9397:7;9388:6;9377:9;9373:22;9352:53;:::i;:::-;9342:63;;9297:118;8557:865;;;;;;;:::o;9428:153::-;9505:9;9538:37;9569:5;9538:37;:::i;:::-;9525:50;;9428:153;;;:::o;9587:185::-;9701:64;9759:5;9701:64;:::i;:::-;9696:3;9689:77;9587:185;;:::o;9778:276::-;9898:4;9936:2;9925:9;9921:18;9913:26;;9949:98;10044:1;10033:9;10029:17;10020:6;9949:98;:::i;:::-;9778:276;;;;:::o;10060:474::-;10128:6;10136;10185:2;10173:9;10164:7;10160:23;10156:32;10153:119;;;10191:79;;:::i;:::-;10153:119;10311:1;10336:53;10381:7;10372:6;10361:9;10357:22;10336:53;:::i;:::-;10326:63;;10282:117;10438:2;10464:53;10509:7;10500:6;10489:9;10485:22;10464:53;:::i;:::-;10454:63;;10409:118;10060:474;;;;;:::o;10540:272::-;10658:4;10696:2;10685:9;10681:18;10673:26;;10709:96;10802:1;10791:9;10787:17;10778:6;10709:96;:::i;:::-;10540:272;;;;:::o;10818:180::-;10866:77;10863:1;10856:88;10963:4;10960:1;10953:15;10987:4;10984:1;10977:15;11004:169;11088:11;11122:6;11117:3;11110:19;11162:4;11157:3;11153:14;11138:29;;11004:169;;;;:::o;11179:166::-;11319:18;11315:1;11307:6;11303:14;11296:42;11179:166;:::o;11351:366::-;11493:3;11514:67;11578:2;11573:3;11514:67;:::i;:::-;11507:74;;11590:93;11679:3;11590:93;:::i;:::-;11708:2;11703:3;11699:12;11692:19;;11351:366;;;:::o;11723:419::-;11889:4;11927:2;11916:9;11912:18;11904:26;;11976:9;11970:4;11966:20;11962:1;11951:9;11947:17;11940:47;12004:131;12130:4;12004:131;:::i;:::-;11996:139;;11723:419;;;:::o;12148:180::-;12196:77;12193:1;12186:88;12293:4;12290:1;12283:15;12317:4;12314:1;12307:15;12334:194;12374:4;12394:20;12412:1;12394:20;:::i;:::-;12389:25;;12428:20;12446:1;12428:20;:::i;:::-;12423:25;;12472:1;12469;12465:9;12457:17;;12496:1;12490:4;12487:11;12484:37;;;12501:18;;:::i;:::-;12484:37;12334:194;;;;:::o;12534:168::-;12674:20;12670:1;12662:6;12658:14;12651:44;12534:168;:::o;12708:366::-;12850:3;12871:67;12935:2;12930:3;12871:67;:::i;:::-;12864:74;;12947:93;13036:3;12947:93;:::i;:::-;13065:2;13060:3;13056:12;13049:19;;12708:366;;;:::o;13080:419::-;13246:4;13284:2;13273:9;13269:18;13261:26;;13333:9;13327:4;13323:20;13319:1;13308:9;13304:17;13297:47;13361:131;13487:4;13361:131;:::i;:::-;13353:139;;13080:419;;;:::o;13505:164::-;13645:16;13641:1;13633:6;13629:14;13622:40;13505:164;:::o;13675:366::-;13817:3;13838:67;13902:2;13897:3;13838:67;:::i;:::-;13831:74;;13914:93;14003:3;13914:93;:::i;:::-;14032:2;14027:3;14023:12;14016:19;;13675:366;;;:::o;14047:419::-;14213:4;14251:2;14240:9;14236:18;14228:26;;14300:9;14294:4;14290:20;14286:1;14275:9;14271:17;14264:47;14328:131;14454:4;14328:131;:::i;:::-;14320:139;;14047:419;;;:::o;14472:191::-;14512:3;14531:20;14549:1;14531:20;:::i;:::-;14526:25;;14565:20;14583:1;14565:20;:::i;:::-;14560:25;;14608:1;14605;14601:9;14594:16;;14629:3;14626:1;14623:10;14620:36;;;14636:18;;:::i;:::-;14620:36;14472:191;;;;:::o;14669:332::-;14790:4;14828:2;14817:9;14813:18;14805:26;;14841:71;14909:1;14898:9;14894:17;14885:6;14841:71;:::i;:::-;14922:72;14990:2;14979:9;14975:18;14966:6;14922:72;:::i;:::-;14669:332;;;;;:::o;15007:85::-;15052:7;15081:5;15070:16;;15007:85;;;:::o;15098:101::-;15134:7;15174:18;15167:5;15163:30;15152:41;;15098:101;;;:::o;15205:156::-;15262:9;15295:60;15312:42;15321:32;15347:5;15321:32;:::i;:::-;15312:42;:::i;:::-;15295:60;:::i;:::-;15282:73;;15205:156;;;:::o;15367:145::-;15461:44;15499:5;15461:44;:::i;:::-;15456:3;15449:57;15367:145;;:::o;15518:236::-;15618:4;15656:2;15645:9;15641:18;15633:26;;15669:78;15744:1;15733:9;15729:17;15720:6;15669:78;:::i;:::-;15518:236;;;;:::o;15760:176::-;15900:28;15896:1;15888:6;15884:14;15877:52;15760:176;:::o;15942:366::-;16084:3;16105:67;16169:2;16164:3;16105:67;:::i;:::-;16098:74;;16181:93;16270:3;16181:93;:::i;:::-;16299:2;16294:3;16290:12;16283:19;;15942:366;;;:::o;16314:419::-;16480:4;16518:2;16507:9;16503:18;16495:26;;16567:9;16561:4;16557:20;16553:1;16542:9;16538:17;16531:47;16595:131;16721:4;16595:131;:::i;:::-;16587:139;;16314:419;;;:::o;16739:171::-;16879:23;16875:1;16867:6;16863:14;16856:47;16739:171;:::o;16916:366::-;17058:3;17079:67;17143:2;17138:3;17079:67;:::i;:::-;17072:74;;17155:93;17244:3;17155:93;:::i;:::-;17273:2;17268:3;17264:12;17257:19;;16916:366;;;:::o;17288:419::-;17454:4;17492:2;17481:9;17477:18;17469:26;;17541:9;17535:4;17531:20;17527:1;17516:9;17512:17;17505:47;17569:131;17695:4;17569:131;:::i;:::-;17561:139;;17288:419;;;:::o;17713:170::-;17853:22;17849:1;17841:6;17837:14;17830:46;17713:170;:::o;17889:366::-;18031:3;18052:67;18116:2;18111:3;18052:67;:::i;:::-;18045:74;;18128:93;18217:3;18128:93;:::i;:::-;18246:2;18241:3;18237:12;18230:19;;17889:366;;;:::o;18261:419::-;18427:4;18465:2;18454:9;18450:18;18442:26;;18514:9;18508:4;18504:20;18500:1;18489:9;18485:17;18478:47;18542:131;18668:4;18542:131;:::i;:::-;18534:139;;18261:419;;;:::o;18686:171::-;18826:23;18822:1;18814:6;18810:14;18803:47;18686:171;:::o;18863:366::-;19005:3;19026:67;19090:2;19085:3;19026:67;:::i;:::-;19019:74;;19102:93;19191:3;19102:93;:::i;:::-;19220:2;19215:3;19211:12;19204:19;;18863:366;;;:::o;19235:419::-;19401:4;19439:2;19428:9;19424:18;19416:26;;19488:9;19482:4;19478:20;19474:1;19463:9;19459:17;19452:47;19516:131;19642:4;19516:131;:::i;:::-;19508:139;;19235:419;;;:::o;19660:553::-;19837:4;19875:3;19864:9;19860:19;19852:27;;19889:71;19957:1;19946:9;19942:17;19933:6;19889:71;:::i;:::-;19970:72;20038:2;20027:9;20023:18;20014:6;19970:72;:::i;:::-;20052;20120:2;20109:9;20105:18;20096:6;20052:72;:::i;:::-;20134;20202:2;20191:9;20187:18;20178:6;20134:72;:::i;:::-;19660:553;;;;;;;:::o;20219:181::-;20359:33;20355:1;20347:6;20343:14;20336:57;20219:181;:::o;20406:366::-;20548:3;20569:67;20633:2;20628:3;20569:67;:::i;:::-;20562:74;;20645:93;20734:3;20645:93;:::i;:::-;20763:2;20758:3;20754:12;20747:19;;20406:366;;;:::o;20778:419::-;20944:4;20982:2;20971:9;20967:18;20959:26;;21031:9;21025:4;21021:20;21017:1;21006:9;21002:17;20995:47;21059:131;21185:4;21059:131;:::i;:::-;21051:139;;20778:419;;;:::o;21203:332::-;21324:4;21362:2;21351:9;21347:18;21339:26;;21375:71;21443:1;21432:9;21428:17;21419:6;21375:71;:::i;:::-;21456:72;21524:2;21513:9;21509:18;21500:6;21456:72;:::i;:::-;21203:332;;;;;:::o;21541:410::-;21581:7;21604:20;21622:1;21604:20;:::i;:::-;21599:25;;21638:20;21656:1;21638:20;:::i;:::-;21633:25;;21693:1;21690;21686:9;21715:30;21733:11;21715:30;:::i;:::-;21704:41;;21894:1;21885:7;21881:15;21878:1;21875:22;21855:1;21848:9;21828:83;21805:139;;21924:18;;:::i;:::-;21805:139;21589:362;21541:410;;;;:::o;21957:180::-;22005:77;22002:1;21995:88;22102:4;22099:1;22092:15;22126:4;22123:1;22116:15;22143:185;22183:1;22200:20;22218:1;22200:20;:::i;:::-;22195:25;;22234:20;22252:1;22234:20;:::i;:::-;22229:25;;22273:1;22263:35;;22278:18;;:::i;:::-;22263:35;22320:1;22317;22313:9;22308:14;;22143:185;;;;:::o;22334:143::-;22391:5;22422:6;22416:13;22407:22;;22438:33;22465:5;22438:33;:::i;:::-;22334:143;;;;:::o;22483:351::-;22553:6;22602:2;22590:9;22581:7;22577:23;22573:32;22570:119;;;22608:79;;:::i;:::-;22570:119;22728:1;22753:64;22809:7;22800:6;22789:9;22785:22;22753:64;:::i;:::-;22743:74;;22699:128;22483:351;;;;:::o;22840:442::-;22989:4;23027:2;23016:9;23012:18;23004:26;;23040:71;23108:1;23097:9;23093:17;23084:6;23040:71;:::i;:::-;23121:72;23189:2;23178:9;23174:18;23165:6;23121:72;:::i;:::-;23203;23271:2;23260:9;23256:18;23247:6;23203:72;:::i;:::-;22840:442;;;;;;:::o;23288:116::-;23358:21;23373:5;23358:21;:::i;:::-;23351:5;23348:32;23338:60;;23394:1;23391;23384:12;23338:60;23288:116;:::o;23410:137::-;23464:5;23495:6;23489:13;23480:22;;23511:30;23535:5;23511:30;:::i;:::-;23410:137;;;;:::o;23553:345::-;23620:6;23669:2;23657:9;23648:7;23644:23;23640:32;23637:119;;;23675:79;;:::i;:::-;23637:119;23795:1;23820:61;23873:7;23864:6;23853:9;23849:22;23820:61;:::i;:::-;23810:71;;23766:125;23553:345;;;;:::o;23904:229::-;24044:34;24040:1;24032:6;24028:14;24021:58;24113:12;24108:2;24100:6;24096:15;24089:37;23904:229;:::o;24139:366::-;24281:3;24302:67;24366:2;24361:3;24302:67;:::i;:::-;24295:74;;24378:93;24467:3;24378:93;:::i;:::-;24496:2;24491:3;24487:12;24480:19;;24139:366;;;:::o;24511:419::-;24677:4;24715:2;24704:9;24700:18;24692:26;;24764:9;24758:4;24754:20;24750:1;24739:9;24735:17;24728:47;24792:131;24918:4;24792:131;:::i;:::-;24784:139;;24511:419;;;:::o;24936:225::-;25076:34;25072:1;25064:6;25060:14;25053:58;25145:8;25140:2;25132:6;25128:15;25121:33;24936:225;:::o;25167:366::-;25309:3;25330:67;25394:2;25389:3;25330:67;:::i;:::-;25323:74;;25406:93;25495:3;25406:93;:::i;:::-;25524:2;25519:3;25515:12;25508:19;;25167:366;;;:::o;25539:419::-;25705:4;25743:2;25732:9;25728:18;25720:26;;25792:9;25786:4;25782:20;25778:1;25767:9;25763:17;25756:47;25820:131;25946:4;25820:131;:::i;:::-;25812:139;;25539:419;;;:::o;25964:98::-;26015:6;26049:5;26043:12;26033:22;;25964:98;;;:::o;26068:147::-;26169:11;26206:3;26191:18;;26068:147;;;;:::o;26221:139::-;26310:6;26305:3;26300;26294:23;26351:1;26342:6;26337:3;26333:16;26326:27;26221:139;;;:::o;26366:386::-;26470:3;26498:38;26530:5;26498:38;:::i;:::-;26552:88;26633:6;26628:3;26552:88;:::i;:::-;26545:95;;26649:65;26707:6;26702:3;26695:4;26688:5;26684:16;26649:65;:::i;:::-;26739:6;26734:3;26730:16;26723:23;;26474:278;26366:386;;;;:::o;26758:271::-;26888:3;26910:93;26999:3;26990:6;26910:93;:::i;:::-;26903:100;;27020:3;27013:10;;26758:271;;;;:::o;27035:179::-;27175:31;27171:1;27163:6;27159:14;27152:55;27035:179;:::o;27220:366::-;27362:3;27383:67;27447:2;27442:3;27383:67;:::i;:::-;27376:74;;27459:93;27548:3;27459:93;:::i;:::-;27577:2;27572:3;27568:12;27561:19;;27220:366;;;:::o;27592:419::-;27758:4;27796:2;27785:9;27781:18;27773:26;;27845:9;27839:4;27835:20;27831:1;27820:9;27816:17;27809:47;27873:131;27999:4;27873:131;:::i;:::-;27865:139;;27592:419;;;:::o;28017:99::-;28069:6;28103:5;28097:12;28087:22;;28017:99;;;:::o;28122:102::-;28163:6;28214:2;28210:7;28205:2;28198:5;28194:14;28190:28;28180:38;;28122:102;;;:::o;28230:377::-;28318:3;28346:39;28379:5;28346:39;:::i;:::-;28401:71;28465:6;28460:3;28401:71;:::i;:::-;28394:78;;28481:65;28539:6;28534:3;28527:4;28520:5;28516:16;28481:65;:::i;:::-;28571:29;28593:6;28571:29;:::i;:::-;28566:3;28562:39;28555:46;;28322:285;28230:377;;;;:::o;28613:313::-;28726:4;28764:2;28753:9;28749:18;28741:26;;28813:9;28807:4;28803:20;28799:1;28788:9;28784:17;28777:47;28841:78;28914:4;28905:6;28841:78;:::i;:::-;28833:86;;28613:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2347200",
								"executionCost": "2514",
								"totalCost": "2349714"
							},
							"external": {
								"addPool(address,address,uint256,uint256)": "infinite",
								"baseRewardRate()": "2536",
								"claimReward(uint256)": "infinite",
								"distributeGovernanceTokens(address,uint256)": "infinite",
								"emergencyWithdraw(uint256)": "infinite",
								"governanceToken()": "infinite",
								"initialize(address,address,uint256,uint256,uint256,uint256,uint256,uint256)": "infinite",
								"maxMultiplier()": "2472",
								"multiplierDuration()": "2494",
								"nftBoostRate()": "2491",
								"nftToken()": "infinite",
								"owner()": "2657",
								"pause()": "infinite",
								"paused()": "2533",
								"poolInfo(uint256)": "infinite",
								"poolStakes(uint256,address)": "infinite",
								"refereeBonus()": "2514",
								"referralBonus()": "2492",
								"referralRewards(address)": "2847",
								"referrers(address)": "infinite",
								"renounceOwnership()": "infinite",
								"setLockDuration(uint256,uint256)": "infinite",
								"setNftBoostRate(uint256)": "infinite",
								"setReferrer(address)": "infinite",
								"setRewardRate(uint256,uint256)": "infinite",
								"stake(uint256,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unpause()": "infinite",
								"unstake(uint256,uint256)": "infinite"
							},
							"internal": {
								"_calculateRewardMultiplier(uint256)": "infinite",
								"_updatePool(uint256)": "infinite",
								"_updateRewards(uint256,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 739,
									"end": 12457,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 739,
									"end": 12457,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 739,
									"end": 12457,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 739,
									"end": 12457,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 739,
									"end": 12457,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 739,
									"end": 12457,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 739,
									"end": 12457,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 739,
									"end": 12457,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 739,
									"end": 12457,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 739,
									"end": 12457,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 739,
									"end": 12457,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 739,
									"end": 12457,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 739,
									"end": 12457,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 739,
									"end": 12457,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 739,
									"end": 12457,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 739,
									"end": 12457,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 739,
									"end": 12457,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 739,
									"end": 12457,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 739,
									"end": 12457,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 739,
									"end": 12457,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 739,
									"end": 12457,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f649a6dc36ebb7caee4da0b9e104c5c8b81a60080b765f6c4136a532bd3f7caf64736f6c634300081a0033",
									".code": [
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "8456CB59"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "C20632BA"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "DFAAE412"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "DFAAE412"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "E0283FAF"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "F2FDE38B"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "F96DAE0A"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "C20632BA"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "CE7842F5"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "CE98F049"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "D06FCBA8"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "9E2C8A5B"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "9E2C8A5B"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "A18A7BFC"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "AE169A50"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "AFBF3440"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "8456CB59"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "8BA796AF"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "3F4BA83A"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "53AAA63B"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "53AAA63B"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "5C975ABB"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "715018A6"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "7B0472F0"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "3F4BA83A"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "4A3B68CC"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "5312EA8E"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "1526FE27"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "1526FE27"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "3462E0A8"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "381E75EB"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "3B1E3EB8"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "187AEA0"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "85CDE2D"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "126796DD"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 739,
											"end": 12457,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2302,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 2302,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 2374,
											"end": 2407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 2374,
											"end": 2407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 9557,
											"end": 9698,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 9557,
											"end": 9698,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9557,
											"end": 9698,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 9557,
											"end": 9698,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9557,
											"end": 9698,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9557,
											"end": 9698,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 9557,
											"end": 9698,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9557,
											"end": 9698,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9557,
											"end": 9698,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9557,
											"end": 9698,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9557,
											"end": 9698,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 9557,
											"end": 9698,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9557,
											"end": 9698,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9557,
											"end": 9698,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 9557,
											"end": 9698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9557,
											"end": 9698,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 9557,
											"end": 9698,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9557,
											"end": 9698,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 9557,
											"end": 9698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9557,
											"end": 9698,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 9557,
											"end": 9698,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9557,
											"end": 9698,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 1813,
											"end": 1839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 1813,
											"end": 1839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 1813,
											"end": 1839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 9255,
											"end": 9388,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 9255,
											"end": 9388,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9255,
											"end": 9388,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 9255,
											"end": 9388,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9255,
											"end": 9388,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9255,
											"end": 9388,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 9255,
											"end": 9388,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9255,
											"end": 9388,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9255,
											"end": 9388,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9255,
											"end": 9388,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9255,
											"end": 9388,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 9255,
											"end": 9388,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9255,
											"end": 9388,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9255,
											"end": 9388,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 9255,
											"end": 9388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9255,
											"end": 9388,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 9255,
											"end": 9388,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9255,
											"end": 9388,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 9255,
											"end": 9388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9255,
											"end": 9388,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 9255,
											"end": 9388,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9255,
											"end": 9388,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 1885,
											"end": 1952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 1885,
											"end": 1952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1885,
											"end": 1952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 9822,
											"end": 9934,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 9822,
											"end": 9934,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9822,
											"end": 9934,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 9822,
											"end": 9934,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9822,
											"end": 9934,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9822,
											"end": 9934,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 9822,
											"end": 9934,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9822,
											"end": 9934,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9822,
											"end": 9934,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9822,
											"end": 9934,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9822,
											"end": 9934,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 9822,
											"end": 9934,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9822,
											"end": 9934,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9822,
											"end": 9934,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 9822,
											"end": 9934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9822,
											"end": 9934,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 9822,
											"end": 9934,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9822,
											"end": 9934,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 9822,
											"end": 9934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9822,
											"end": 9934,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 9822,
											"end": 9934,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9822,
											"end": 9934,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 10490,
											"end": 10559,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 10490,
											"end": 10559,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10490,
											"end": 10559,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 10490,
											"end": 10559,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 10490,
											"end": 10559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10490,
											"end": 10559,
											"name": "tag",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 10490,
											"end": 10559,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10490,
											"end": 10559,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 2011,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 2011,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "tag",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 2011,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 8066,
											"end": 8575,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 8066,
											"end": 8575,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8066,
											"end": 8575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 8066,
											"end": 8575,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8066,
											"end": 8575,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8066,
											"end": 8575,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 8066,
											"end": 8575,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8066,
											"end": 8575,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8066,
											"end": 8575,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8066,
											"end": 8575,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8066,
											"end": 8575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 8066,
											"end": 8575,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8066,
											"end": 8575,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8066,
											"end": 8575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 8066,
											"end": 8575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8066,
											"end": 8575,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 8066,
											"end": 8575,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8066,
											"end": 8575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 8066,
											"end": 8575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8066,
											"end": 8575,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 8066,
											"end": 8575,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8066,
											"end": 8575,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 2117,
											"end": 2167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 2117,
											"end": 2167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 2117,
											"end": 2167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 2668,
											"end": 2686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 2668,
											"end": 2686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6046,
											"end": 6662,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 6046,
											"end": 6662,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6046,
											"end": 6662,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 6046,
											"end": 6662,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6046,
											"end": 6662,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6046,
											"end": 6662,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 6046,
											"end": 6662,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6046,
											"end": 6662,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6046,
											"end": 6662,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6046,
											"end": 6662,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6046,
											"end": 6662,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 6046,
											"end": 6662,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6046,
											"end": 6662,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6046,
											"end": 6662,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 6046,
											"end": 6662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6046,
											"end": 6662,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 6046,
											"end": 6662,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6046,
											"end": 6662,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 6046,
											"end": 6662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6046,
											"end": 6662,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 6046,
											"end": 6662,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6046,
											"end": 6662,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 10349,
											"end": 10415,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 10349,
											"end": 10415,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10349,
											"end": 10415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 10349,
											"end": 10415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 10349,
											"end": 10415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10349,
											"end": 10415,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 10349,
											"end": 10415,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10349,
											"end": 10415,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 4231,
											"end": 4955,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 4231,
											"end": 4955,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4231,
											"end": 4955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 4231,
											"end": 4955,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4231,
											"end": 4955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4231,
											"end": 4955,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4231,
											"end": 4955,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4231,
											"end": 4955,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4231,
											"end": 4955,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4231,
											"end": 4955,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4231,
											"end": 4955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 4231,
											"end": 4955,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4231,
											"end": 4955,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4231,
											"end": 4955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 4231,
											"end": 4955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4231,
											"end": 4955,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 4231,
											"end": 4955,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4231,
											"end": 4955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 4231,
											"end": 4955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4231,
											"end": 4955,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 4231,
											"end": 4955,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4231,
											"end": 4955,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 7435,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6826,
											"end": 7435,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6826,
											"end": 7435,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 6826,
											"end": 7435,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6826,
											"end": 7435,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6826,
											"end": 7435,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 6826,
											"end": 7435,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6826,
											"end": 7435,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6826,
											"end": 7435,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6826,
											"end": 7435,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6826,
											"end": 7435,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 6826,
											"end": 7435,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6826,
											"end": 7435,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6826,
											"end": 7435,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 6826,
											"end": 7435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6826,
											"end": 7435,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 6826,
											"end": 7435,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6826,
											"end": 7435,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 6826,
											"end": 7435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6826,
											"end": 7435,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 6826,
											"end": 7435,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6826,
											"end": 7435,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 8693,
											"end": 9092,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 8693,
											"end": 9092,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8693,
											"end": 9092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 8693,
											"end": 9092,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8693,
											"end": 9092,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8693,
											"end": 9092,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 8693,
											"end": 9092,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8693,
											"end": 9092,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8693,
											"end": 9092,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8693,
											"end": 9092,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8693,
											"end": 9092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 8693,
											"end": 9092,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8693,
											"end": 9092,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8693,
											"end": 9092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 8693,
											"end": 9092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8693,
											"end": 9092,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 8693,
											"end": 9092,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8693,
											"end": 9092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 8693,
											"end": 9092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8693,
											"end": 9092,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 8693,
											"end": 9092,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8693,
											"end": 9092,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 7554,
											"end": 7928,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 7554,
											"end": 7928,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7554,
											"end": 7928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 7554,
											"end": 7928,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7554,
											"end": 7928,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7554,
											"end": 7928,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 7554,
											"end": 7928,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7554,
											"end": 7928,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7554,
											"end": 7928,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7554,
											"end": 7928,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7554,
											"end": 7928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 7554,
											"end": 7928,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7554,
											"end": 7928,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7554,
											"end": 7928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 7554,
											"end": 7928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7554,
											"end": 7928,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 7554,
											"end": 7928,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7554,
											"end": 7928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 7554,
											"end": 7928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7554,
											"end": 7928,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 7554,
											"end": 7928,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7554,
											"end": 7928,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2228,
											"end": 2257,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 2228,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2228,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 2228,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 2228,
											"end": 2257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2228,
											"end": 2257,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 2228,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2228,
											"end": 2257,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2228,
											"end": 2257,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2228,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 2228,
											"end": 2257,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2228,
											"end": 2257,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2228,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 2228,
											"end": 2257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2228,
											"end": 2257,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 2228,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2228,
											"end": 2257,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2228,
											"end": 2257,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2228,
											"end": 2257,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2228,
											"end": 2257,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2228,
											"end": 2257,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2228,
											"end": 2257,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2228,
											"end": 2257,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5888,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5268,
											"end": 5888,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 5268,
											"end": 5888,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5268,
											"end": 5888,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5888,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5888,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5888,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5888,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5888,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 5268,
											"end": 5888,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5888,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 5268,
											"end": 5888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5888,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 5268,
											"end": 5888,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 5268,
											"end": 5888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5888,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 5268,
											"end": 5888,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5888,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2559,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 2531,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 2531,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 2531,
											"end": 2559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2559,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 2531,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2559,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2531,
											"end": 2559,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 2531,
											"end": 2559,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2559,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 2531,
											"end": 2559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2559,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 2531,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2559,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2531,
											"end": 2559,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2559,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2559,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2559,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2559,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2559,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2602,
											"end": 2629,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 2602,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2602,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 2602,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 2602,
											"end": 2629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2602,
											"end": 2629,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 2602,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2602,
											"end": 2629,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2602,
											"end": 2629,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2602,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 2602,
											"end": 2629,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2602,
											"end": 2629,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2602,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 2602,
											"end": 2629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2602,
											"end": 2629,
											"name": "tag",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 2602,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2602,
											"end": 2629,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2602,
											"end": 2629,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2602,
											"end": 2629,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2602,
											"end": 2629,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2602,
											"end": 2629,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2602,
											"end": 2629,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2602,
											"end": 2629,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2794,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 2760,
											"end": 2794,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 2760,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 2760,
											"end": 2794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2794,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 2760,
											"end": 2794,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2794,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2760,
											"end": 2794,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 2760,
											"end": 2794,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2794,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 2760,
											"end": 2794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2794,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 2760,
											"end": 2794,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2794,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2760,
											"end": 2794,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2794,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2794,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2794,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2794,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2794,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 10128,
											"end": 10276,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 10128,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10128,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 10128,
											"end": 10276,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10128,
											"end": 10276,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10128,
											"end": 10276,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 10128,
											"end": 10276,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10128,
											"end": 10276,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10128,
											"end": 10276,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10128,
											"end": 10276,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10128,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 10128,
											"end": 10276,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10128,
											"end": 10276,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10128,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 10128,
											"end": 10276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10128,
											"end": 10276,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 10128,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10128,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 10128,
											"end": 10276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10128,
											"end": 10276,
											"name": "tag",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 10128,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10128,
											"end": 10276,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2462,
											"end": 2489,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 2462,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2462,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 2462,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 2462,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2462,
											"end": 2489,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 2462,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2462,
											"end": 2489,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2462,
											"end": 2489,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2462,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 2462,
											"end": 2489,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2462,
											"end": 2489,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2462,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 2462,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2462,
											"end": 2489,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 2462,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2462,
											"end": 2489,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2462,
											"end": 2489,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2462,
											"end": 2489,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2462,
											"end": 2489,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2462,
											"end": 2489,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2462,
											"end": 2489,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2462,
											"end": 2489,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 2834,
											"end": 2874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 2834,
											"end": 2874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "PUSH",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2302,
											"end": 2330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "PUSH",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2374,
											"end": 2407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9557,
											"end": 9698,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 9557,
											"end": 9698,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9678,
											"end": 9691,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9648,
											"end": 9656,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 9657,
											"end": 9661,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9648,
											"end": 9662,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9648,
											"end": 9662,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9648,
											"end": 9662,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9648,
											"end": 9662,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 9648,
											"end": 9662,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 9648,
											"end": 9662,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9648,
											"end": 9662,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 9648,
											"end": 9662,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 9648,
											"end": 9662,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9648,
											"end": 9662,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 9648,
											"end": 9662,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9648,
											"end": 9662,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 9648,
											"end": 9662,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9648,
											"end": 9662,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9648,
											"end": 9662,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9648,
											"end": 9662,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9648,
											"end": 9662,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9648,
											"end": 9662,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9648,
											"end": 9662,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 9648,
											"end": 9662,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9648,
											"end": 9662,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 9648,
											"end": 9662,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 9648,
											"end": 9662,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9648,
											"end": 9675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 9648,
											"end": 9675,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9648,
											"end": 9691,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9648,
											"end": 9691,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9648,
											"end": 9691,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 9648,
											"end": 9691,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9557,
											"end": 9698,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9557,
											"end": 9698,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9557,
											"end": 9698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "tag",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9255,
											"end": 9388,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 9255,
											"end": 9388,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9370,
											"end": 9381,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9342,
											"end": 9350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 9351,
											"end": 9355,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9342,
											"end": 9356,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9342,
											"end": 9356,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9342,
											"end": 9356,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9342,
											"end": 9356,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 9342,
											"end": 9356,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 9342,
											"end": 9356,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9342,
											"end": 9356,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 9342,
											"end": 9356,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 9342,
											"end": 9356,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9342,
											"end": 9356,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 9342,
											"end": 9356,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9342,
											"end": 9356,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 9342,
											"end": 9356,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9342,
											"end": 9356,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9342,
											"end": 9356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9342,
											"end": 9356,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9342,
											"end": 9356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9342,
											"end": 9356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9342,
											"end": 9356,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 9342,
											"end": 9356,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9342,
											"end": 9356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 9342,
											"end": 9356,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 9342,
											"end": 9356,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9342,
											"end": 9367,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 9342,
											"end": 9367,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9342,
											"end": 9381,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9342,
											"end": 9381,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9342,
											"end": 9381,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 9342,
											"end": 9381,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9255,
											"end": 9388,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9255,
											"end": 9388,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9255,
											"end": 9388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "PUSH",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1885,
											"end": 1952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9822,
											"end": 9934,
											"name": "tag",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 9822,
											"end": 9934,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9914,
											"end": 9927,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9899,
											"end": 9911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 9899,
											"end": 9927,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9899,
											"end": 9927,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9899,
											"end": 9927,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 9899,
											"end": 9927,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9822,
											"end": 9934,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9822,
											"end": 9934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10490,
											"end": 10559,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 10490,
											"end": 10559,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10547,
											"end": 10552,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10538,
											"end": 10544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3C"
										},
										{
											"begin": 10538,
											"end": 10544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10538,
											"end": 10552,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 10538,
											"end": 10552,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 10538,
											"end": 10552,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10538,
											"end": 10552,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10538,
											"end": 10552,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10538,
											"end": 10552,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 10538,
											"end": 10552,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 10538,
											"end": 10552,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 10538,
											"end": 10552,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10538,
											"end": 10552,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10538,
											"end": 10552,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10538,
											"end": 10552,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10538,
											"end": 10552,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10538,
											"end": 10552,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 10538,
											"end": 10552,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 10538,
											"end": 10552,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10538,
											"end": 10552,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 10538,
											"end": 10552,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10490,
											"end": 10559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "PUSH",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2055,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8066,
											"end": 8575,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 8066,
											"end": 8575,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2526,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2526,
											"end": 2547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8139,
											"end": 8160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8163,
											"end": 8171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 8172,
											"end": 8176,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8163,
											"end": 8177,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8163,
											"end": 8177,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8163,
											"end": 8177,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8163,
											"end": 8177,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 8163,
											"end": 8177,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 8163,
											"end": 8177,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8163,
											"end": 8177,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 8163,
											"end": 8177,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 8163,
											"end": 8177,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8163,
											"end": 8177,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 8163,
											"end": 8177,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8163,
											"end": 8177,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 8163,
											"end": 8177,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8163,
											"end": 8177,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8163,
											"end": 8177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8163,
											"end": 8177,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8163,
											"end": 8177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8163,
											"end": 8177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8163,
											"end": 8177,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8163,
											"end": 8177,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8163,
											"end": 8177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 8163,
											"end": 8177,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 8163,
											"end": 8177,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8139,
											"end": 8177,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8139,
											"end": 8177,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8187,
											"end": 8214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8217,
											"end": 8227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 8217,
											"end": 8233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8228,
											"end": 8232,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8233,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8233,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8217,
											"end": 8233,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8233,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8233,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8233,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8217,
											"end": 8233,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8217,
											"end": 8233,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8234,
											"end": 8244,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8217,
											"end": 8245,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8217,
											"end": 8245,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8245,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8245,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8217,
											"end": 8245,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8245,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8245,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8245,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8217,
											"end": 8245,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8217,
											"end": 8245,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8187,
											"end": 8245,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8187,
											"end": 8245,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8282,
											"end": 8283,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8263,
											"end": 8272,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8263,
											"end": 8279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8263,
											"end": 8279,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8263,
											"end": 8279,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8263,
											"end": 8283,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8255,
											"end": 8304,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 8255,
											"end": 8304,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8255,
											"end": 8304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8255,
											"end": 8304,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8255,
											"end": 8304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8255,
											"end": 8304,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8255,
											"end": 8304,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8255,
											"end": 8304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8255,
											"end": 8304,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8255,
											"end": 8304,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 8255,
											"end": 8304,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8255,
											"end": 8304,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 8255,
											"end": 8304,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8255,
											"end": 8304,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 8255,
											"end": 8304,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8255,
											"end": 8304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8255,
											"end": 8304,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8255,
											"end": 8304,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8255,
											"end": 8304,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8255,
											"end": 8304,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8255,
											"end": 8304,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8255,
											"end": 8304,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8255,
											"end": 8304,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 8255,
											"end": 8304,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8315,
											"end": 8329,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8332,
											"end": 8341,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8332,
											"end": 8348,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8348,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8315,
											"end": 8348,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8315,
											"end": 8348,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8377,
											"end": 8378,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8358,
											"end": 8367,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8358,
											"end": 8374,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8358,
											"end": 8374,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8358,
											"end": 8378,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8358,
											"end": 8378,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8358,
											"end": 8378,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 8358,
											"end": 8378,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8411,
											"end": 8412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8388,
											"end": 8397,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8388,
											"end": 8408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8388,
											"end": 8408,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8388,
											"end": 8412,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8388,
											"end": 8412,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8388,
											"end": 8412,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 8388,
											"end": 8412,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8443,
											"end": 8449,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8423,
											"end": 8427,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8423,
											"end": 8439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8423,
											"end": 8439,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8423,
											"end": 8439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8423,
											"end": 8449,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8423,
											"end": 8449,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8423,
											"end": 8449,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8423,
											"end": 8449,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 8423,
											"end": 8449,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8423,
											"end": 8449,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8423,
											"end": 8449,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 8423,
											"end": 8449,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8423,
											"end": 8449,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 8423,
											"end": 8449,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8423,
											"end": 8449,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8423,
											"end": 8449,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8423,
											"end": 8449,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8423,
											"end": 8449,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8423,
											"end": 8449,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8423,
											"end": 8449,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 8423,
											"end": 8449,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8459,
											"end": 8509,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 8490,
											"end": 8500,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 8502,
											"end": 8508,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8459,
											"end": 8463,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8459,
											"end": 8476,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8459,
											"end": 8476,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8459,
											"end": 8476,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8459,
											"end": 8476,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8459,
											"end": 8476,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8459,
											"end": 8476,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8459,
											"end": 8476,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 8459,
											"end": 8476,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 8459,
											"end": 8476,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8459,
											"end": 8476,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8459,
											"end": 8476,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8459,
											"end": 8476,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8459,
											"end": 8489,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8459,
											"end": 8489,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8459,
											"end": 8489,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 8459,
											"end": 8489,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8459,
											"end": 8509,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8459,
											"end": 8509,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8459,
											"end": 8509,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8459,
											"end": 8509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8459,
											"end": 8509,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8459,
											"end": 8509,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8459,
											"end": 8509,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 8459,
											"end": 8509,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8555,
											"end": 8559,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8543,
											"end": 8553,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 8525,
											"end": 8568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8525,
											"end": 8568,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8525,
											"end": 8568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "BB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595"
										},
										{
											"begin": 8561,
											"end": 8567,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8525,
											"end": 8568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8525,
											"end": 8568,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8525,
											"end": 8568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 8525,
											"end": 8568,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8525,
											"end": 8568,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8525,
											"end": 8568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 8525,
											"end": 8568,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8525,
											"end": 8568,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 8525,
											"end": 8568,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8525,
											"end": 8568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8525,
											"end": 8568,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8525,
											"end": 8568,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8525,
											"end": 8568,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8525,
											"end": 8568,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8525,
											"end": 8568,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8525,
											"end": 8568,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 8129,
											"end": 8575,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8129,
											"end": 8575,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8129,
											"end": 8575,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 2568,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 2568,
											"end": 2588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8066,
											"end": 8575,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8066,
											"end": 8575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "PUSH",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "PUSH",
											"source": 10,
											"value": "3C"
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2668,
											"end": 2686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6046,
											"end": 6662,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 6046,
											"end": 6662,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 2526,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2526,
											"end": 2547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3603,
											"end": 3609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3C"
										},
										{
											"begin": 3603,
											"end": 3609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3603,
											"end": 3609,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 3609,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 3609,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 3609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3603,
											"end": 3609,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 3609,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 3609,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 3609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3603,
											"end": 3609,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3602,
											"end": 3609,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3632,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 3594,
											"end": 3632,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3632,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3594,
											"end": 3632,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3632,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3594,
											"end": 3632,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3632,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3632,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3594,
											"end": 3632,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3632,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 3594,
											"end": 3632,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3632,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 3594,
											"end": 3632,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3632,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 3594,
											"end": 3632,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3632,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3594,
											"end": 3632,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3632,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3632,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3632,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3632,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3632,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3632,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 3594,
											"end": 3632,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6156,
											"end": 6157,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6146,
											"end": 6153,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6146,
											"end": 6157,
											"modifierDepth": 2,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6138,
											"end": 6176,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 6138,
											"end": 6176,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6138,
											"end": 6176,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6138,
											"end": 6176,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6138,
											"end": 6176,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6138,
											"end": 6176,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6138,
											"end": 6176,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6138,
											"end": 6176,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6138,
											"end": 6176,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6138,
											"end": 6176,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 6138,
											"end": 6176,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6138,
											"end": 6176,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 6138,
											"end": 6176,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6138,
											"end": 6176,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 6138,
											"end": 6176,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6138,
											"end": 6176,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6138,
											"end": 6176,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6138,
											"end": 6176,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6138,
											"end": 6176,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6138,
											"end": 6176,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6138,
											"end": 6176,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6138,
											"end": 6176,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6138,
											"end": 6176,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 6138,
											"end": 6176,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6187,
											"end": 6208,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6219,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 6220,
											"end": 6224,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6211,
											"end": 6225,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6211,
											"end": 6225,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6211,
											"end": 6225,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6211,
											"end": 6225,
											"modifierDepth": 2,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6211,
											"end": 6225,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 6211,
											"end": 6225,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6211,
											"end": 6225,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 6211,
											"end": 6225,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 6211,
											"end": 6225,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6211,
											"end": 6225,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 6211,
											"end": 6225,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6211,
											"end": 6225,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 6211,
											"end": 6225,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6211,
											"end": 6225,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6211,
											"end": 6225,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6225,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6211,
											"end": 6225,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6225,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6225,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6211,
											"end": 6225,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6211,
											"end": 6225,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 6211,
											"end": 6225,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6211,
											"end": 6225,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6187,
											"end": 6225,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6187,
											"end": 6225,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6235,
											"end": 6262,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6265,
											"end": 6275,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 6265,
											"end": 6281,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6276,
											"end": 6280,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6265,
											"end": 6281,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6265,
											"end": 6281,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6265,
											"end": 6281,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6265,
											"end": 6281,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6265,
											"end": 6281,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6265,
											"end": 6281,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6265,
											"end": 6281,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6265,
											"end": 6281,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6265,
											"end": 6281,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6265,
											"end": 6281,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6265,
											"end": 6281,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6265,
											"end": 6293,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6282,
											"end": 6292,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 6265,
											"end": 6293,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6265,
											"end": 6293,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6265,
											"end": 6293,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6265,
											"end": 6293,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6265,
											"end": 6293,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6265,
											"end": 6293,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6265,
											"end": 6293,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6265,
											"end": 6293,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6265,
											"end": 6293,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6265,
											"end": 6293,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6265,
											"end": 6293,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6265,
											"end": 6293,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6265,
											"end": 6293,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6265,
											"end": 6293,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6265,
											"end": 6293,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6235,
											"end": 6293,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6235,
											"end": 6293,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6303,
											"end": 6320,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 6315,
											"end": 6319,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6303,
											"end": 6314,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 6303,
											"end": 6320,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6303,
											"end": 6320,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 6303,
											"end": 6320,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6330,
											"end": 6362,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 6345,
											"end": 6349,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6351,
											"end": 6361,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 6330,
											"end": 6344,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 6330,
											"end": 6362,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6330,
											"end": 6362,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 6330,
											"end": 6362,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6373,
											"end": 6443,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 6408,
											"end": 6418,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 6428,
											"end": 6432,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 6435,
											"end": 6442,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6373,
											"end": 6377,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6373,
											"end": 6390,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6373,
											"end": 6390,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6373,
											"end": 6390,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6373,
											"end": 6390,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6373,
											"end": 6390,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6373,
											"end": 6390,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6373,
											"end": 6390,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6373,
											"end": 6390,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 6373,
											"end": 6390,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6373,
											"end": 6390,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 6373,
											"end": 6390,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6373,
											"end": 6390,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6373,
											"end": 6407,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6373,
											"end": 6407,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6373,
											"end": 6407,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 6373,
											"end": 6407,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6373,
											"end": 6443,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6373,
											"end": 6443,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6373,
											"end": 6443,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6373,
											"end": 6443,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6373,
											"end": 6443,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6373,
											"end": 6443,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6373,
											"end": 6443,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6373,
											"end": 6443,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 6373,
											"end": 6443,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6474,
											"end": 6481,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6454,
											"end": 6463,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6454,
											"end": 6470,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6454,
											"end": 6470,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6454,
											"end": 6470,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6454,
											"end": 6481,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6454,
											"end": 6481,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6454,
											"end": 6481,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6454,
											"end": 6481,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 6454,
											"end": 6481,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6454,
											"end": 6481,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6454,
											"end": 6481,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 6454,
											"end": 6481,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6454,
											"end": 6481,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 6454,
											"end": 6481,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6454,
											"end": 6481,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6454,
											"end": 6481,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6454,
											"end": 6481,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6454,
											"end": 6481,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6454,
											"end": 6481,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6454,
											"end": 6481,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6454,
											"end": 6481,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6531,
											"end": 6535,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6531,
											"end": 6548,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 6531,
											"end": 6548,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6531,
											"end": 6548,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6513,
											"end": 6528,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 6513,
											"end": 6548,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 6513,
											"end": 6548,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6513,
											"end": 6548,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6513,
											"end": 6548,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 6513,
											"end": 6548,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6513,
											"end": 6548,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 6513,
											"end": 6548,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6491,
											"end": 6500,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6491,
											"end": 6510,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 6491,
											"end": 6510,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6491,
											"end": 6548,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6491,
											"end": 6548,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6491,
											"end": 6548,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6491,
											"end": 6548,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6585,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6558,
											"end": 6562,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6558,
											"end": 6574,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6558,
											"end": 6574,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6558,
											"end": 6574,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6558,
											"end": 6585,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6558,
											"end": 6585,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6558,
											"end": 6585,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6558,
											"end": 6585,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 6558,
											"end": 6585,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6558,
											"end": 6585,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6558,
											"end": 6585,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 6558,
											"end": 6585,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6558,
											"end": 6585,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 6558,
											"end": 6585,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6558,
											"end": 6585,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6558,
											"end": 6585,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6558,
											"end": 6585,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6558,
											"end": 6585,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6558,
											"end": 6585,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6558,
											"end": 6585,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6558,
											"end": 6585,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6620,
											"end": 6624,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6608,
											"end": 6618,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 6601,
											"end": 6655,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6601,
											"end": 6655,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6601,
											"end": 6655,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "B4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED"
										},
										{
											"begin": 6626,
											"end": 6633,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6635,
											"end": 6644,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6635,
											"end": 6654,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 6635,
											"end": 6654,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6635,
											"end": 6654,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6601,
											"end": 6655,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6601,
											"end": 6655,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6601,
											"end": 6655,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 6601,
											"end": 6655,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6601,
											"end": 6655,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6601,
											"end": 6655,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6601,
											"end": 6655,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 6601,
											"end": 6655,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6601,
											"end": 6655,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 6601,
											"end": 6655,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6601,
											"end": 6655,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6601,
											"end": 6655,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6601,
											"end": 6655,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6601,
											"end": 6655,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6601,
											"end": 6655,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6601,
											"end": 6655,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6601,
											"end": 6655,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 6128,
											"end": 6662,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6128,
											"end": 6662,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 2568,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 2568,
											"end": 2588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6046,
											"end": 6662,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6046,
											"end": 6662,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6046,
											"end": 6662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10349,
											"end": 10415,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 10349,
											"end": 10415,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10404,
											"end": 10408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10395,
											"end": 10401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3C"
										},
										{
											"begin": 10395,
											"end": 10401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10395,
											"end": 10408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 10395,
											"end": 10408,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 10395,
											"end": 10408,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10395,
											"end": 10408,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10395,
											"end": 10408,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10395,
											"end": 10408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 10395,
											"end": 10408,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 10395,
											"end": 10408,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 10395,
											"end": 10408,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10395,
											"end": 10408,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10395,
											"end": 10408,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10395,
											"end": 10408,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10395,
											"end": 10408,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10395,
											"end": 10408,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 10395,
											"end": 10408,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 10395,
											"end": 10408,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10395,
											"end": 10408,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 10395,
											"end": 10408,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10349,
											"end": 10415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4231,
											"end": 4955,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 4231,
											"end": 4955,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4742,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4997,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5031,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4566,
											"end": 4592,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 4581,
											"end": 4591,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4566,
											"end": 4580,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 4566,
											"end": 4592,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4566,
											"end": 4592,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 4566,
											"end": 4592,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4602,
											"end": 4626,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 4602,
											"end": 4624,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 4602,
											"end": 4626,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4602,
											"end": 4626,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 4602,
											"end": 4626,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4654,
											"end": 4670,
											"modifierDepth": 1,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 4636,
											"end": 4651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3D"
										},
										{
											"begin": 4636,
											"end": 4651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4636,
											"end": 4670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4636,
											"end": 4670,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4636,
											"end": 4670,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4636,
											"end": 4670,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4636,
											"end": 4670,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4636,
											"end": 4670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4636,
											"end": 4670,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4636,
											"end": 4670,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4636,
											"end": 4670,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4636,
											"end": 4670,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4636,
											"end": 4670,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4636,
											"end": 4670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4636,
											"end": 4670,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4636,
											"end": 4670,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4636,
											"end": 4670,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 4636,
											"end": 4670,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4636,
											"end": 4670,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4636,
											"end": 4670,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4691,
											"end": 4700,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 4680,
											"end": 4688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3C"
										},
										{
											"begin": 4680,
											"end": 4688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4680,
											"end": 4700,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4680,
											"end": 4700,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4680,
											"end": 4700,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4680,
											"end": 4700,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4680,
											"end": 4700,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4680,
											"end": 4700,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4680,
											"end": 4700,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4680,
											"end": 4700,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4680,
											"end": 4700,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4680,
											"end": 4700,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4680,
											"end": 4700,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4680,
											"end": 4700,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4680,
											"end": 4700,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4680,
											"end": 4700,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4680,
											"end": 4700,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 4680,
											"end": 4700,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4680,
											"end": 4700,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4680,
											"end": 4700,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4727,
											"end": 4742,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 4710,
											"end": 4724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 4710,
											"end": 4742,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4710,
											"end": 4742,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4710,
											"end": 4742,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4710,
											"end": 4742,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4768,
											"end": 4782,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 4752,
											"end": 4765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 4752,
											"end": 4782,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4752,
											"end": 4782,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4752,
											"end": 4782,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4752,
											"end": 4782,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4813,
											"end": 4832,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4792,
											"end": 4810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 4792,
											"end": 4832,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4792,
											"end": 4832,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4792,
											"end": 4832,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4792,
											"end": 4832,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4857,
											"end": 4870,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4842,
											"end": 4854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 4842,
											"end": 4870,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4842,
											"end": 4870,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4842,
											"end": 4870,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4842,
											"end": 4870,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4896,
											"end": 4910,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4880,
											"end": 4893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3A"
										},
										{
											"begin": 4880,
											"end": 4910,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4880,
											"end": 4910,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4880,
											"end": 4910,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4880,
											"end": 4910,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4935,
											"end": 4948,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4920,
											"end": 4932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3B"
										},
										{
											"begin": 4920,
											"end": 4948,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4920,
											"end": 4948,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4920,
											"end": 4948,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4920,
											"end": 4948,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5070,
											"end": 5084,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5118,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5101,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 5142,
											"end": 5156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4231,
											"end": 4955,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4231,
											"end": 4955,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4231,
											"end": 4955,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4231,
											"end": 4955,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4231,
											"end": 4955,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4231,
											"end": 4955,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4231,
											"end": 4955,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4231,
											"end": 4955,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4231,
											"end": 4955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 2533,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 2533,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 7435,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 6826,
											"end": 7435,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 2526,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2526,
											"end": 2547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 6927,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6930,
											"end": 6938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 6939,
											"end": 6943,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6930,
											"end": 6944,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6930,
											"end": 6944,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6930,
											"end": 6944,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6930,
											"end": 6944,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6930,
											"end": 6944,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 6930,
											"end": 6944,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6930,
											"end": 6944,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 6930,
											"end": 6944,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 6930,
											"end": 6944,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6930,
											"end": 6944,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 6930,
											"end": 6944,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6930,
											"end": 6944,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 6930,
											"end": 6944,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6930,
											"end": 6944,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6930,
											"end": 6944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6930,
											"end": 6944,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6930,
											"end": 6944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6930,
											"end": 6944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6930,
											"end": 6944,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6930,
											"end": 6944,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6930,
											"end": 6944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 6930,
											"end": 6944,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6930,
											"end": 6944,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6906,
											"end": 6944,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6906,
											"end": 6944,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6954,
											"end": 6981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6984,
											"end": 6994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 6984,
											"end": 7000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6995,
											"end": 6999,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6984,
											"end": 7000,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6984,
											"end": 7000,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6984,
											"end": 7000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6984,
											"end": 7000,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6984,
											"end": 7000,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6984,
											"end": 7000,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6984,
											"end": 7000,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6984,
											"end": 7000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6984,
											"end": 7000,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6984,
											"end": 7000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6984,
											"end": 7000,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6984,
											"end": 7012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7001,
											"end": 7011,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 6984,
											"end": 7012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6984,
											"end": 7012,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6984,
											"end": 7012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6984,
											"end": 7012,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6984,
											"end": 7012,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6984,
											"end": 7012,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6984,
											"end": 7012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6984,
											"end": 7012,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6984,
											"end": 7012,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6984,
											"end": 7012,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6984,
											"end": 7012,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6984,
											"end": 7012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6984,
											"end": 7012,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6984,
											"end": 7012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6984,
											"end": 7012,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6954,
											"end": 7012,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6954,
											"end": 7012,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7050,
											"end": 7057,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7030,
											"end": 7039,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7030,
											"end": 7046,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7030,
											"end": 7046,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7030,
											"end": 7046,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7030,
											"end": 7057,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7030,
											"end": 7057,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7022,
											"end": 7088,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 7022,
											"end": 7088,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7022,
											"end": 7088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7022,
											"end": 7088,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7022,
											"end": 7088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7022,
											"end": 7088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7022,
											"end": 7088,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7022,
											"end": 7088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7022,
											"end": 7088,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7022,
											"end": 7088,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 7022,
											"end": 7088,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7022,
											"end": 7088,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 7022,
											"end": 7088,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7022,
											"end": 7088,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 7022,
											"end": 7088,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7022,
											"end": 7088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7022,
											"end": 7088,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7022,
											"end": 7088,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7022,
											"end": 7088,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7022,
											"end": 7088,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7022,
											"end": 7088,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7022,
											"end": 7088,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7022,
											"end": 7088,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 7022,
											"end": 7088,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7125,
											"end": 7134,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7125,
											"end": 7144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 7125,
											"end": 7144,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7125,
											"end": 7144,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7106,
											"end": 7121,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 7106,
											"end": 7144,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7106,
											"end": 7144,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7098,
											"end": 7170,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 7098,
											"end": 7170,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7098,
											"end": 7170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7098,
											"end": 7170,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7098,
											"end": 7170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7098,
											"end": 7170,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7098,
											"end": 7170,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7098,
											"end": 7170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7098,
											"end": 7170,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7098,
											"end": 7170,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 7098,
											"end": 7170,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7098,
											"end": 7170,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 7098,
											"end": 7170,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7098,
											"end": 7170,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 7098,
											"end": 7170,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7098,
											"end": 7170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7098,
											"end": 7170,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7098,
											"end": 7170,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7098,
											"end": 7170,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7098,
											"end": 7170,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7098,
											"end": 7170,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7098,
											"end": 7170,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7098,
											"end": 7170,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 7098,
											"end": 7170,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7181,
											"end": 7198,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 7193,
											"end": 7197,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7181,
											"end": 7192,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 7181,
											"end": 7198,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7181,
											"end": 7198,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 7181,
											"end": 7198,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7208,
											"end": 7240,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 7223,
											"end": 7227,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7229,
											"end": 7239,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 7208,
											"end": 7222,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 7208,
											"end": 7240,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7208,
											"end": 7240,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 7208,
											"end": 7240,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7271,
											"end": 7278,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7251,
											"end": 7260,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7251,
											"end": 7267,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7251,
											"end": 7267,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7251,
											"end": 7267,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7251,
											"end": 7278,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7251,
											"end": 7278,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7251,
											"end": 7278,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7251,
											"end": 7278,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 7251,
											"end": 7278,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7251,
											"end": 7278,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7251,
											"end": 7278,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 7251,
											"end": 7278,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7251,
											"end": 7278,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 7251,
											"end": 7278,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7251,
											"end": 7278,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7251,
											"end": 7278,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7251,
											"end": 7278,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7251,
											"end": 7278,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7251,
											"end": 7278,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7251,
											"end": 7278,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 7251,
											"end": 7278,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7308,
											"end": 7315,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7288,
											"end": 7292,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7288,
											"end": 7304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7288,
											"end": 7304,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7288,
											"end": 7304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7288,
											"end": 7315,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7288,
											"end": 7315,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7288,
											"end": 7315,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7288,
											"end": 7315,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 7288,
											"end": 7315,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7288,
											"end": 7315,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7288,
											"end": 7315,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 7288,
											"end": 7315,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7288,
											"end": 7315,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 7288,
											"end": 7315,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7288,
											"end": 7315,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7288,
											"end": 7315,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7288,
											"end": 7315,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7288,
											"end": 7315,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7288,
											"end": 7315,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7288,
											"end": 7315,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 7288,
											"end": 7315,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7326,
											"end": 7377,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 7357,
											"end": 7367,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 7369,
											"end": 7376,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7326,
											"end": 7330,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7326,
											"end": 7343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7326,
											"end": 7343,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7326,
											"end": 7343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7326,
											"end": 7343,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7326,
											"end": 7343,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7326,
											"end": 7343,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7326,
											"end": 7343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7326,
											"end": 7343,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 7326,
											"end": 7343,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7326,
											"end": 7343,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 7326,
											"end": 7343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7326,
											"end": 7343,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7326,
											"end": 7356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7326,
											"end": 7356,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7326,
											"end": 7356,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 7326,
											"end": 7356,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7326,
											"end": 7377,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7326,
											"end": 7377,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7326,
											"end": 7377,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7326,
											"end": 7377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7326,
											"end": 7377,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7326,
											"end": 7377,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7326,
											"end": 7377,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 7326,
											"end": 7377,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7414,
											"end": 7418,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7402,
											"end": 7412,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 7393,
											"end": 7428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7393,
											"end": 7428,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7393,
											"end": 7428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "7FC4727E062E336010F2C282598EF5F14FACB3DE68CF8195C2F23E1454B2B74E"
										},
										{
											"begin": 7420,
											"end": 7427,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7393,
											"end": 7428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7393,
											"end": 7428,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7393,
											"end": 7428,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 7393,
											"end": 7428,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7393,
											"end": 7428,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7393,
											"end": 7428,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 7393,
											"end": 7428,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7393,
											"end": 7428,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 7393,
											"end": 7428,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7393,
											"end": 7428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7393,
											"end": 7428,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7393,
											"end": 7428,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7393,
											"end": 7428,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7393,
											"end": 7428,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7393,
											"end": 7428,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7393,
											"end": 7428,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 6896,
											"end": 7435,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6896,
											"end": 7435,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 2568,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 2568,
											"end": 2588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6826,
											"end": 7435,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6826,
											"end": 7435,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6826,
											"end": 7435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8693,
											"end": 9092,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 8693,
											"end": 9092,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8793,
											"end": 8794,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8760,
											"end": 8795,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8760,
											"end": 8795,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8760,
											"end": 8769,
											"name": "PUSH",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 8760,
											"end": 8781,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8770,
											"end": 8780,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 8760,
											"end": 8781,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8760,
											"end": 8781,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8760,
											"end": 8781,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8760,
											"end": 8781,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8760,
											"end": 8781,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8760,
											"end": 8781,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8760,
											"end": 8781,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8760,
											"end": 8781,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8760,
											"end": 8781,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8760,
											"end": 8781,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8760,
											"end": 8781,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8760,
											"end": 8781,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8760,
											"end": 8781,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8760,
											"end": 8781,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8760,
											"end": 8781,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8760,
											"end": 8781,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8760,
											"end": 8781,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8760,
											"end": 8781,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8760,
											"end": 8781,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8760,
											"end": 8781,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 8760,
											"end": 8781,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 8760,
											"end": 8781,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8760,
											"end": 8781,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8760,
											"end": 8781,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8760,
											"end": 8781,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8760,
											"end": 8795,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8760,
											"end": 8795,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8760,
											"end": 8795,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 8752,
											"end": 8820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 8752,
											"end": 8820,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8851,
											"end": 8861,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 8838,
											"end": 8861,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8838,
											"end": 8861,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8838,
											"end": 8847,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8838,
											"end": 8861,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8838,
											"end": 8861,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8838,
											"end": 8861,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8830,
											"end": 8887,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 8830,
											"end": 8887,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8830,
											"end": 8887,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8830,
											"end": 8887,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8830,
											"end": 8887,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8830,
											"end": 8887,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8830,
											"end": 8887,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8830,
											"end": 8887,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8830,
											"end": 8887,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8830,
											"end": 8887,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 8830,
											"end": 8887,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8830,
											"end": 8887,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 8830,
											"end": 8887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8830,
											"end": 8887,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 8830,
											"end": 8887,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8830,
											"end": 8887,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8830,
											"end": 8887,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8830,
											"end": 8887,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8830,
											"end": 8887,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8830,
											"end": 8887,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8830,
											"end": 8887,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8830,
											"end": 8887,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8830,
											"end": 8887,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 8830,
											"end": 8887,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8921,
											"end": 8930,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8897,
											"end": 8906,
											"name": "PUSH",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 8897,
											"end": 8918,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8907,
											"end": 8917,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 8897,
											"end": 8918,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8897,
											"end": 8918,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8897,
											"end": 8918,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8897,
											"end": 8918,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8897,
											"end": 8918,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8897,
											"end": 8918,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8897,
											"end": 8918,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8897,
											"end": 8918,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8897,
											"end": 8918,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8897,
											"end": 8918,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8897,
											"end": 8918,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8897,
											"end": 8918,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8897,
											"end": 8918,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8897,
											"end": 8918,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8897,
											"end": 8918,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8897,
											"end": 8918,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8897,
											"end": 8930,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 8897,
											"end": 8930,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 8897,
											"end": 8930,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8897,
											"end": 8930,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8897,
											"end": 8930,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8897,
											"end": 8930,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8897,
											"end": 8930,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 8897,
											"end": 8930,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 8897,
											"end": 8930,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8897,
											"end": 8930,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8897,
											"end": 8930,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8897,
											"end": 8930,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8897,
											"end": 8930,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8897,
											"end": 8930,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 8897,
											"end": 8930,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 8897,
											"end": 8930,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8897,
											"end": 8930,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 8897,
											"end": 8930,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8970,
											"end": 8983,
											"name": "PUSH",
											"source": 10,
											"value": "3A"
										},
										{
											"begin": 8970,
											"end": 8983,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8940,
											"end": 8955,
											"name": "PUSH",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 8940,
											"end": 8966,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8956,
											"end": 8965,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8940,
											"end": 8966,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8940,
											"end": 8966,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8940,
											"end": 8966,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8940,
											"end": 8966,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8940,
											"end": 8966,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8940,
											"end": 8966,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8940,
											"end": 8966,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8940,
											"end": 8966,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8940,
											"end": 8966,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8940,
											"end": 8966,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8940,
											"end": 8966,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8940,
											"end": 8966,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8940,
											"end": 8966,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8940,
											"end": 8966,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8940,
											"end": 8966,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8940,
											"end": 8966,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8940,
											"end": 8983,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8940,
											"end": 8983,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8940,
											"end": 8983,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8940,
											"end": 8983,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 8940,
											"end": 8983,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8940,
											"end": 8983,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8940,
											"end": 8983,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 8940,
											"end": 8983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8940,
											"end": 8983,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 8940,
											"end": 8983,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8940,
											"end": 8983,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8940,
											"end": 8983,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8940,
											"end": 8983,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8940,
											"end": 8983,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8940,
											"end": 8983,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8940,
											"end": 8983,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 8940,
											"end": 8983,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9024,
											"end": 9036,
											"name": "PUSH",
											"source": 10,
											"value": "3B"
										},
										{
											"begin": 9024,
											"end": 9036,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8993,
											"end": 9008,
											"name": "PUSH",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 8993,
											"end": 9020,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9009,
											"end": 9019,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 8993,
											"end": 9020,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8993,
											"end": 9020,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8993,
											"end": 9020,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8993,
											"end": 9020,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8993,
											"end": 9020,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8993,
											"end": 9020,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8993,
											"end": 9020,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8993,
											"end": 9020,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8993,
											"end": 9020,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8993,
											"end": 9020,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8993,
											"end": 9020,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8993,
											"end": 9020,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8993,
											"end": 9020,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8993,
											"end": 9020,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8993,
											"end": 9020,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8993,
											"end": 9020,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8993,
											"end": 9036,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8993,
											"end": 9036,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8993,
											"end": 9036,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8993,
											"end": 9036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 8993,
											"end": 9036,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8993,
											"end": 9036,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8993,
											"end": 9036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 8993,
											"end": 9036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8993,
											"end": 9036,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 8993,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8993,
											"end": 9036,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8993,
											"end": 9036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8993,
											"end": 9036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8993,
											"end": 9036,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8993,
											"end": 9036,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8993,
											"end": 9036,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 8993,
											"end": 9036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9075,
											"end": 9084,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9051,
											"end": 9085,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9051,
											"end": 9085,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9063,
											"end": 9073,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 9051,
											"end": 9085,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9051,
											"end": 9085,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9051,
											"end": 9085,
											"name": "PUSH",
											"source": 10,
											"value": "5F7165288EEF601591CF549E15FF19EF9060B7F71B9C115BE946FA1FE7EBF68A"
										},
										{
											"begin": 9051,
											"end": 9085,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9051,
											"end": 9085,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9051,
											"end": 9085,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9051,
											"end": 9085,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9051,
											"end": 9085,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9051,
											"end": 9085,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9051,
											"end": 9085,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9051,
											"end": 9085,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9051,
											"end": 9085,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 8693,
											"end": 9092,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8693,
											"end": 9092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7554,
											"end": 7928,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 7554,
											"end": 7928,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 2526,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2526,
											"end": 2547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7621,
											"end": 7638,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 7633,
											"end": 7637,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7621,
											"end": 7632,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 7621,
											"end": 7638,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7621,
											"end": 7638,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 7621,
											"end": 7638,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7648,
											"end": 7680,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 7663,
											"end": 7667,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7669,
											"end": 7679,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 7648,
											"end": 7662,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 7648,
											"end": 7680,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7648,
											"end": 7680,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 7648,
											"end": 7680,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7690,
											"end": 7704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7707,
											"end": 7717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 7707,
											"end": 7723,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7718,
											"end": 7722,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7707,
											"end": 7723,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7707,
											"end": 7723,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7707,
											"end": 7723,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7707,
											"end": 7723,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7707,
											"end": 7723,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7707,
											"end": 7723,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7707,
											"end": 7723,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7707,
											"end": 7723,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7707,
											"end": 7723,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7707,
											"end": 7723,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7707,
											"end": 7723,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7707,
											"end": 7735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7724,
											"end": 7734,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 7707,
											"end": 7735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7707,
											"end": 7735,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7707,
											"end": 7735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7707,
											"end": 7735,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7707,
											"end": 7735,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7707,
											"end": 7735,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7707,
											"end": 7735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7707,
											"end": 7735,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7707,
											"end": 7735,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7707,
											"end": 7735,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7707,
											"end": 7735,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7707,
											"end": 7735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7707,
											"end": 7735,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7707,
											"end": 7735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7707,
											"end": 7735,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7707,
											"end": 7746,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7707,
											"end": 7746,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7707,
											"end": 7746,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7690,
											"end": 7746,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7690,
											"end": 7746,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7798,
											"end": 7799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7756,
											"end": 7766,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 7756,
											"end": 7772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7767,
											"end": 7771,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7756,
											"end": 7772,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7756,
											"end": 7772,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7756,
											"end": 7772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7756,
											"end": 7772,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7756,
											"end": 7772,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7756,
											"end": 7772,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7756,
											"end": 7772,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7756,
											"end": 7772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7756,
											"end": 7772,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7756,
											"end": 7772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7756,
											"end": 7772,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7756,
											"end": 7784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7773,
											"end": 7783,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 7756,
											"end": 7784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7756,
											"end": 7784,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7756,
											"end": 7784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7756,
											"end": 7784,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7756,
											"end": 7784,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7756,
											"end": 7784,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7756,
											"end": 7784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7756,
											"end": 7784,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7756,
											"end": 7784,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7756,
											"end": 7784,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7756,
											"end": 7784,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7756,
											"end": 7784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7756,
											"end": 7784,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7756,
											"end": 7784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7756,
											"end": 7784,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7756,
											"end": 7795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7756,
											"end": 7795,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7756,
											"end": 7799,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7756,
											"end": 7799,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7756,
											"end": 7799,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 7756,
											"end": 7799,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7810,
											"end": 7869,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 7850,
											"end": 7860,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 7862,
											"end": 7868,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7810,
											"end": 7818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 7819,
											"end": 7823,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7810,
											"end": 7824,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7810,
											"end": 7824,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7810,
											"end": 7824,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7810,
											"end": 7824,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7810,
											"end": 7824,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 7810,
											"end": 7824,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7810,
											"end": 7824,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 7810,
											"end": 7824,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 7810,
											"end": 7824,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7810,
											"end": 7824,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 7810,
											"end": 7824,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7810,
											"end": 7824,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 7810,
											"end": 7824,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7810,
											"end": 7824,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7810,
											"end": 7824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7810,
											"end": 7824,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7810,
											"end": 7824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7810,
											"end": 7824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7810,
											"end": 7824,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7810,
											"end": 7824,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7810,
											"end": 7824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 7810,
											"end": 7824,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 7810,
											"end": 7824,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7810,
											"end": 7836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7810,
											"end": 7836,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7810,
											"end": 7836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7810,
											"end": 7836,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7810,
											"end": 7836,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7810,
											"end": 7836,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7810,
											"end": 7836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7810,
											"end": 7836,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 7810,
											"end": 7836,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7810,
											"end": 7836,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 7810,
											"end": 7836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7810,
											"end": 7836,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7810,
											"end": 7849,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7810,
											"end": 7849,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7810,
											"end": 7849,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 7810,
											"end": 7849,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7810,
											"end": 7869,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7810,
											"end": 7869,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7810,
											"end": 7869,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7810,
											"end": 7869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7810,
											"end": 7869,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7810,
											"end": 7869,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7810,
											"end": 7869,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 7810,
											"end": 7869,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7908,
											"end": 7912,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7896,
											"end": 7906,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 7885,
											"end": 7921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7885,
											"end": 7921,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7885,
											"end": 7921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "D6F2C8500DF5B44F11E9E48B91FF9F1B9D81BC496D55570C2B1B75BF65243F51"
										},
										{
											"begin": 7914,
											"end": 7920,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7885,
											"end": 7921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7885,
											"end": 7921,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7885,
											"end": 7921,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 7885,
											"end": 7921,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7885,
											"end": 7921,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7885,
											"end": 7921,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 7885,
											"end": 7921,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7885,
											"end": 7921,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 7885,
											"end": 7921,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7885,
											"end": 7921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7885,
											"end": 7921,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7885,
											"end": 7921,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7885,
											"end": 7921,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7885,
											"end": 7921,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7885,
											"end": 7921,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7885,
											"end": 7921,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 7611,
											"end": 7928,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 2568,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 2568,
											"end": 2588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7554,
											"end": 7928,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7554,
											"end": 7928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2228,
											"end": 2257,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 2228,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2228,
											"end": 2257,
											"name": "PUSH",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 2228,
											"end": 2257,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2228,
											"end": 2257,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2228,
											"end": 2257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5888,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 5268,
											"end": 5888,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5461,
											"end": 5469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 5475,
											"end": 5760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5475,
											"end": 5760,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5475,
											"end": 5760,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5475,
											"end": 5760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 5475,
											"end": 5760,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5475,
											"end": 5760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5475,
											"end": 5760,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5475,
											"end": 5760,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5512,
											"end": 5525,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5475,
											"end": 5760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5760,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5475,
											"end": 5760,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5475,
											"end": 5760,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5475,
											"end": 5760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5475,
											"end": 5760,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5552,
											"end": 5564,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5475,
											"end": 5760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5760,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5475,
											"end": 5760,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5475,
											"end": 5760,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5475,
											"end": 5760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5475,
											"end": 5760,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5590,
											"end": 5601,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5475,
											"end": 5760,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5475,
											"end": 5760,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5475,
											"end": 5760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5475,
											"end": 5760,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5629,
											"end": 5642,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5475,
											"end": 5760,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5475,
											"end": 5760,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5475,
											"end": 5760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5475,
											"end": 5760,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5669,
											"end": 5670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5475,
											"end": 5760,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5475,
											"end": 5760,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5475,
											"end": 5760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5475,
											"end": 5760,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5703,
											"end": 5704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5475,
											"end": 5760,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5475,
											"end": 5760,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5475,
											"end": 5760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5475,
											"end": 5760,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5734,
											"end": 5749,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 5475,
											"end": 5760,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5475,
											"end": 5760,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5475,
											"end": 5760,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5761,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5804,
											"end": 5805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5786,
											"end": 5794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 5786,
											"end": 5801,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5786,
											"end": 5801,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5786,
											"end": 5801,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5786,
											"end": 5801,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5786,
											"end": 5805,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 5786,
											"end": 5805,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5786,
											"end": 5805,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5786,
											"end": 5805,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 5786,
											"end": 5805,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5786,
											"end": 5805,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 5786,
											"end": 5805,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5776,
											"end": 5881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "E1111AD6E2CCAF57D3D9AA458493B64BCF6A66C2028304B95772FE72E1FC3612"
										},
										{
											"begin": 5815,
											"end": 5828,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5839,
											"end": 5851,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5854,
											"end": 5865,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5867,
											"end": 5880,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5776,
											"end": 5881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5776,
											"end": 5881,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5776,
											"end": 5881,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 5776,
											"end": 5881,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5776,
											"end": 5881,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5776,
											"end": 5881,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5776,
											"end": 5881,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5776,
											"end": 5881,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5776,
											"end": 5881,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 5776,
											"end": 5881,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5776,
											"end": 5881,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 5776,
											"end": 5881,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5776,
											"end": 5881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5776,
											"end": 5881,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5776,
											"end": 5881,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5776,
											"end": 5881,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5776,
											"end": 5881,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5776,
											"end": 5881,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5776,
											"end": 5881,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5888,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5888,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5888,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5888,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2559,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 2531,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2559,
											"name": "PUSH",
											"source": 10,
											"value": "3A"
										},
										{
											"begin": 2531,
											"end": 2559,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2559,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2602,
											"end": 2629,
											"name": "tag",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 2602,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2602,
											"end": 2629,
											"name": "PUSH",
											"source": 10,
											"value": "3B"
										},
										{
											"begin": 2602,
											"end": 2629,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2602,
											"end": 2629,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2602,
											"end": 2629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2794,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 2760,
											"end": 2794,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2794,
											"name": "PUSH",
											"source": 10,
											"value": "3C"
										},
										{
											"begin": 2760,
											"end": 2794,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2760,
											"end": 2794,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2794,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2794,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2794,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2760,
											"end": 2794,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2794,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2794,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2794,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2760,
											"end": 2794,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2794,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10128,
											"end": 10276,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 10128,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10225,
											"end": 10269,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 10254,
											"end": 10259,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10261,
											"end": 10268,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10225,
											"end": 10240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3D"
										},
										{
											"begin": 10225,
											"end": 10240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10225,
											"end": 10240,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10225,
											"end": 10240,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10225,
											"end": 10240,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10225,
											"end": 10240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 10225,
											"end": 10240,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 10225,
											"end": 10240,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10225,
											"end": 10240,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10225,
											"end": 10240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10225,
											"end": 10240,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10225,
											"end": 10253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10225,
											"end": 10253,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10225,
											"end": 10253,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 10225,
											"end": 10253,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10225,
											"end": 10269,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10225,
											"end": 10269,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10225,
											"end": 10269,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10225,
											"end": 10269,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10225,
											"end": 10269,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10225,
											"end": 10269,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10225,
											"end": 10269,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 10225,
											"end": 10269,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10128,
											"end": 10276,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10128,
											"end": 10276,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10128,
											"end": 10276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2462,
											"end": 2489,
											"name": "tag",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 2462,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2462,
											"end": 2489,
											"name": "PUSH",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 2462,
											"end": 2489,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2462,
											"end": 2489,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2462,
											"end": 2489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3534,
											"end": 3565,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "tag",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "PUSH",
											"source": 10,
											"value": "3D"
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2874,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 2728,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 2728,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 2717,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2717,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 2790,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 2790,
											"end": 2802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2763,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2601,
											"end": 2888,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2601,
											"end": 2888,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1852,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2733,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2733,
											"end": 2740,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2733,
											"end": 2752,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 2725,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1852,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2863,
											"end": 2870,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2601,
											"end": 2888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 996,
											"end": 1182,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 996,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 1109,
											"end": 1114,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1162,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 1139,
											"end": 1162,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1139,
											"end": 1162,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1164,
											"end": 1166,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 1116,
											"end": 1174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "tag",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 1089,
											"end": 1175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 1175,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 1089,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1182,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1182,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1182,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 3103,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 2894,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3074,
											"end": 3081,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3074,
											"end": 3096,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3074,
											"end": 3096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3074,
											"end": 3096,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3074,
											"end": 3096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2894,
											"end": 3103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 3874,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3952,
											"end": 3960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3996,
											"end": 4004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11106,
											"end": 11503,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 11106,
											"end": 11503,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11160,
											"end": 11181,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11184,
											"end": 11192,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 11193,
											"end": 11197,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11184,
											"end": 11198,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11184,
											"end": 11198,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11184,
											"end": 11198,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11184,
											"end": 11198,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 11184,
											"end": 11198,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 11184,
											"end": 11198,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11184,
											"end": 11198,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 11184,
											"end": 11198,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 11184,
											"end": 11198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11184,
											"end": 11198,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 11184,
											"end": 11198,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11184,
											"end": 11198,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 11184,
											"end": 11198,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11184,
											"end": 11198,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11184,
											"end": 11198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11184,
											"end": 11198,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11184,
											"end": 11198,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11184,
											"end": 11198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11184,
											"end": 11198,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 11184,
											"end": 11198,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11184,
											"end": 11198,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 11184,
											"end": 11198,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 11184,
											"end": 11198,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11160,
											"end": 11198,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11160,
											"end": 11198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11231,
											"end": 11232,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11212,
											"end": 11216,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11212,
											"end": 11228,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11212,
											"end": 11228,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11212,
											"end": 11228,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11212,
											"end": 11232,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 11208,
											"end": 11450,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11208,
											"end": 11450,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 11208,
											"end": 11450,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11248,
											"end": 11266,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11287,
											"end": 11291,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11287,
											"end": 11306,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 11287,
											"end": 11306,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11287,
											"end": 11306,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11269,
											"end": 11284,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 11269,
											"end": 11306,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 11269,
											"end": 11306,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11269,
											"end": 11306,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11269,
											"end": 11306,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 11269,
											"end": 11306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11269,
											"end": 11306,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 11269,
											"end": 11306,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11248,
											"end": 11306,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11248,
											"end": 11306,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11320,
											"end": 11334,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11350,
											"end": 11354,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11350,
											"end": 11365,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 11350,
											"end": 11365,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11350,
											"end": 11365,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11337,
											"end": 11347,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11337,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 11337,
											"end": 11365,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11337,
											"end": 11365,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11337,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 11337,
											"end": 11365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11337,
											"end": 11365,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 11337,
											"end": 11365,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11320,
											"end": 11365,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11320,
											"end": 11365,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11423,
											"end": 11427,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11423,
											"end": 11439,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11423,
											"end": 11439,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11423,
											"end": 11439,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11415,
											"end": 11419,
											"name": "PUSH",
											"source": 10,
											"value": "E8D4A51000"
										},
										{
											"begin": 11406,
											"end": 11412,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11406,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 11406,
											"end": 11419,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11406,
											"end": 11419,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11406,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 11406,
											"end": 11419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11406,
											"end": 11419,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 11406,
											"end": 11419,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11405,
											"end": 11439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 11405,
											"end": 11439,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11405,
											"end": 11439,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11405,
											"end": 11439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 11405,
											"end": 11439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11405,
											"end": 11439,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 11405,
											"end": 11439,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11379,
											"end": 11383,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11379,
											"end": 11401,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 11379,
											"end": 11401,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11379,
											"end": 11401,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11379,
											"end": 11439,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11379,
											"end": 11439,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11379,
											"end": 11439,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11379,
											"end": 11439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 11379,
											"end": 11439,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11379,
											"end": 11439,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11379,
											"end": 11439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 11379,
											"end": 11439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11379,
											"end": 11439,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 11379,
											"end": 11439,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11379,
											"end": 11439,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11379,
											"end": 11439,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11379,
											"end": 11439,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11379,
											"end": 11439,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11379,
											"end": 11439,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11379,
											"end": 11439,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 11379,
											"end": 11439,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11234,
											"end": 11450,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11234,
											"end": 11450,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11208,
											"end": 11450,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 11208,
											"end": 11450,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11481,
											"end": 11496,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 11459,
											"end": 11463,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11459,
											"end": 11478,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 11459,
											"end": 11478,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11459,
											"end": 11496,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11459,
											"end": 11496,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11459,
											"end": 11496,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 11459,
											"end": 11496,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11150,
											"end": 11503,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11106,
											"end": 11503,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11106,
											"end": 11503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11662,
											"end": 12455,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 11662,
											"end": 12455,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11734,
											"end": 11755,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11758,
											"end": 11766,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 11767,
											"end": 11771,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11758,
											"end": 11772,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11758,
											"end": 11772,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11758,
											"end": 11772,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11758,
											"end": 11772,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 11758,
											"end": 11772,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 11758,
											"end": 11772,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11758,
											"end": 11772,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 11758,
											"end": 11772,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 11758,
											"end": 11772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11758,
											"end": 11772,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 11758,
											"end": 11772,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11758,
											"end": 11772,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 11758,
											"end": 11772,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11758,
											"end": 11772,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11758,
											"end": 11772,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11758,
											"end": 11772,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11758,
											"end": 11772,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11758,
											"end": 11772,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11758,
											"end": 11772,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 11758,
											"end": 11772,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11758,
											"end": 11772,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 11758,
											"end": 11772,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 11758,
											"end": 11772,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11734,
											"end": 11772,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11734,
											"end": 11772,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11782,
											"end": 11809,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11812,
											"end": 11822,
											"name": "PUSH",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 11812,
											"end": 11828,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11823,
											"end": 11827,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11812,
											"end": 11828,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11812,
											"end": 11828,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11812,
											"end": 11828,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11812,
											"end": 11828,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11812,
											"end": 11828,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11812,
											"end": 11828,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11812,
											"end": 11828,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11812,
											"end": 11828,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11812,
											"end": 11828,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11812,
											"end": 11828,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11812,
											"end": 11828,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 11812,
											"end": 11835,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11829,
											"end": 11834,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11812,
											"end": 11835,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11812,
											"end": 11835,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11812,
											"end": 11835,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11812,
											"end": 11835,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11812,
											"end": 11835,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11812,
											"end": 11835,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11812,
											"end": 11835,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11812,
											"end": 11835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11812,
											"end": 11835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11812,
											"end": 11835,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11812,
											"end": 11835,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11812,
											"end": 11835,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11812,
											"end": 11835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11812,
											"end": 11835,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11812,
											"end": 11835,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 11782,
											"end": 11835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11782,
											"end": 11835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11868,
											"end": 11869,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11849,
											"end": 11858,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11849,
											"end": 11865,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11849,
											"end": 11865,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11849,
											"end": 11865,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11849,
											"end": 11869,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 11845,
											"end": 12449,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11845,
											"end": 12449,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 11845,
											"end": 12449,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11885,
											"end": 11906,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11962,
											"end": 11971,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11962,
											"end": 11982,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 11962,
											"end": 11982,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11962,
											"end": 11982,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11955,
											"end": 11959,
											"name": "PUSH",
											"source": 10,
											"value": "E8D4A51000"
										},
										{
											"begin": 11929,
											"end": 11933,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11929,
											"end": 11951,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 11929,
											"end": 11951,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11929,
											"end": 11951,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11910,
											"end": 11919,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11910,
											"end": 11926,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11910,
											"end": 11926,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11910,
											"end": 11926,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11910,
											"end": 11951,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 11910,
											"end": 11951,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11910,
											"end": 11951,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11910,
											"end": 11951,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 11910,
											"end": 11951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11910,
											"end": 11951,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 11910,
											"end": 11951,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11909,
											"end": 11959,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 11909,
											"end": 11959,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11909,
											"end": 11959,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11909,
											"end": 11959,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 11909,
											"end": 11959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11909,
											"end": 11959,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 11909,
											"end": 11959,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11909,
											"end": 11982,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 11909,
											"end": 11982,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11909,
											"end": 11982,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11909,
											"end": 11982,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 11909,
											"end": 11982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11909,
											"end": 11982,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 11909,
											"end": 11982,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11885,
											"end": 11982,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11885,
											"end": 11982,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11996,
											"end": 12018,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12062,
											"end": 12066,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12062,
											"end": 12079,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 12062,
											"end": 12079,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12062,
											"end": 12079,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 12040,
											"end": 12049,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12040,
											"end": 12059,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 12040,
											"end": 12059,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12040,
											"end": 12059,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 12040,
											"end": 12079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 12040,
											"end": 12079,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12040,
											"end": 12079,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12040,
											"end": 12079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 12040,
											"end": 12079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12040,
											"end": 12079,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 12040,
											"end": 12079,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12021,
											"end": 12036,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 12021,
											"end": 12080,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 12021,
											"end": 12080,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12021,
											"end": 12080,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12021,
											"end": 12080,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 12021,
											"end": 12080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12021,
											"end": 12080,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 12021,
											"end": 12080,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11996,
											"end": 12080,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11996,
											"end": 12080,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12094,
											"end": 12112,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12115,
											"end": 12157,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 12142,
											"end": 12156,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12115,
											"end": 12141,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 12115,
											"end": 12157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12115,
											"end": 12157,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 12115,
											"end": 12157,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12094,
											"end": 12157,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12094,
											"end": 12157,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12235,
											"end": 12249,
											"name": "PUSH",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 12235,
											"end": 12249,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 12221,
											"end": 12231,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12204,
											"end": 12218,
											"name": "PUSH",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 12204,
											"end": 12218,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 12204,
											"end": 12231,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 12204,
											"end": 12231,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12204,
											"end": 12231,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12204,
											"end": 12231,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 12204,
											"end": 12231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12204,
											"end": 12231,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 12204,
											"end": 12231,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12187,
											"end": 12200,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12187,
											"end": 12232,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 12187,
											"end": 12232,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12187,
											"end": 12232,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12187,
											"end": 12232,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 12187,
											"end": 12232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12187,
											"end": 12232,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 12187,
											"end": 12232,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12187,
											"end": 12249,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 12187,
											"end": 12249,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12187,
											"end": 12249,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12187,
											"end": 12249,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 12187,
											"end": 12249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12187,
											"end": 12249,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 12187,
											"end": 12249,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12171,
											"end": 12249,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12171,
											"end": 12249,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12286,
											"end": 12299,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12263,
											"end": 12272,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12263,
											"end": 12283,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 12263,
											"end": 12283,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12263,
											"end": 12299,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12263,
											"end": 12299,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12263,
											"end": 12299,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 12263,
											"end": 12299,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12345,
											"end": 12346,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12317,
											"end": 12325,
											"name": "PUSH",
											"source": 10,
											"value": "3C"
										},
										{
											"begin": 12317,
											"end": 12325,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 12317,
											"end": 12325,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12325,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12325,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12325,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 12317,
											"end": 12325,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12325,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12325,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12325,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12317,
											"end": 12325,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12335,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12317,
											"end": 12335,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12335,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 12336,
											"end": 12341,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 12317,
											"end": 12342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 12317,
											"end": 12342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 12317,
											"end": 12342,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12346,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 12313,
											"end": 12439,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12313,
											"end": 12439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 12313,
											"end": 12439,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12421,
											"end": 12424,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12406,
											"end": 12418,
											"name": "PUSH",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 12406,
											"end": 12418,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 12390,
											"end": 12403,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12390,
											"end": 12418,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 12390,
											"end": 12418,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12390,
											"end": 12418,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12390,
											"end": 12418,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 12390,
											"end": 12418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12390,
											"end": 12418,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 12390,
											"end": 12418,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12390,
											"end": 12424,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 12390,
											"end": 12424,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12390,
											"end": 12424,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12390,
											"end": 12424,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 12390,
											"end": 12424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12390,
											"end": 12424,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 12390,
											"end": 12424,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12366,
											"end": 12375,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12366,
											"end": 12386,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 12366,
											"end": 12386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12366,
											"end": 12386,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12366,
											"end": 12424,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12366,
											"end": 12424,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12366,
											"end": 12424,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 12366,
											"end": 12424,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 12366,
											"end": 12424,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12366,
											"end": 12424,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12366,
											"end": 12424,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 12366,
											"end": 12424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12366,
											"end": 12424,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 12366,
											"end": 12424,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12366,
											"end": 12424,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12366,
											"end": 12424,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12366,
											"end": 12424,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12366,
											"end": 12424,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12366,
											"end": 12424,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12366,
											"end": 12424,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 12366,
											"end": 12424,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12313,
											"end": 12439,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 12313,
											"end": 12439,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11871,
											"end": 12449,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11871,
											"end": 12449,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11871,
											"end": 12449,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11845,
											"end": 12449,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 11845,
											"end": 12449,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11724,
											"end": 12455,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11724,
											"end": 12455,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11662,
											"end": 12455,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11662,
											"end": 12455,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11662,
											"end": 12455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1421,
											"end": 1635,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 1421,
											"end": 1635,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1532,
											"end": 1628,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 1552,
											"end": 1557,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1582,
											"end": 1609,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1582,
											"end": 1609,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1582,
											"end": 1609,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1615,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1617,
											"end": 1619,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1626,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "346"
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 1559,
											"end": 1627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "tag",
											"source": 5,
											"value": "346"
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1627,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 1532,
											"end": 1628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1532,
											"end": 1628,
											"name": "tag",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 1532,
											"end": 1628,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8795,
											"end": 8825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1889,
											"end": 2000,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 1889,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1993,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 1959,
											"end": 1991,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 1959,
											"end": 1993,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1959,
											"end": 1993,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 1959,
											"end": 1993,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1889,
											"end": 2000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 887,
											"end": 983,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 887,
											"end": 983,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 887,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5328,
											"end": 5981,
											"name": "tag",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 5328,
											"end": 5981,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5758,
											"end": 5781,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 5812,
											"end": 5816,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "PUSH",
											"source": 5,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5792,
											"end": 5797,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5811,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5784,
											"end": 5811,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "364"
										},
										{
											"begin": 5784,
											"end": 5811,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "tag",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5758,
											"end": 5853,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5758,
											"end": 5853,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5892,
											"end": 5893,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5871,
											"end": 5881,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5871,
											"end": 5888,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5871,
											"end": 5893,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5871,
											"end": 5927,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5871,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 5871,
											"end": 5927,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5871,
											"end": 5927,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5908,
											"end": 5918,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5897,
											"end": 5927,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5897,
											"end": 5927,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5897,
											"end": 5927,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5897,
											"end": 5927,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5897,
											"end": 5927,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5897,
											"end": 5927,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5897,
											"end": 5927,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5897,
											"end": 5927,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5897,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 5897,
											"end": 5927,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5897,
											"end": 5927,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5897,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 5897,
											"end": 5927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5897,
											"end": 5927,
											"name": "tag",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 5897,
											"end": 5927,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5871,
											"end": 5927,
											"name": "tag",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 5871,
											"end": 5927,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5863,
											"end": 5974,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 5863,
											"end": 5974,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5863,
											"end": 5974,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5863,
											"end": 5974,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5863,
											"end": 5974,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5863,
											"end": 5974,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5863,
											"end": 5974,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5863,
											"end": 5974,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5863,
											"end": 5974,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5863,
											"end": 5974,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 5863,
											"end": 5974,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5863,
											"end": 5974,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 5863,
											"end": 5974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5863,
											"end": 5974,
											"name": "tag",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 5863,
											"end": 5974,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5863,
											"end": 5974,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5863,
											"end": 5974,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5863,
											"end": 5974,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5863,
											"end": 5974,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5863,
											"end": 5974,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5863,
											"end": 5974,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5863,
											"end": 5974,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5863,
											"end": 5974,
											"name": "tag",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 5863,
											"end": 5974,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5409,
											"end": 5981,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5328,
											"end": 5981,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5328,
											"end": 5981,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5328,
											"end": 5981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10761,
											"end": 10998,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 10761,
											"end": 10998,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10844,
											"end": 10851,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10863,
											"end": 10881,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10901,
											"end": 10919,
											"name": "PUSH",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 10901,
											"end": 10919,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10884,
											"end": 10898,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10884,
											"end": 10919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 10884,
											"end": 10919,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10884,
											"end": 10919,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10884,
											"end": 10919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 10884,
											"end": 10919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10884,
											"end": 10919,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 10884,
											"end": 10919,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10863,
											"end": 10919,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10863,
											"end": 10919,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10949,
											"end": 10962,
											"name": "PUSH",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 10949,
											"end": 10962,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10936,
											"end": 10946,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10936,
											"end": 10962,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 10936,
											"end": 10991,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 10936,
											"end": 10991,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10981,
											"end": 10991,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10936,
											"end": 10991,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 10936,
											"end": 10991,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10936,
											"end": 10991,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 10936,
											"end": 10991,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10965,
											"end": 10978,
											"name": "PUSH",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 10965,
											"end": 10978,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10936,
											"end": 10991,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 10936,
											"end": 10991,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10929,
											"end": 10991,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10929,
											"end": 10991,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10929,
											"end": 10991,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10761,
											"end": 10998,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10761,
											"end": 10998,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10761,
											"end": 10998,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10761,
											"end": 10998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 7151,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 7151,
											"end": 7168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "tag",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "D7E6BCF800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "tag",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7084,
											"end": 7225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2125,
											"end": 2156,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 2195,
											"end": 2207,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2176,
											"end": 2208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2115,
											"name": "tag",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 2006,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2086,
											"end": 2093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2086,
											"end": 2108,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2108,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2108,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2108,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4119,
											"end": 4342,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 4119,
											"end": 4342,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4252,
											"end": 4264,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4283,
											"end": 4335,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 4305,
											"end": 4311,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4319,
											"end": 4320,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4322,
											"end": 4334,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4283,
											"end": 4304,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 4283,
											"end": 4335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4283,
											"end": 4335,
											"name": "tag",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 4283,
											"end": 4335,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4335,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4335,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4119,
											"end": 4342,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4119,
											"end": 4342,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4119,
											"end": 4342,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4119,
											"end": 4342,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4119,
											"end": 4342,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4119,
											"end": 4342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "tag",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8537,
											"end": 8541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 8560,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 8560,
											"end": 8586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "tag",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5176,
											"end": 5622,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 5176,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5353,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5398,
											"end": 5403,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5373,
											"end": 5394,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 5373,
											"end": 5403,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5373,
											"end": 5403,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5365,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 5365,
											"end": 5446,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5365,
											"end": 5446,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5365,
											"end": 5446,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5365,
											"end": 5446,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5365,
											"end": 5446,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5365,
											"end": 5446,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5365,
											"end": 5446,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5365,
											"end": 5446,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5365,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 5365,
											"end": 5446,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5365,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 5365,
											"end": 5446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5365,
											"end": 5446,
											"name": "tag",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 5365,
											"end": 5446,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5365,
											"end": 5446,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5365,
											"end": 5446,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5365,
											"end": 5446,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5365,
											"end": 5446,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5365,
											"end": 5446,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5365,
											"end": 5446,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5365,
											"end": 5446,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5365,
											"end": 5446,
											"name": "tag",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 5365,
											"end": 5446,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5457,
											"end": 5469,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5471,
											"end": 5494,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5504,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5498,
											"end": 5509,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5517,
											"end": 5522,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5524,
											"end": 5528,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 5498,
											"end": 5529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "tag",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5456,
											"end": 5529,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5456,
											"end": 5529,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5456,
											"end": 5529,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5456,
											"end": 5529,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 5573,
											"end": 5579,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5581,
											"end": 5588,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5590,
											"end": 5600,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5602,
											"end": 5614,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5546,
											"end": 5572,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 5546,
											"end": 5615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "tag",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5539,
											"end": 5615,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5539,
											"end": 5615,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5539,
											"end": 5615,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5539,
											"end": 5615,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5176,
											"end": 5622,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 5176,
											"end": 5622,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5176,
											"end": 5622,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5176,
											"end": 5622,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5176,
											"end": 5622,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5176,
											"end": 5622,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5176,
											"end": 5622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "tag",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7862,
											"end": 7874,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7890,
											"end": 7897,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7886,
											"end": 8304,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7886,
											"end": 8304,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 7886,
											"end": 8304,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7938,
											"end": 7939,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7917,
											"end": 7927,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7917,
											"end": 7934,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7917,
											"end": 7939,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7913,
											"end": 8199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 7913,
											"end": 8199,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8132,
											"end": 8150,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 8143,
											"end": 8149,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8132,
											"end": 8142,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 8132,
											"end": 8150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8132,
											"end": 8150,
											"name": "tag",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 8132,
											"end": 8150,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 8124,
											"end": 8184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "tag",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7913,
											"end": 8199,
											"name": "tag",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 7913,
											"end": 8199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8219,
											"end": 8229,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8212,
											"end": 8229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8212,
											"end": 8229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8212,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 8212,
											"end": 8229,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7886,
											"end": 8304,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 7886,
											"end": 8304,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8260,
											"end": 8293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 8268,
											"end": 8278,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8280,
											"end": 8292,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8260,
											"end": 8267,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 8260,
											"end": 8293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8260,
											"end": 8293,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 8260,
											"end": 8293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "tag",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7682,
											"end": 8310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1743,
											"name": "tag",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 1423,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1483,
											"end": 1487,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1735,
											"end": 1736,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1706,
											"end": 1736,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1706,
											"end": 1736,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1743,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1743,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1743,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8832,
											"end": 9372,
											"name": "tag",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 8832,
											"end": 9372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9011,
											"end": 9012,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8991,
											"end": 9001,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8991,
											"end": 9008,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8991,
											"end": 9012,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8987,
											"end": 9366,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8987,
											"end": 9366,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 8987,
											"end": 9366,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9219,
											"end": 9229,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9213,
											"end": 9230,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9275,
											"end": 9290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9262,
											"end": 9272,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9258,
											"end": 9260,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9254,
											"end": 9273,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9247,
											"end": 9291,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8987,
											"end": 9366,
											"name": "tag",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 8987,
											"end": 9366,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9342,
											"end": 9354,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 9335,
											"end": 9355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "tag",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "490"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 11,
											"value": "490"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "492"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 11,
											"value": "492"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 769,
											"end": 891,
											"name": "tag",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "497"
										},
										{
											"begin": 860,
											"end": 865,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 842,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 11,
											"value": "497"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 835,
											"end": 840,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 832,
											"end": 867,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 822,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "498"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 879,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 871,
											"end": 883,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 822,
											"end": 885,
											"name": "tag",
											"source": 11,
											"value": "498"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 769,
											"end": 891,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 769,
											"end": 891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "tag",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 943,
											"end": 948,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 987,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 968,
											"end": 988,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 959,
											"end": 988,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 959,
											"end": 988,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "500"
										},
										{
											"begin": 1024,
											"end": 1029,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 997,
											"end": 1030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "tag",
											"source": 11,
											"value": "500"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 897,
											"end": 1036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1042,
											"end": 1516,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 1042,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1110,
											"end": 1116,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1124,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1167,
											"end": 1169,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 1164,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1146,
											"end": 1153,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1142,
											"end": 1165,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1138,
											"end": 1170,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1135,
											"end": 1254,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1135,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "502"
										},
										{
											"begin": 1135,
											"end": 1254,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1173,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "503"
										},
										{
											"begin": 1173,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 1173,
											"end": 1252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1173,
											"end": 1252,
											"name": "tag",
											"source": 11,
											"value": "503"
										},
										{
											"begin": 1173,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1135,
											"end": 1254,
											"name": "tag",
											"source": 11,
											"value": "502"
										},
										{
											"begin": 1135,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1294,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1318,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "504"
										},
										{
											"begin": 1363,
											"end": 1370,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1354,
											"end": 1360,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1343,
											"end": 1352,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1339,
											"end": 1361,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1318,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 1318,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1318,
											"end": 1371,
											"name": "tag",
											"source": 11,
											"value": "504"
										},
										{
											"begin": 1318,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1308,
											"end": 1371,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1308,
											"end": 1371,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1264,
											"end": 1381,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1420,
											"end": 1422,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1446,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "505"
										},
										{
											"begin": 1491,
											"end": 1498,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1482,
											"end": 1488,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1471,
											"end": 1480,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1467,
											"end": 1489,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1446,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 1446,
											"end": 1499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1446,
											"end": 1499,
											"name": "tag",
											"source": 11,
											"value": "505"
										},
										{
											"begin": 1446,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1436,
											"end": 1499,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1436,
											"end": 1499,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1391,
											"end": 1509,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1042,
											"end": 1516,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1042,
											"end": 1516,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1042,
											"end": 1516,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1042,
											"end": 1516,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1042,
											"end": 1516,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1042,
											"end": 1516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1522,
											"end": 1851,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 1522,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1581,
											"end": 1587,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1630,
											"end": 1632,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1618,
											"end": 1627,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1609,
											"end": 1616,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1605,
											"end": 1628,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1601,
											"end": 1633,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1598,
											"end": 1717,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1598,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "507"
										},
										{
											"begin": 1598,
											"end": 1717,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "508"
										},
										{
											"begin": 1636,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 1636,
											"end": 1715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1715,
											"name": "tag",
											"source": 11,
											"value": "508"
										},
										{
											"begin": 1636,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1598,
											"end": 1717,
											"name": "tag",
											"source": 11,
											"value": "507"
										},
										{
											"begin": 1598,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1756,
											"end": 1757,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1781,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "509"
										},
										{
											"begin": 1826,
											"end": 1833,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1817,
											"end": 1823,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1806,
											"end": 1815,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1802,
											"end": 1824,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1781,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 1781,
											"end": 1834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1781,
											"end": 1834,
											"name": "tag",
											"source": 11,
											"value": "509"
										},
										{
											"begin": 1781,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1771,
											"end": 1834,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1771,
											"end": 1834,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1727,
											"end": 1844,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1522,
											"end": 1851,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1522,
											"end": 1851,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1522,
											"end": 1851,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1522,
											"end": 1851,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1522,
											"end": 1851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1857,
											"end": 1983,
											"name": "tag",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 1857,
											"end": 1983,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1894,
											"end": 1901,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1934,
											"end": 1976,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1927,
											"end": 1932,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1923,
											"end": 1977,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1912,
											"end": 1977,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1912,
											"end": 1977,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1857,
											"end": 1983,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1857,
											"end": 1983,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1857,
											"end": 1983,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1857,
											"end": 1983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1989,
											"end": 2049,
											"name": "tag",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 1989,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2020,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2038,
											"end": 2043,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2043,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2043,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1989,
											"end": 2049,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1989,
											"end": 2049,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1989,
											"end": 2049,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1989,
											"end": 2049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2055,
											"end": 2197,
											"name": "tag",
											"source": 11,
											"value": "430"
										},
										{
											"begin": 2055,
											"end": 2197,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2138,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "513"
										},
										{
											"begin": 2156,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "514"
										},
										{
											"begin": 2165,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "515"
										},
										{
											"begin": 2183,
											"end": 2188,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2165,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 2165,
											"end": 2189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2165,
											"end": 2189,
											"name": "tag",
											"source": 11,
											"value": "515"
										},
										{
											"begin": 2165,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2156,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 2156,
											"end": 2190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2156,
											"end": 2190,
											"name": "tag",
											"source": 11,
											"value": "514"
										},
										{
											"begin": 2156,
											"end": 2190,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2138,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 2138,
											"end": 2191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2138,
											"end": 2191,
											"name": "tag",
											"source": 11,
											"value": "513"
										},
										{
											"begin": 2138,
											"end": 2191,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2125,
											"end": 2191,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2125,
											"end": 2191,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2055,
											"end": 2197,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2055,
											"end": 2197,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2055,
											"end": 2197,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2055,
											"end": 2197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2203,
											"end": 2329,
											"name": "tag",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 2203,
											"end": 2329,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2262,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2286,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "517"
										},
										{
											"begin": 2317,
											"end": 2322,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2286,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "430"
										},
										{
											"begin": 2286,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2286,
											"end": 2323,
											"name": "tag",
											"source": 11,
											"value": "517"
										},
										{
											"begin": 2286,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2273,
											"end": 2323,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2273,
											"end": 2323,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2203,
											"end": 2329,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2203,
											"end": 2329,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2203,
											"end": 2329,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2203,
											"end": 2329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2335,
											"end": 2486,
											"name": "tag",
											"source": 11,
											"value": "432"
										},
										{
											"begin": 2335,
											"end": 2486,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2410,
											"end": 2419,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2443,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "519"
										},
										{
											"begin": 2474,
											"end": 2479,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 2443,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2480,
											"name": "tag",
											"source": 11,
											"value": "519"
										},
										{
											"begin": 2443,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2430,
											"end": 2480,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2430,
											"end": 2480,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2335,
											"end": 2486,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2335,
											"end": 2486,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2335,
											"end": 2486,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2335,
											"end": 2486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2492,
											"end": 2673,
											"name": "tag",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 2492,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2604,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "521"
										},
										{
											"begin": 2660,
											"end": 2665,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2604,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "432"
										},
										{
											"begin": 2604,
											"end": 2666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2604,
											"end": 2666,
											"name": "tag",
											"source": 11,
											"value": "521"
										},
										{
											"begin": 2604,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2602,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2592,
											"end": 2667,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2492,
											"end": 2673,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2492,
											"end": 2673,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2492,
											"end": 2673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2679,
											"end": 3665,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 2679,
											"end": 3665,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2990,
											"end": 2994,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3028,
											"end": 3031,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 3017,
											"end": 3026,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3013,
											"end": 3032,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3042,
											"end": 3138,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "523"
										},
										{
											"begin": 3135,
											"end": 3136,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3124,
											"end": 3133,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3120,
											"end": 3137,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3111,
											"end": 3117,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 3042,
											"end": 3138,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 3042,
											"end": 3138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3042,
											"end": 3138,
											"name": "tag",
											"source": 11,
											"value": "523"
										},
										{
											"begin": 3042,
											"end": 3138,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3148,
											"end": 3245,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "524"
										},
										{
											"begin": 3241,
											"end": 3243,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3230,
											"end": 3239,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3226,
											"end": 3244,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3217,
											"end": 3223,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 3148,
											"end": 3245,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 3148,
											"end": 3245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3148,
											"end": 3245,
											"name": "tag",
											"source": 11,
											"value": "524"
										},
										{
											"begin": 3148,
											"end": 3245,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3255,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "525"
										},
										{
											"begin": 3323,
											"end": 3325,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3308,
											"end": 3326,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 3255,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 3255,
											"end": 3327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3255,
											"end": 3327,
											"name": "tag",
											"source": 11,
											"value": "525"
										},
										{
											"begin": 3255,
											"end": 3327,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3337,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "526"
										},
										{
											"begin": 3405,
											"end": 3407,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3394,
											"end": 3403,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3381,
											"end": 3387,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3337,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 3337,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3337,
											"end": 3409,
											"name": "tag",
											"source": 11,
											"value": "526"
										},
										{
											"begin": 3337,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3419,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "527"
										},
										{
											"begin": 3487,
											"end": 3490,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 3476,
											"end": 3485,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3472,
											"end": 3491,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3469,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3419,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 3419,
											"end": 3492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3419,
											"end": 3492,
											"name": "tag",
											"source": 11,
											"value": "527"
										},
										{
											"begin": 3419,
											"end": 3492,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3502,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "528"
										},
										{
											"begin": 3570,
											"end": 3573,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 3559,
											"end": 3568,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3555,
											"end": 3574,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3546,
											"end": 3552,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3502,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 3502,
											"end": 3575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3502,
											"end": 3575,
											"name": "tag",
											"source": 11,
											"value": "528"
										},
										{
											"begin": 3502,
											"end": 3575,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3585,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "529"
										},
										{
											"begin": 3653,
											"end": 3656,
											"name": "PUSH",
											"source": 11,
											"value": "C0"
										},
										{
											"begin": 3642,
											"end": 3651,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3638,
											"end": 3657,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3629,
											"end": 3635,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3585,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 3585,
											"end": 3658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3585,
											"end": 3658,
											"name": "tag",
											"source": 11,
											"value": "529"
										},
										{
											"begin": 3585,
											"end": 3658,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2679,
											"end": 3665,
											"name": "SWAP9",
											"source": 11
										},
										{
											"begin": 2679,
											"end": 3665,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 2679,
											"end": 3665,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2679,
											"end": 3665,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2679,
											"end": 3665,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2679,
											"end": 3665,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2679,
											"end": 3665,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2679,
											"end": 3665,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2679,
											"end": 3665,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2679,
											"end": 3665,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2679,
											"end": 3665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3671,
											"end": 3767,
											"name": "tag",
											"source": 11,
											"value": "434"
										},
										{
											"begin": 3671,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3708,
											"end": 3715,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3737,
											"end": 3761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "531"
										},
										{
											"begin": 3755,
											"end": 3760,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3737,
											"end": 3761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 3737,
											"end": 3761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3737,
											"end": 3761,
											"name": "tag",
											"source": 11,
											"value": "531"
										},
										{
											"begin": 3737,
											"end": 3761,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3726,
											"end": 3761,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3726,
											"end": 3761,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3671,
											"end": 3767,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3671,
											"end": 3767,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3671,
											"end": 3767,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3671,
											"end": 3767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3773,
											"end": 3895,
											"name": "tag",
											"source": 11,
											"value": "435"
										},
										{
											"begin": 3773,
											"end": 3895,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3846,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "533"
										},
										{
											"begin": 3864,
											"end": 3869,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3846,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "434"
										},
										{
											"begin": 3846,
											"end": 3870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3846,
											"end": 3870,
											"name": "tag",
											"source": 11,
											"value": "533"
										},
										{
											"begin": 3846,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3839,
											"end": 3844,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3836,
											"end": 3871,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3826,
											"end": 3889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "534"
										},
										{
											"begin": 3826,
											"end": 3889,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3885,
											"end": 3886,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3882,
											"end": 3883,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3875,
											"end": 3887,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3826,
											"end": 3889,
											"name": "tag",
											"source": 11,
											"value": "534"
										},
										{
											"begin": 3826,
											"end": 3889,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3773,
											"end": 3895,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3773,
											"end": 3895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3901,
											"end": 4040,
											"name": "tag",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 3901,
											"end": 4040,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3947,
											"end": 3952,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3985,
											"end": 3991,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3972,
											"end": 3992,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3963,
											"end": 3992,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3963,
											"end": 3992,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4001,
											"end": 4034,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "536"
										},
										{
											"begin": 4028,
											"end": 4033,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4001,
											"end": 4034,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "435"
										},
										{
											"begin": 4001,
											"end": 4034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4001,
											"end": 4034,
											"name": "tag",
											"source": 11,
											"value": "536"
										},
										{
											"begin": 4001,
											"end": 4034,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3901,
											"end": 4040,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3901,
											"end": 4040,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3901,
											"end": 4040,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3901,
											"end": 4040,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3901,
											"end": 4040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4046,
											"end": 4520,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 4046,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4114,
											"end": 4120,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4122,
											"end": 4128,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4171,
											"end": 4173,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4159,
											"end": 4168,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4150,
											"end": 4157,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4142,
											"end": 4174,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4139,
											"end": 4258,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4139,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "538"
										},
										{
											"begin": 4139,
											"end": 4258,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4177,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "539"
										},
										{
											"begin": 4177,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 4177,
											"end": 4256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4177,
											"end": 4256,
											"name": "tag",
											"source": 11,
											"value": "539"
										},
										{
											"begin": 4177,
											"end": 4256,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4139,
											"end": 4258,
											"name": "tag",
											"source": 11,
											"value": "538"
										},
										{
											"begin": 4139,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4297,
											"end": 4298,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4322,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "540"
										},
										{
											"begin": 4367,
											"end": 4374,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4358,
											"end": 4364,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4347,
											"end": 4356,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4343,
											"end": 4365,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4322,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 4322,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4322,
											"end": 4375,
											"name": "tag",
											"source": 11,
											"value": "540"
										},
										{
											"begin": 4322,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4312,
											"end": 4375,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4312,
											"end": 4375,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4268,
											"end": 4385,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4424,
											"end": 4426,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4450,
											"end": 4503,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "541"
										},
										{
											"begin": 4495,
											"end": 4502,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4475,
											"end": 4484,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4471,
											"end": 4493,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4450,
											"end": 4503,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 4450,
											"end": 4503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4450,
											"end": 4503,
											"name": "tag",
											"source": 11,
											"value": "541"
										},
										{
											"begin": 4450,
											"end": 4503,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4440,
											"end": 4503,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4440,
											"end": 4503,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4395,
											"end": 4513,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4046,
											"end": 4520,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4046,
											"end": 4520,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4046,
											"end": 4520,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4046,
											"end": 4520,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4046,
											"end": 4520,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4046,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4526,
											"end": 4968,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 4526,
											"end": 4968,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4675,
											"end": 4679,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4713,
											"end": 4715,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4702,
											"end": 4711,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4698,
											"end": 4716,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4716,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4716,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4726,
											"end": 4797,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "543"
										},
										{
											"begin": 4794,
											"end": 4795,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4783,
											"end": 4792,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4779,
											"end": 4796,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4770,
											"end": 4776,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4726,
											"end": 4797,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 4726,
											"end": 4797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4726,
											"end": 4797,
											"name": "tag",
											"source": 11,
											"value": "543"
										},
										{
											"begin": 4726,
											"end": 4797,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4807,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "544"
										},
										{
											"begin": 4875,
											"end": 4877,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4864,
											"end": 4873,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4860,
											"end": 4878,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4851,
											"end": 4857,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4807,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 4807,
											"end": 4879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4807,
											"end": 4879,
											"name": "tag",
											"source": 11,
											"value": "544"
										},
										{
											"begin": 4807,
											"end": 4879,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4889,
											"end": 4961,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "545"
										},
										{
											"begin": 4957,
											"end": 4959,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4946,
											"end": 4955,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4942,
											"end": 4960,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4933,
											"end": 4939,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4889,
											"end": 4961,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 4889,
											"end": 4961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4889,
											"end": 4961,
											"name": "tag",
											"source": 11,
											"value": "545"
										},
										{
											"begin": 4889,
											"end": 4961,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4526,
											"end": 4968,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 4526,
											"end": 4968,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4526,
											"end": 4968,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4526,
											"end": 4968,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4526,
											"end": 4968,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4526,
											"end": 4968,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4526,
											"end": 4968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4974,
											"end": 5303,
											"name": "tag",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 4974,
											"end": 5303,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5033,
											"end": 5039,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5082,
											"end": 5084,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5070,
											"end": 5079,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5061,
											"end": 5068,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5057,
											"end": 5080,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5053,
											"end": 5085,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5050,
											"end": 5169,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5050,
											"end": 5169,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "547"
										},
										{
											"begin": 5050,
											"end": 5169,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "548"
										},
										{
											"begin": 5088,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 5088,
											"end": 5167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5167,
											"name": "tag",
											"source": 11,
											"value": "548"
										},
										{
											"begin": 5088,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5050,
											"end": 5169,
											"name": "tag",
											"source": 11,
											"value": "547"
										},
										{
											"begin": 5050,
											"end": 5169,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5208,
											"end": 5209,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5233,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "549"
										},
										{
											"begin": 5278,
											"end": 5285,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5269,
											"end": 5275,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5258,
											"end": 5267,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5254,
											"end": 5276,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5233,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 5233,
											"end": 5286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5233,
											"end": 5286,
											"name": "tag",
											"source": 11,
											"value": "549"
										},
										{
											"begin": 5233,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5223,
											"end": 5286,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5223,
											"end": 5286,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5179,
											"end": 5296,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4974,
											"end": 5303,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4974,
											"end": 5303,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4974,
											"end": 5303,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4974,
											"end": 5303,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4974,
											"end": 5303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5309,
											"end": 5427,
											"name": "tag",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 5309,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5396,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "551"
										},
										{
											"begin": 5414,
											"end": 5419,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5396,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "434"
										},
										{
											"begin": 5396,
											"end": 5420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5396,
											"end": 5420,
											"name": "tag",
											"source": 11,
											"value": "551"
										},
										{
											"begin": 5396,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5391,
											"end": 5394,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5384,
											"end": 5421,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5309,
											"end": 5427,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5309,
											"end": 5427,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5309,
											"end": 5427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5433,
											"end": 5655,
											"name": "tag",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 5433,
											"end": 5655,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5526,
											"end": 5530,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5564,
											"end": 5566,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5553,
											"end": 5562,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5567,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5541,
											"end": 5567,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5541,
											"end": 5567,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5577,
											"end": 5648,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "553"
										},
										{
											"begin": 5645,
											"end": 5646,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5634,
											"end": 5643,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5630,
											"end": 5647,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5621,
											"end": 5627,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5577,
											"end": 5648,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 5577,
											"end": 5648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5577,
											"end": 5648,
											"name": "tag",
											"source": 11,
											"value": "553"
										},
										{
											"begin": 5577,
											"end": 5648,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5433,
											"end": 5655,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5433,
											"end": 5655,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5433,
											"end": 5655,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5433,
											"end": 5655,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5433,
											"end": 5655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5661,
											"end": 5751,
											"name": "tag",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 5661,
											"end": 5751,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5695,
											"end": 5702,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5738,
											"end": 5743,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5731,
											"end": 5744,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5724,
											"end": 5745,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5713,
											"end": 5745,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5713,
											"end": 5745,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5661,
											"end": 5751,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5661,
											"end": 5751,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5661,
											"end": 5751,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5661,
											"end": 5751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5757,
											"end": 5866,
											"name": "tag",
											"source": 11,
											"value": "439"
										},
										{
											"begin": 5757,
											"end": 5866,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5838,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "556"
										},
										{
											"begin": 5853,
											"end": 5858,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5838,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 5838,
											"end": 5859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5838,
											"end": 5859,
											"name": "tag",
											"source": 11,
											"value": "556"
										},
										{
											"begin": 5838,
											"end": 5859,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5833,
											"end": 5836,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5826,
											"end": 5860,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5757,
											"end": 5866,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5757,
											"end": 5866,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5757,
											"end": 5866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5872,
											"end": 6082,
											"name": "tag",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 5872,
											"end": 6082,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5959,
											"end": 5963,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5997,
											"end": 5999,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5986,
											"end": 5995,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5982,
											"end": 6000,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6000,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6000,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6010,
											"end": 6075,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "558"
										},
										{
											"begin": 6072,
											"end": 6073,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6061,
											"end": 6070,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6057,
											"end": 6074,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6048,
											"end": 6054,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6010,
											"end": 6075,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "439"
										},
										{
											"begin": 6010,
											"end": 6075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6010,
											"end": 6075,
											"name": "tag",
											"source": 11,
											"value": "558"
										},
										{
											"begin": 6010,
											"end": 6075,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5872,
											"end": 6082,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5872,
											"end": 6082,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5872,
											"end": 6082,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5872,
											"end": 6082,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5872,
											"end": 6082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6088,
											"end": 6209,
											"name": "tag",
											"source": 11,
											"value": "440"
										},
										{
											"begin": 6088,
											"end": 6209,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6150,
											"end": 6157,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "560"
										},
										{
											"begin": 6197,
											"end": 6202,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6179,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "434"
										},
										{
											"begin": 6179,
											"end": 6203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6179,
											"end": 6203,
											"name": "tag",
											"source": 11,
											"value": "560"
										},
										{
											"begin": 6179,
											"end": 6203,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6168,
											"end": 6203,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6168,
											"end": 6203,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6088,
											"end": 6209,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6088,
											"end": 6209,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6088,
											"end": 6209,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6088,
											"end": 6209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6215,
											"end": 6387,
											"name": "tag",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 6215,
											"end": 6387,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6313,
											"end": 6362,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "562"
										},
										{
											"begin": 6356,
											"end": 6361,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6313,
											"end": 6362,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "440"
										},
										{
											"begin": 6313,
											"end": 6362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6313,
											"end": 6362,
											"name": "tag",
											"source": 11,
											"value": "562"
										},
										{
											"begin": 6313,
											"end": 6362,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6306,
											"end": 6311,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6303,
											"end": 6363,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 6293,
											"end": 6381,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "563"
										},
										{
											"begin": 6293,
											"end": 6381,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6377,
											"end": 6378,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6374,
											"end": 6375,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6367,
											"end": 6379,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6293,
											"end": 6381,
											"name": "tag",
											"source": 11,
											"value": "563"
										},
										{
											"begin": 6293,
											"end": 6381,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6215,
											"end": 6387,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6215,
											"end": 6387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6393,
											"end": 6582,
											"name": "tag",
											"source": 11,
											"value": "442"
										},
										{
											"begin": 6393,
											"end": 6582,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6464,
											"end": 6469,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6502,
											"end": 6508,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6489,
											"end": 6509,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 6480,
											"end": 6509,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6480,
											"end": 6509,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6518,
											"end": 6576,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "565"
										},
										{
											"begin": 6570,
											"end": 6575,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6518,
											"end": 6576,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 6518,
											"end": 6576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6518,
											"end": 6576,
											"name": "tag",
											"source": 11,
											"value": "565"
										},
										{
											"begin": 6518,
											"end": 6576,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6393,
											"end": 6582,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6393,
											"end": 6582,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6393,
											"end": 6582,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6393,
											"end": 6582,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6393,
											"end": 6582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6588,
											"end": 6711,
											"name": "tag",
											"source": 11,
											"value": "443"
										},
										{
											"begin": 6588,
											"end": 6711,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6652,
											"end": 6659,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6681,
											"end": 6705,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "567"
										},
										{
											"begin": 6699,
											"end": 6704,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6681,
											"end": 6705,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "434"
										},
										{
											"begin": 6681,
											"end": 6705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6681,
											"end": 6705,
											"name": "tag",
											"source": 11,
											"value": "567"
										},
										{
											"begin": 6681,
											"end": 6705,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6670,
											"end": 6705,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6670,
											"end": 6705,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6588,
											"end": 6711,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6588,
											"end": 6711,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6588,
											"end": 6711,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6588,
											"end": 6711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6717,
											"end": 6893,
											"name": "tag",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 6717,
											"end": 6893,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6817,
											"end": 6868,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "569"
										},
										{
											"begin": 6862,
											"end": 6867,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6817,
											"end": 6868,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "443"
										},
										{
											"begin": 6817,
											"end": 6868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6817,
											"end": 6868,
											"name": "tag",
											"source": 11,
											"value": "569"
										},
										{
											"begin": 6817,
											"end": 6868,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6810,
											"end": 6815,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6807,
											"end": 6869,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 6797,
											"end": 6887,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "570"
										},
										{
											"begin": 6797,
											"end": 6887,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6883,
											"end": 6884,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6880,
											"end": 6881,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6873,
											"end": 6885,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6797,
											"end": 6887,
											"name": "tag",
											"source": 11,
											"value": "570"
										},
										{
											"begin": 6797,
											"end": 6887,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6717,
											"end": 6893,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6717,
											"end": 6893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6899,
											"end": 7092,
											"name": "tag",
											"source": 11,
											"value": "445"
										},
										{
											"begin": 6899,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6972,
											"end": 6977,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7010,
											"end": 7016,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6997,
											"end": 7017,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 6988,
											"end": 7017,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6988,
											"end": 7017,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7026,
											"end": 7086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "572"
										},
										{
											"begin": 7080,
											"end": 7085,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7026,
											"end": 7086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 7026,
											"end": 7086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7026,
											"end": 7086,
											"name": "tag",
											"source": 11,
											"value": "572"
										},
										{
											"begin": 7026,
											"end": 7086,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6899,
											"end": 7092,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6899,
											"end": 7092,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6899,
											"end": 7092,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6899,
											"end": 7092,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6899,
											"end": 7092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7098,
											"end": 8551,
											"name": "tag",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 7098,
											"end": 8551,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7272,
											"end": 7278,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7280,
											"end": 7286,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7288,
											"end": 7294,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7296,
											"end": 7302,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7304,
											"end": 7310,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7312,
											"end": 7318,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7320,
											"end": 7326,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7328,
											"end": 7334,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7377,
											"end": 7380,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 7365,
											"end": 7374,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 7356,
											"end": 7363,
											"name": "DUP12",
											"source": 11
										},
										{
											"begin": 7352,
											"end": 7375,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7348,
											"end": 7381,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 7345,
											"end": 7465,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7345,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "574"
										},
										{
											"begin": 7345,
											"end": 7465,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7384,
											"end": 7463,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "575"
										},
										{
											"begin": 7384,
											"end": 7463,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 7384,
											"end": 7463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7384,
											"end": 7463,
											"name": "tag",
											"source": 11,
											"value": "575"
										},
										{
											"begin": 7384,
											"end": 7463,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7345,
											"end": 7465,
											"name": "tag",
											"source": 11,
											"value": "574"
										},
										{
											"begin": 7345,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7504,
											"end": 7505,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7529,
											"end": 7607,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "576"
										},
										{
											"begin": 7599,
											"end": 7606,
											"name": "DUP12",
											"source": 11
										},
										{
											"begin": 7590,
											"end": 7596,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7579,
											"end": 7588,
											"name": "DUP13",
											"source": 11
										},
										{
											"begin": 7575,
											"end": 7597,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7529,
											"end": 7607,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "442"
										},
										{
											"begin": 7529,
											"end": 7607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7529,
											"end": 7607,
											"name": "tag",
											"source": 11,
											"value": "576"
										},
										{
											"begin": 7529,
											"end": 7607,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7519,
											"end": 7607,
											"name": "SWAP9",
											"source": 11
										},
										{
											"begin": 7519,
											"end": 7607,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7475,
											"end": 7617,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7656,
											"end": 7658,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7682,
											"end": 7762,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "577"
										},
										{
											"begin": 7754,
											"end": 7761,
											"name": "DUP12",
											"source": 11
										},
										{
											"begin": 7745,
											"end": 7751,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7734,
											"end": 7743,
											"name": "DUP13",
											"source": 11
										},
										{
											"begin": 7730,
											"end": 7752,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7682,
											"end": 7762,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "445"
										},
										{
											"begin": 7682,
											"end": 7762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7682,
											"end": 7762,
											"name": "tag",
											"source": 11,
											"value": "577"
										},
										{
											"begin": 7682,
											"end": 7762,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7672,
											"end": 7762,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 7672,
											"end": 7762,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7627,
											"end": 7772,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7811,
											"end": 7813,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7837,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "578"
										},
										{
											"begin": 7882,
											"end": 7889,
											"name": "DUP12",
											"source": 11
										},
										{
											"begin": 7873,
											"end": 7879,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7862,
											"end": 7871,
											"name": "DUP13",
											"source": 11
										},
										{
											"begin": 7858,
											"end": 7880,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7837,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 7837,
											"end": 7890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7837,
											"end": 7890,
											"name": "tag",
											"source": 11,
											"value": "578"
										},
										{
											"begin": 7837,
											"end": 7890,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7827,
											"end": 7890,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 7827,
											"end": 7890,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7782,
											"end": 7900,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7939,
											"end": 7941,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7965,
											"end": 8018,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "579"
										},
										{
											"begin": 8010,
											"end": 8017,
											"name": "DUP12",
											"source": 11
										},
										{
											"begin": 8001,
											"end": 8007,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7990,
											"end": 7999,
											"name": "DUP13",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8008,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7965,
											"end": 8018,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 7965,
											"end": 8018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7965,
											"end": 8018,
											"name": "tag",
											"source": 11,
											"value": "579"
										},
										{
											"begin": 7965,
											"end": 8018,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7955,
											"end": 8018,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 7955,
											"end": 8018,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7910,
											"end": 8028,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8067,
											"end": 8070,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 8094,
											"end": 8147,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "580"
										},
										{
											"begin": 8139,
											"end": 8146,
											"name": "DUP12",
											"source": 11
										},
										{
											"begin": 8130,
											"end": 8136,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8119,
											"end": 8128,
											"name": "DUP13",
											"source": 11
										},
										{
											"begin": 8115,
											"end": 8137,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8094,
											"end": 8147,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 8094,
											"end": 8147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8094,
											"end": 8147,
											"name": "tag",
											"source": 11,
											"value": "580"
										},
										{
											"begin": 8094,
											"end": 8147,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8084,
											"end": 8147,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 8084,
											"end": 8147,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8038,
											"end": 8157,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8196,
											"end": 8199,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 8223,
											"end": 8276,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "581"
										},
										{
											"begin": 8268,
											"end": 8275,
											"name": "DUP12",
											"source": 11
										},
										{
											"begin": 8259,
											"end": 8265,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8248,
											"end": 8257,
											"name": "DUP13",
											"source": 11
										},
										{
											"begin": 8244,
											"end": 8266,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8223,
											"end": 8276,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 8223,
											"end": 8276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8223,
											"end": 8276,
											"name": "tag",
											"source": 11,
											"value": "581"
										},
										{
											"begin": 8223,
											"end": 8276,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8213,
											"end": 8276,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 8213,
											"end": 8276,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8167,
											"end": 8286,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8325,
											"end": 8328,
											"name": "PUSH",
											"source": 11,
											"value": "C0"
										},
										{
											"begin": 8352,
											"end": 8405,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "582"
										},
										{
											"begin": 8397,
											"end": 8404,
											"name": "DUP12",
											"source": 11
										},
										{
											"begin": 8388,
											"end": 8394,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8377,
											"end": 8386,
											"name": "DUP13",
											"source": 11
										},
										{
											"begin": 8373,
											"end": 8395,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8352,
											"end": 8405,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 8352,
											"end": 8405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8352,
											"end": 8405,
											"name": "tag",
											"source": 11,
											"value": "582"
										},
										{
											"begin": 8352,
											"end": 8405,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8342,
											"end": 8405,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8342,
											"end": 8405,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8296,
											"end": 8415,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8454,
											"end": 8457,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 8481,
											"end": 8534,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "583"
										},
										{
											"begin": 8526,
											"end": 8533,
											"name": "DUP12",
											"source": 11
										},
										{
											"begin": 8517,
											"end": 8523,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8506,
											"end": 8515,
											"name": "DUP13",
											"source": 11
										},
										{
											"begin": 8502,
											"end": 8524,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8481,
											"end": 8534,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 8481,
											"end": 8534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8481,
											"end": 8534,
											"name": "tag",
											"source": 11,
											"value": "583"
										},
										{
											"begin": 8481,
											"end": 8534,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8471,
											"end": 8534,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8471,
											"end": 8534,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8425,
											"end": 8544,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7098,
											"end": 8551,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7098,
											"end": 8551,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 7098,
											"end": 8551,
											"name": "SWAP9",
											"source": 11
										},
										{
											"begin": 7098,
											"end": 8551,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7098,
											"end": 8551,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7098,
											"end": 8551,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 7098,
											"end": 8551,
											"name": "SWAP9",
											"source": 11
										},
										{
											"begin": 7098,
											"end": 8551,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7098,
											"end": 8551,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 7098,
											"end": 8551,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 7098,
											"end": 8551,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7098,
											"end": 8551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8557,
											"end": 9422,
											"name": "tag",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 8557,
											"end": 9422,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8693,
											"end": 8699,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8701,
											"end": 8707,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8709,
											"end": 8715,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8717,
											"end": 8723,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8766,
											"end": 8769,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 8754,
											"end": 8763,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8745,
											"end": 8752,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 8741,
											"end": 8764,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8737,
											"end": 8770,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 8734,
											"end": 8854,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8734,
											"end": 8854,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "585"
										},
										{
											"begin": 8734,
											"end": 8854,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8773,
											"end": 8852,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "586"
										},
										{
											"begin": 8773,
											"end": 8852,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 8773,
											"end": 8852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8773,
											"end": 8852,
											"name": "tag",
											"source": 11,
											"value": "586"
										},
										{
											"begin": 8773,
											"end": 8852,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8734,
											"end": 8854,
											"name": "tag",
											"source": 11,
											"value": "585"
										},
										{
											"begin": 8734,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8893,
											"end": 8894,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8918,
											"end": 8996,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "587"
										},
										{
											"begin": 8988,
											"end": 8995,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 8979,
											"end": 8985,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8968,
											"end": 8977,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 8964,
											"end": 8986,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8918,
											"end": 8996,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "442"
										},
										{
											"begin": 8918,
											"end": 8996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8918,
											"end": 8996,
											"name": "tag",
											"source": 11,
											"value": "587"
										},
										{
											"begin": 8918,
											"end": 8996,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8908,
											"end": 8996,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 8908,
											"end": 8996,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8864,
											"end": 9006,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9045,
											"end": 9047,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9071,
											"end": 9149,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "588"
										},
										{
											"begin": 9141,
											"end": 9148,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 9132,
											"end": 9138,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9121,
											"end": 9130,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 9117,
											"end": 9139,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9071,
											"end": 9149,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "442"
										},
										{
											"begin": 9071,
											"end": 9149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9071,
											"end": 9149,
											"name": "tag",
											"source": 11,
											"value": "588"
										},
										{
											"begin": 9071,
											"end": 9149,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9061,
											"end": 9149,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 9061,
											"end": 9149,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9016,
											"end": 9159,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9198,
											"end": 9200,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9224,
											"end": 9277,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "589"
										},
										{
											"begin": 9269,
											"end": 9276,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 9260,
											"end": 9266,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9249,
											"end": 9258,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 9245,
											"end": 9267,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9224,
											"end": 9277,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 9224,
											"end": 9277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9224,
											"end": 9277,
											"name": "tag",
											"source": 11,
											"value": "589"
										},
										{
											"begin": 9224,
											"end": 9277,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9214,
											"end": 9277,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9214,
											"end": 9277,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9169,
											"end": 9287,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9326,
											"end": 9328,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 9352,
											"end": 9405,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "590"
										},
										{
											"begin": 9397,
											"end": 9404,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 9388,
											"end": 9394,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9377,
											"end": 9386,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 9373,
											"end": 9395,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9352,
											"end": 9405,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 9352,
											"end": 9405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9352,
											"end": 9405,
											"name": "tag",
											"source": 11,
											"value": "590"
										},
										{
											"begin": 9352,
											"end": 9405,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9342,
											"end": 9405,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9342,
											"end": 9405,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9297,
											"end": 9415,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8557,
											"end": 9422,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8557,
											"end": 9422,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 8557,
											"end": 9422,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8557,
											"end": 9422,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 8557,
											"end": 9422,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8557,
											"end": 9422,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8557,
											"end": 9422,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8557,
											"end": 9422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9428,
											"end": 9581,
											"name": "tag",
											"source": 11,
											"value": "446"
										},
										{
											"begin": 9428,
											"end": 9581,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9505,
											"end": 9514,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9538,
											"end": 9575,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "592"
										},
										{
											"begin": 9569,
											"end": 9574,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9538,
											"end": 9575,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 9538,
											"end": 9575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9538,
											"end": 9575,
											"name": "tag",
											"source": 11,
											"value": "592"
										},
										{
											"begin": 9538,
											"end": 9575,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9525,
											"end": 9575,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9525,
											"end": 9575,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9428,
											"end": 9581,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9428,
											"end": 9581,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9428,
											"end": 9581,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9428,
											"end": 9581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9587,
											"end": 9772,
											"name": "tag",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 9587,
											"end": 9772,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9701,
											"end": 9765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "594"
										},
										{
											"begin": 9759,
											"end": 9764,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9701,
											"end": 9765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "446"
										},
										{
											"begin": 9701,
											"end": 9765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9701,
											"end": 9765,
											"name": "tag",
											"source": 11,
											"value": "594"
										},
										{
											"begin": 9701,
											"end": 9765,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9696,
											"end": 9699,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9689,
											"end": 9766,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9587,
											"end": 9772,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9587,
											"end": 9772,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9587,
											"end": 9772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9778,
											"end": 10054,
											"name": "tag",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 9778,
											"end": 10054,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9898,
											"end": 9902,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9938,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9925,
											"end": 9934,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9921,
											"end": 9939,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9913,
											"end": 9939,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9913,
											"end": 9939,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9949,
											"end": 10047,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "596"
										},
										{
											"begin": 10044,
											"end": 10045,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10033,
											"end": 10042,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10029,
											"end": 10046,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10020,
											"end": 10026,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9949,
											"end": 10047,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 9949,
											"end": 10047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9949,
											"end": 10047,
											"name": "tag",
											"source": 11,
											"value": "596"
										},
										{
											"begin": 9949,
											"end": 10047,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9778,
											"end": 10054,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9778,
											"end": 10054,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9778,
											"end": 10054,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9778,
											"end": 10054,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9778,
											"end": 10054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10060,
											"end": 10534,
											"name": "tag",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 10060,
											"end": 10534,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10128,
											"end": 10134,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10136,
											"end": 10142,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10185,
											"end": 10187,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10173,
											"end": 10182,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10164,
											"end": 10171,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10160,
											"end": 10183,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10156,
											"end": 10188,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10272,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10272,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "598"
										},
										{
											"begin": 10153,
											"end": 10272,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10191,
											"end": 10270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "599"
										},
										{
											"begin": 10191,
											"end": 10270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 10191,
											"end": 10270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10191,
											"end": 10270,
											"name": "tag",
											"source": 11,
											"value": "599"
										},
										{
											"begin": 10191,
											"end": 10270,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10272,
											"name": "tag",
											"source": 11,
											"value": "598"
										},
										{
											"begin": 10153,
											"end": 10272,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10311,
											"end": 10312,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10336,
											"end": 10389,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "600"
										},
										{
											"begin": 10381,
											"end": 10388,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10372,
											"end": 10378,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10361,
											"end": 10370,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 10357,
											"end": 10379,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10336,
											"end": 10389,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 10336,
											"end": 10389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10336,
											"end": 10389,
											"name": "tag",
											"source": 11,
											"value": "600"
										},
										{
											"begin": 10336,
											"end": 10389,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10326,
											"end": 10389,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10326,
											"end": 10389,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10282,
											"end": 10399,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10438,
											"end": 10440,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10464,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "601"
										},
										{
											"begin": 10509,
											"end": 10516,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10500,
											"end": 10506,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10489,
											"end": 10498,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 10485,
											"end": 10507,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10464,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 10464,
											"end": 10517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10464,
											"end": 10517,
											"name": "tag",
											"source": 11,
											"value": "601"
										},
										{
											"begin": 10464,
											"end": 10517,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10454,
											"end": 10517,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10454,
											"end": 10517,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10409,
											"end": 10527,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10060,
											"end": 10534,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10060,
											"end": 10534,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10060,
											"end": 10534,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10060,
											"end": 10534,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10060,
											"end": 10534,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10060,
											"end": 10534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10540,
											"end": 10812,
											"name": "tag",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 10540,
											"end": 10812,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10658,
											"end": 10662,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10696,
											"end": 10698,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10685,
											"end": 10694,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10681,
											"end": 10699,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10673,
											"end": 10699,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10673,
											"end": 10699,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10709,
											"end": 10805,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "603"
										},
										{
											"begin": 10802,
											"end": 10803,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10791,
											"end": 10800,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10787,
											"end": 10804,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10778,
											"end": 10784,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10709,
											"end": 10805,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 10709,
											"end": 10805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10709,
											"end": 10805,
											"name": "tag",
											"source": 11,
											"value": "603"
										},
										{
											"begin": 10709,
											"end": 10805,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10540,
											"end": 10812,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10540,
											"end": 10812,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10540,
											"end": 10812,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10540,
											"end": 10812,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10540,
											"end": 10812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10818,
											"end": 10998,
											"name": "tag",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 10818,
											"end": 10998,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10866,
											"end": 10943,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10863,
											"end": 10864,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10856,
											"end": 10944,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10963,
											"end": 10967,
											"name": "PUSH",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 10960,
											"end": 10961,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 10953,
											"end": 10968,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10987,
											"end": 10991,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 10984,
											"end": 10985,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10977,
											"end": 10992,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 11004,
											"end": 11173,
											"name": "tag",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 11004,
											"end": 11173,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11088,
											"end": 11099,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11122,
											"end": 11128,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11117,
											"end": 11120,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11110,
											"end": 11129,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11162,
											"end": 11166,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11157,
											"end": 11160,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11153,
											"end": 11167,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11138,
											"end": 11167,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11138,
											"end": 11167,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11004,
											"end": 11173,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11004,
											"end": 11173,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11004,
											"end": 11173,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11004,
											"end": 11173,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11004,
											"end": 11173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11179,
											"end": 11345,
											"name": "tag",
											"source": 11,
											"value": "449"
										},
										{
											"begin": 11179,
											"end": 11345,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11319,
											"end": 11337,
											"name": "PUSH",
											"source": 11,
											"value": "4E6F207374616B656420616D6F756E7400000000000000000000000000000000"
										},
										{
											"begin": 11315,
											"end": 11316,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11307,
											"end": 11313,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11303,
											"end": 11317,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11296,
											"end": 11338,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11179,
											"end": 11345,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11179,
											"end": 11345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11351,
											"end": 11717,
											"name": "tag",
											"source": 11,
											"value": "450"
										},
										{
											"begin": 11351,
											"end": 11717,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11493,
											"end": 11496,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11514,
											"end": 11581,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "608"
										},
										{
											"begin": 11578,
											"end": 11580,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 11573,
											"end": 11576,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11514,
											"end": 11581,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 11514,
											"end": 11581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11514,
											"end": 11581,
											"name": "tag",
											"source": 11,
											"value": "608"
										},
										{
											"begin": 11514,
											"end": 11581,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11507,
											"end": 11581,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11507,
											"end": 11581,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11590,
											"end": 11683,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "609"
										},
										{
											"begin": 11679,
											"end": 11682,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11590,
											"end": 11683,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "449"
										},
										{
											"begin": 11590,
											"end": 11683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11590,
											"end": 11683,
											"name": "tag",
											"source": 11,
											"value": "609"
										},
										{
											"begin": 11590,
											"end": 11683,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11708,
											"end": 11710,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11703,
											"end": 11706,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11699,
											"end": 11711,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11692,
											"end": 11711,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11692,
											"end": 11711,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11351,
											"end": 11717,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11351,
											"end": 11717,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11351,
											"end": 11717,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11351,
											"end": 11717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11723,
											"end": 12142,
											"name": "tag",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 11723,
											"end": 12142,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11889,
											"end": 11893,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11927,
											"end": 11929,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11916,
											"end": 11925,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11912,
											"end": 11930,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11904,
											"end": 11930,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11904,
											"end": 11930,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11976,
											"end": 11985,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11970,
											"end": 11974,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11966,
											"end": 11986,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11962,
											"end": 11963,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11951,
											"end": 11960,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11947,
											"end": 11964,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11940,
											"end": 11987,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12004,
											"end": 12135,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "611"
										},
										{
											"begin": 12130,
											"end": 12134,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12004,
											"end": 12135,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "450"
										},
										{
											"begin": 12004,
											"end": 12135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12004,
											"end": 12135,
											"name": "tag",
											"source": 11,
											"value": "611"
										},
										{
											"begin": 12004,
											"end": 12135,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11996,
											"end": 12135,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11996,
											"end": 12135,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11723,
											"end": 12142,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11723,
											"end": 12142,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11723,
											"end": 12142,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11723,
											"end": 12142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12148,
											"end": 12328,
											"name": "tag",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 12148,
											"end": 12328,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12196,
											"end": 12273,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12193,
											"end": 12194,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12186,
											"end": 12274,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12293,
											"end": 12297,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 12290,
											"end": 12291,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 12283,
											"end": 12298,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12317,
											"end": 12321,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 12314,
											"end": 12315,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12307,
											"end": 12322,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 12334,
											"end": 12528,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 12334,
											"end": 12528,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12374,
											"end": 12378,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12394,
											"end": 12414,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "614"
										},
										{
											"begin": 12412,
											"end": 12413,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12394,
											"end": 12414,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 12394,
											"end": 12414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12394,
											"end": 12414,
											"name": "tag",
											"source": 11,
											"value": "614"
										},
										{
											"begin": 12394,
											"end": 12414,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12389,
											"end": 12414,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12389,
											"end": 12414,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12428,
											"end": 12448,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "615"
										},
										{
											"begin": 12446,
											"end": 12447,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12428,
											"end": 12448,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 12428,
											"end": 12448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12428,
											"end": 12448,
											"name": "tag",
											"source": 11,
											"value": "615"
										},
										{
											"begin": 12428,
											"end": 12448,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12423,
											"end": 12448,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12423,
											"end": 12448,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12472,
											"end": 12473,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12469,
											"end": 12470,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12465,
											"end": 12474,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 12457,
											"end": 12474,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12457,
											"end": 12474,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12496,
											"end": 12497,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12490,
											"end": 12494,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12487,
											"end": 12498,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 12484,
											"end": 12521,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12484,
											"end": 12521,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "616"
										},
										{
											"begin": 12484,
											"end": 12521,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12501,
											"end": 12519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "617"
										},
										{
											"begin": 12501,
											"end": 12519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 12501,
											"end": 12519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12501,
											"end": 12519,
											"name": "tag",
											"source": 11,
											"value": "617"
										},
										{
											"begin": 12501,
											"end": 12519,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12484,
											"end": 12521,
											"name": "tag",
											"source": 11,
											"value": "616"
										},
										{
											"begin": 12484,
											"end": 12521,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12334,
											"end": 12528,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12334,
											"end": 12528,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12334,
											"end": 12528,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12334,
											"end": 12528,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12334,
											"end": 12528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12534,
											"end": 12702,
											"name": "tag",
											"source": 11,
											"value": "452"
										},
										{
											"begin": 12534,
											"end": 12702,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12674,
											"end": 12694,
											"name": "PUSH",
											"source": 11,
											"value": "436F6E7472616374206973207061757365640000000000000000000000000000"
										},
										{
											"begin": 12670,
											"end": 12671,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12662,
											"end": 12668,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12658,
											"end": 12672,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12651,
											"end": 12695,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12534,
											"end": 12702,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12534,
											"end": 12702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12708,
											"end": 13074,
											"name": "tag",
											"source": 11,
											"value": "453"
										},
										{
											"begin": 12708,
											"end": 13074,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12850,
											"end": 12853,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12871,
											"end": 12938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "620"
										},
										{
											"begin": 12935,
											"end": 12937,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 12930,
											"end": 12933,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12871,
											"end": 12938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 12871,
											"end": 12938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12871,
											"end": 12938,
											"name": "tag",
											"source": 11,
											"value": "620"
										},
										{
											"begin": 12871,
											"end": 12938,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12864,
											"end": 12938,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12864,
											"end": 12938,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12947,
											"end": 13040,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "621"
										},
										{
											"begin": 13036,
											"end": 13039,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12947,
											"end": 13040,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "452"
										},
										{
											"begin": 12947,
											"end": 13040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12947,
											"end": 13040,
											"name": "tag",
											"source": 11,
											"value": "621"
										},
										{
											"begin": 12947,
											"end": 13040,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13065,
											"end": 13067,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13060,
											"end": 13063,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13056,
											"end": 13068,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13049,
											"end": 13068,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13049,
											"end": 13068,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12708,
											"end": 13074,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12708,
											"end": 13074,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12708,
											"end": 13074,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12708,
											"end": 13074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13080,
											"end": 13499,
											"name": "tag",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 13080,
											"end": 13499,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13246,
											"end": 13250,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13284,
											"end": 13286,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13273,
											"end": 13282,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13269,
											"end": 13287,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13261,
											"end": 13287,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13261,
											"end": 13287,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13333,
											"end": 13342,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13327,
											"end": 13331,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13323,
											"end": 13343,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 13319,
											"end": 13320,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13308,
											"end": 13317,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13304,
											"end": 13321,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13297,
											"end": 13344,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13361,
											"end": 13492,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "623"
										},
										{
											"begin": 13487,
											"end": 13491,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13361,
											"end": 13492,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "453"
										},
										{
											"begin": 13361,
											"end": 13492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13361,
											"end": 13492,
											"name": "tag",
											"source": 11,
											"value": "623"
										},
										{
											"begin": 13361,
											"end": 13492,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13353,
											"end": 13492,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13353,
											"end": 13492,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13080,
											"end": 13499,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13080,
											"end": 13499,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13080,
											"end": 13499,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13080,
											"end": 13499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13505,
											"end": 13669,
											"name": "tag",
											"source": 11,
											"value": "454"
										},
										{
											"begin": 13505,
											"end": 13669,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13645,
											"end": 13661,
											"name": "PUSH",
											"source": 11,
											"value": "43616E6E6F74207374616B652030000000000000000000000000000000000000"
										},
										{
											"begin": 13641,
											"end": 13642,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13633,
											"end": 13639,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13629,
											"end": 13643,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13622,
											"end": 13662,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13505,
											"end": 13669,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13505,
											"end": 13669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13675,
											"end": 14041,
											"name": "tag",
											"source": 11,
											"value": "455"
										},
										{
											"begin": 13675,
											"end": 14041,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13817,
											"end": 13820,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13838,
											"end": 13905,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "626"
										},
										{
											"begin": 13902,
											"end": 13904,
											"name": "PUSH",
											"source": 11,
											"value": "E"
										},
										{
											"begin": 13897,
											"end": 13900,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13838,
											"end": 13905,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 13838,
											"end": 13905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13838,
											"end": 13905,
											"name": "tag",
											"source": 11,
											"value": "626"
										},
										{
											"begin": 13838,
											"end": 13905,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13831,
											"end": 13905,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13831,
											"end": 13905,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13914,
											"end": 14007,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "627"
										},
										{
											"begin": 14003,
											"end": 14006,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13914,
											"end": 14007,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "454"
										},
										{
											"begin": 13914,
											"end": 14007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13914,
											"end": 14007,
											"name": "tag",
											"source": 11,
											"value": "627"
										},
										{
											"begin": 13914,
											"end": 14007,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14032,
											"end": 14034,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14027,
											"end": 14030,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14023,
											"end": 14035,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14016,
											"end": 14035,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14016,
											"end": 14035,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13675,
											"end": 14041,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13675,
											"end": 14041,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13675,
											"end": 14041,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13675,
											"end": 14041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14047,
											"end": 14466,
											"name": "tag",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 14047,
											"end": 14466,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14213,
											"end": 14217,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14251,
											"end": 14253,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14240,
											"end": 14249,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14236,
											"end": 14254,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14228,
											"end": 14254,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14228,
											"end": 14254,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14300,
											"end": 14309,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14294,
											"end": 14298,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14290,
											"end": 14310,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 14286,
											"end": 14287,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14275,
											"end": 14284,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14271,
											"end": 14288,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14264,
											"end": 14311,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14328,
											"end": 14459,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "629"
										},
										{
											"begin": 14454,
											"end": 14458,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14328,
											"end": 14459,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "455"
										},
										{
											"begin": 14328,
											"end": 14459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14328,
											"end": 14459,
											"name": "tag",
											"source": 11,
											"value": "629"
										},
										{
											"begin": 14328,
											"end": 14459,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14320,
											"end": 14459,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14320,
											"end": 14459,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14047,
											"end": 14466,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14047,
											"end": 14466,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14047,
											"end": 14466,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14047,
											"end": 14466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14472,
											"end": 14663,
											"name": "tag",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 14472,
											"end": 14663,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14512,
											"end": 14515,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14531,
											"end": 14551,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "631"
										},
										{
											"begin": 14549,
											"end": 14550,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14531,
											"end": 14551,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 14531,
											"end": 14551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14531,
											"end": 14551,
											"name": "tag",
											"source": 11,
											"value": "631"
										},
										{
											"begin": 14531,
											"end": 14551,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14526,
											"end": 14551,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14526,
											"end": 14551,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14565,
											"end": 14585,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "632"
										},
										{
											"begin": 14583,
											"end": 14584,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14565,
											"end": 14585,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 14565,
											"end": 14585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14565,
											"end": 14585,
											"name": "tag",
											"source": 11,
											"value": "632"
										},
										{
											"begin": 14565,
											"end": 14585,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14560,
											"end": 14585,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14560,
											"end": 14585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14608,
											"end": 14609,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14605,
											"end": 14606,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14601,
											"end": 14610,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14594,
											"end": 14610,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14594,
											"end": 14610,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14629,
											"end": 14632,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14626,
											"end": 14627,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14623,
											"end": 14633,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 14620,
											"end": 14656,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14620,
											"end": 14656,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "633"
										},
										{
											"begin": 14620,
											"end": 14656,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14636,
											"end": 14654,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "634"
										},
										{
											"begin": 14636,
											"end": 14654,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 14636,
											"end": 14654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14636,
											"end": 14654,
											"name": "tag",
											"source": 11,
											"value": "634"
										},
										{
											"begin": 14636,
											"end": 14654,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14620,
											"end": 14656,
											"name": "tag",
											"source": 11,
											"value": "633"
										},
										{
											"begin": 14620,
											"end": 14656,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14472,
											"end": 14663,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14472,
											"end": 14663,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14472,
											"end": 14663,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14472,
											"end": 14663,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14472,
											"end": 14663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14669,
											"end": 15001,
											"name": "tag",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 14669,
											"end": 15001,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14790,
											"end": 14794,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14828,
											"end": 14830,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14817,
											"end": 14826,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14805,
											"end": 14831,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14805,
											"end": 14831,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14841,
											"end": 14912,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "636"
										},
										{
											"begin": 14909,
											"end": 14910,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14898,
											"end": 14907,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14894,
											"end": 14911,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14885,
											"end": 14891,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 14841,
											"end": 14912,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 14841,
											"end": 14912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14841,
											"end": 14912,
											"name": "tag",
											"source": 11,
											"value": "636"
										},
										{
											"begin": 14841,
											"end": 14912,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14922,
											"end": 14994,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "637"
										},
										{
											"begin": 14990,
											"end": 14992,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14979,
											"end": 14988,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14975,
											"end": 14993,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14966,
											"end": 14972,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 14922,
											"end": 14994,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 14922,
											"end": 14994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14922,
											"end": 14994,
											"name": "tag",
											"source": 11,
											"value": "637"
										},
										{
											"begin": 14922,
											"end": 14994,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14669,
											"end": 15001,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 14669,
											"end": 15001,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14669,
											"end": 15001,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14669,
											"end": 15001,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14669,
											"end": 15001,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14669,
											"end": 15001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15007,
											"end": 15092,
											"name": "tag",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 15007,
											"end": 15092,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15052,
											"end": 15059,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15081,
											"end": 15086,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15070,
											"end": 15086,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15070,
											"end": 15086,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15007,
											"end": 15092,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15007,
											"end": 15092,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15007,
											"end": 15092,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15007,
											"end": 15092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15098,
											"end": 15199,
											"name": "tag",
											"source": 11,
											"value": "457"
										},
										{
											"begin": 15098,
											"end": 15199,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15134,
											"end": 15141,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15174,
											"end": 15192,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15167,
											"end": 15172,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15163,
											"end": 15193,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15152,
											"end": 15193,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15152,
											"end": 15193,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15098,
											"end": 15199,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15098,
											"end": 15199,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15098,
											"end": 15199,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15098,
											"end": 15199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15205,
											"end": 15361,
											"name": "tag",
											"source": 11,
											"value": "458"
										},
										{
											"begin": 15205,
											"end": 15361,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15262,
											"end": 15271,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15295,
											"end": 15355,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "641"
										},
										{
											"begin": 15312,
											"end": 15354,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "642"
										},
										{
											"begin": 15321,
											"end": 15353,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "643"
										},
										{
											"begin": 15347,
											"end": 15352,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15321,
											"end": 15353,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 15321,
											"end": 15353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15321,
											"end": 15353,
											"name": "tag",
											"source": 11,
											"value": "643"
										},
										{
											"begin": 15321,
											"end": 15353,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15312,
											"end": 15354,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 15312,
											"end": 15354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15312,
											"end": 15354,
											"name": "tag",
											"source": 11,
											"value": "642"
										},
										{
											"begin": 15312,
											"end": 15354,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15295,
											"end": 15355,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "457"
										},
										{
											"begin": 15295,
											"end": 15355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15295,
											"end": 15355,
											"name": "tag",
											"source": 11,
											"value": "641"
										},
										{
											"begin": 15295,
											"end": 15355,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15282,
											"end": 15355,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15282,
											"end": 15355,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15205,
											"end": 15361,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15205,
											"end": 15361,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15205,
											"end": 15361,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15205,
											"end": 15361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15367,
											"end": 15512,
											"name": "tag",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 15367,
											"end": 15512,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15461,
											"end": 15505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "645"
										},
										{
											"begin": 15499,
											"end": 15504,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15461,
											"end": 15505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "458"
										},
										{
											"begin": 15461,
											"end": 15505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15461,
											"end": 15505,
											"name": "tag",
											"source": 11,
											"value": "645"
										},
										{
											"begin": 15461,
											"end": 15505,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15456,
											"end": 15459,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15449,
											"end": 15506,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15367,
											"end": 15512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15367,
											"end": 15512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15367,
											"end": 15512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15518,
											"end": 15754,
											"name": "tag",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 15518,
											"end": 15754,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15618,
											"end": 15622,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15656,
											"end": 15658,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15645,
											"end": 15654,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15641,
											"end": 15659,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15633,
											"end": 15659,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15633,
											"end": 15659,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15669,
											"end": 15747,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "647"
										},
										{
											"begin": 15744,
											"end": 15745,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15733,
											"end": 15742,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15729,
											"end": 15746,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15720,
											"end": 15726,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15669,
											"end": 15747,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 15669,
											"end": 15747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15669,
											"end": 15747,
											"name": "tag",
											"source": 11,
											"value": "647"
										},
										{
											"begin": 15669,
											"end": 15747,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15518,
											"end": 15754,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15518,
											"end": 15754,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15518,
											"end": 15754,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15518,
											"end": 15754,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15518,
											"end": 15754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15936,
											"name": "tag",
											"source": 11,
											"value": "460"
										},
										{
											"begin": 15760,
											"end": 15936,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15900,
											"end": 15928,
											"name": "PUSH",
											"source": 11,
											"value": "496E73756666696369656E74207374616B656420616D6F756E74000000000000"
										},
										{
											"begin": 15896,
											"end": 15897,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15888,
											"end": 15894,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15884,
											"end": 15898,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15877,
											"end": 15929,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15936,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15942,
											"end": 16308,
											"name": "tag",
											"source": 11,
											"value": "461"
										},
										{
											"begin": 15942,
											"end": 16308,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16084,
											"end": 16087,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16105,
											"end": 16172,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "650"
										},
										{
											"begin": 16169,
											"end": 16171,
											"name": "PUSH",
											"source": 11,
											"value": "1A"
										},
										{
											"begin": 16164,
											"end": 16167,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16105,
											"end": 16172,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 16105,
											"end": 16172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16105,
											"end": 16172,
											"name": "tag",
											"source": 11,
											"value": "650"
										},
										{
											"begin": 16105,
											"end": 16172,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16098,
											"end": 16172,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16098,
											"end": 16172,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16181,
											"end": 16274,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "651"
										},
										{
											"begin": 16270,
											"end": 16273,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16181,
											"end": 16274,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "460"
										},
										{
											"begin": 16181,
											"end": 16274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16181,
											"end": 16274,
											"name": "tag",
											"source": 11,
											"value": "651"
										},
										{
											"begin": 16181,
											"end": 16274,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16299,
											"end": 16301,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16294,
											"end": 16297,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16290,
											"end": 16302,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16283,
											"end": 16302,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16283,
											"end": 16302,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15942,
											"end": 16308,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15942,
											"end": 16308,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15942,
											"end": 16308,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15942,
											"end": 16308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16314,
											"end": 16733,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 16314,
											"end": 16733,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16480,
											"end": 16484,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16518,
											"end": 16520,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16507,
											"end": 16516,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16503,
											"end": 16521,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16495,
											"end": 16521,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16495,
											"end": 16521,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16567,
											"end": 16576,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16561,
											"end": 16565,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16557,
											"end": 16577,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 16553,
											"end": 16554,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16542,
											"end": 16551,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16538,
											"end": 16555,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16531,
											"end": 16578,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16595,
											"end": 16726,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "653"
										},
										{
											"begin": 16721,
											"end": 16725,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16595,
											"end": 16726,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "461"
										},
										{
											"begin": 16595,
											"end": 16726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16595,
											"end": 16726,
											"name": "tag",
											"source": 11,
											"value": "653"
										},
										{
											"begin": 16595,
											"end": 16726,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16587,
											"end": 16726,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16587,
											"end": 16726,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16314,
											"end": 16733,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16314,
											"end": 16733,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16314,
											"end": 16733,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16314,
											"end": 16733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16739,
											"end": 16910,
											"name": "tag",
											"source": 11,
											"value": "462"
										},
										{
											"begin": 16739,
											"end": 16910,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16879,
											"end": 16902,
											"name": "PUSH",
											"source": 11,
											"value": "5374616B65206973207374696C6C206C6F636B65640000000000000000000000"
										},
										{
											"begin": 16875,
											"end": 16876,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16867,
											"end": 16873,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16863,
											"end": 16877,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16856,
											"end": 16903,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16739,
											"end": 16910,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16739,
											"end": 16910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16916,
											"end": 17282,
											"name": "tag",
											"source": 11,
											"value": "463"
										},
										{
											"begin": 16916,
											"end": 17282,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17058,
											"end": 17061,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17079,
											"end": 17146,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "656"
										},
										{
											"begin": 17143,
											"end": 17145,
											"name": "PUSH",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 17138,
											"end": 17141,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17079,
											"end": 17146,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 17079,
											"end": 17146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17079,
											"end": 17146,
											"name": "tag",
											"source": 11,
											"value": "656"
										},
										{
											"begin": 17079,
											"end": 17146,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17072,
											"end": 17146,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17072,
											"end": 17146,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17155,
											"end": 17248,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "657"
										},
										{
											"begin": 17244,
											"end": 17247,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17155,
											"end": 17248,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "462"
										},
										{
											"begin": 17155,
											"end": 17248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17155,
											"end": 17248,
											"name": "tag",
											"source": 11,
											"value": "657"
										},
										{
											"begin": 17155,
											"end": 17248,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17273,
											"end": 17275,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17268,
											"end": 17271,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17264,
											"end": 17276,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17257,
											"end": 17276,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17257,
											"end": 17276,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16916,
											"end": 17282,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16916,
											"end": 17282,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16916,
											"end": 17282,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16916,
											"end": 17282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17288,
											"end": 17707,
											"name": "tag",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 17288,
											"end": 17707,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17454,
											"end": 17458,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17492,
											"end": 17494,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17481,
											"end": 17490,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17477,
											"end": 17495,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17469,
											"end": 17495,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17469,
											"end": 17495,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17541,
											"end": 17550,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17535,
											"end": 17539,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17531,
											"end": 17551,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 17527,
											"end": 17528,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17516,
											"end": 17525,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17512,
											"end": 17529,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17505,
											"end": 17552,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17569,
											"end": 17700,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "659"
										},
										{
											"begin": 17695,
											"end": 17699,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17569,
											"end": 17700,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "463"
										},
										{
											"begin": 17569,
											"end": 17700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17569,
											"end": 17700,
											"name": "tag",
											"source": 11,
											"value": "659"
										},
										{
											"begin": 17569,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17561,
											"end": 17700,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17561,
											"end": 17700,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17288,
											"end": 17707,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17288,
											"end": 17707,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17288,
											"end": 17707,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17288,
											"end": 17707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17713,
											"end": 17883,
											"name": "tag",
											"source": 11,
											"value": "464"
										},
										{
											"begin": 17713,
											"end": 17883,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17853,
											"end": 17875,
											"name": "PUSH",
											"source": 11,
											"value": "526566657272657220616C726561647920736574000000000000000000000000"
										},
										{
											"begin": 17849,
											"end": 17850,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17841,
											"end": 17847,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17837,
											"end": 17851,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17830,
											"end": 17876,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17713,
											"end": 17883,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17713,
											"end": 17883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17889,
											"end": 18255,
											"name": "tag",
											"source": 11,
											"value": "465"
										},
										{
											"begin": 17889,
											"end": 18255,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18031,
											"end": 18034,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18052,
											"end": 18119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "662"
										},
										{
											"begin": 18116,
											"end": 18118,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 18111,
											"end": 18114,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18052,
											"end": 18119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 18052,
											"end": 18119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18052,
											"end": 18119,
											"name": "tag",
											"source": 11,
											"value": "662"
										},
										{
											"begin": 18052,
											"end": 18119,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18045,
											"end": 18119,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18045,
											"end": 18119,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18128,
											"end": 18221,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "663"
										},
										{
											"begin": 18217,
											"end": 18220,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18128,
											"end": 18221,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "464"
										},
										{
											"begin": 18128,
											"end": 18221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18128,
											"end": 18221,
											"name": "tag",
											"source": 11,
											"value": "663"
										},
										{
											"begin": 18128,
											"end": 18221,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18246,
											"end": 18248,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18241,
											"end": 18244,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18237,
											"end": 18249,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18230,
											"end": 18249,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18230,
											"end": 18249,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17889,
											"end": 18255,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17889,
											"end": 18255,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17889,
											"end": 18255,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17889,
											"end": 18255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18261,
											"end": 18680,
											"name": "tag",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 18261,
											"end": 18680,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18427,
											"end": 18431,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18465,
											"end": 18467,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18454,
											"end": 18463,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18450,
											"end": 18468,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18442,
											"end": 18468,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18442,
											"end": 18468,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18514,
											"end": 18523,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18508,
											"end": 18512,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18504,
											"end": 18524,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 18500,
											"end": 18501,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18489,
											"end": 18498,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18485,
											"end": 18502,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18478,
											"end": 18525,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18542,
											"end": 18673,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "665"
										},
										{
											"begin": 18668,
											"end": 18672,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18542,
											"end": 18673,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "465"
										},
										{
											"begin": 18542,
											"end": 18673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18542,
											"end": 18673,
											"name": "tag",
											"source": 11,
											"value": "665"
										},
										{
											"begin": 18542,
											"end": 18673,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18534,
											"end": 18673,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18534,
											"end": 18673,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18261,
											"end": 18680,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18261,
											"end": 18680,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18261,
											"end": 18680,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18261,
											"end": 18680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18686,
											"end": 18857,
											"name": "tag",
											"source": 11,
											"value": "466"
										},
										{
											"begin": 18686,
											"end": 18857,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18826,
											"end": 18849,
											"name": "PUSH",
											"source": 11,
											"value": "43616E6E6F7420726566657220796F757273656C660000000000000000000000"
										},
										{
											"begin": 18822,
											"end": 18823,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18814,
											"end": 18820,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18810,
											"end": 18824,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18803,
											"end": 18850,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18686,
											"end": 18857,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18686,
											"end": 18857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18863,
											"end": 19229,
											"name": "tag",
											"source": 11,
											"value": "467"
										},
										{
											"begin": 18863,
											"end": 19229,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19005,
											"end": 19008,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19026,
											"end": 19093,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "668"
										},
										{
											"begin": 19090,
											"end": 19092,
											"name": "PUSH",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 19085,
											"end": 19088,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19026,
											"end": 19093,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 19026,
											"end": 19093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19026,
											"end": 19093,
											"name": "tag",
											"source": 11,
											"value": "668"
										},
										{
											"begin": 19026,
											"end": 19093,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19019,
											"end": 19093,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19019,
											"end": 19093,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19102,
											"end": 19195,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "669"
										},
										{
											"begin": 19191,
											"end": 19194,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19102,
											"end": 19195,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "466"
										},
										{
											"begin": 19102,
											"end": 19195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19102,
											"end": 19195,
											"name": "tag",
											"source": 11,
											"value": "669"
										},
										{
											"begin": 19102,
											"end": 19195,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19220,
											"end": 19222,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19215,
											"end": 19218,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19211,
											"end": 19223,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19204,
											"end": 19223,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19204,
											"end": 19223,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18863,
											"end": 19229,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18863,
											"end": 19229,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18863,
											"end": 19229,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18863,
											"end": 19229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19235,
											"end": 19654,
											"name": "tag",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 19235,
											"end": 19654,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19401,
											"end": 19405,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19439,
											"end": 19441,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19428,
											"end": 19437,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19424,
											"end": 19442,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19416,
											"end": 19442,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19416,
											"end": 19442,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19488,
											"end": 19497,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19482,
											"end": 19486,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19478,
											"end": 19498,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 19474,
											"end": 19475,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19463,
											"end": 19472,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19459,
											"end": 19476,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19452,
											"end": 19499,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19516,
											"end": 19647,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "671"
										},
										{
											"begin": 19642,
											"end": 19646,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19516,
											"end": 19647,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "467"
										},
										{
											"begin": 19516,
											"end": 19647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19516,
											"end": 19647,
											"name": "tag",
											"source": 11,
											"value": "671"
										},
										{
											"begin": 19516,
											"end": 19647,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19508,
											"end": 19647,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19508,
											"end": 19647,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19235,
											"end": 19654,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19235,
											"end": 19654,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19235,
											"end": 19654,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19235,
											"end": 19654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19660,
											"end": 20213,
											"name": "tag",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 19660,
											"end": 20213,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19837,
											"end": 19841,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19875,
											"end": 19878,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 19864,
											"end": 19873,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19860,
											"end": 19879,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19852,
											"end": 19879,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19852,
											"end": 19879,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19889,
											"end": 19960,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "673"
										},
										{
											"begin": 19957,
											"end": 19958,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19946,
											"end": 19955,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19942,
											"end": 19959,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19933,
											"end": 19939,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 19889,
											"end": 19960,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 19889,
											"end": 19960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19889,
											"end": 19960,
											"name": "tag",
											"source": 11,
											"value": "673"
										},
										{
											"begin": 19889,
											"end": 19960,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19970,
											"end": 20042,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "674"
										},
										{
											"begin": 20038,
											"end": 20040,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20027,
											"end": 20036,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 20023,
											"end": 20041,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20014,
											"end": 20020,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 19970,
											"end": 20042,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 19970,
											"end": 20042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19970,
											"end": 20042,
											"name": "tag",
											"source": 11,
											"value": "674"
										},
										{
											"begin": 19970,
											"end": 20042,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20052,
											"end": 20124,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "675"
										},
										{
											"begin": 20120,
											"end": 20122,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 20109,
											"end": 20118,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 20105,
											"end": 20123,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20096,
											"end": 20102,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 20052,
											"end": 20124,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 20052,
											"end": 20124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20052,
											"end": 20124,
											"name": "tag",
											"source": 11,
											"value": "675"
										},
										{
											"begin": 20052,
											"end": 20124,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20134,
											"end": 20206,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "676"
										},
										{
											"begin": 20202,
											"end": 20204,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 20191,
											"end": 20200,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 20187,
											"end": 20205,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 20134,
											"end": 20206,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 20134,
											"end": 20206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20134,
											"end": 20206,
											"name": "tag",
											"source": 11,
											"value": "676"
										},
										{
											"begin": 20134,
											"end": 20206,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19660,
											"end": 20213,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 19660,
											"end": 20213,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 19660,
											"end": 20213,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19660,
											"end": 20213,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19660,
											"end": 20213,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19660,
											"end": 20213,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19660,
											"end": 20213,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19660,
											"end": 20213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20219,
											"end": 20400,
											"name": "tag",
											"source": 11,
											"value": "468"
										},
										{
											"begin": 20219,
											"end": 20400,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20359,
											"end": 20392,
											"name": "PUSH",
											"source": 11,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 20355,
											"end": 20356,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20347,
											"end": 20353,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20343,
											"end": 20357,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20336,
											"end": 20393,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20219,
											"end": 20400,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20219,
											"end": 20400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20406,
											"end": 20772,
											"name": "tag",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 20406,
											"end": 20772,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20548,
											"end": 20551,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20569,
											"end": 20636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "679"
										},
										{
											"begin": 20633,
											"end": 20635,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 20628,
											"end": 20631,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 20569,
											"end": 20636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 20569,
											"end": 20636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20569,
											"end": 20636,
											"name": "tag",
											"source": 11,
											"value": "679"
										},
										{
											"begin": 20569,
											"end": 20636,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20562,
											"end": 20636,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20562,
											"end": 20636,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20645,
											"end": 20738,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "680"
										},
										{
											"begin": 20734,
											"end": 20737,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20645,
											"end": 20738,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "468"
										},
										{
											"begin": 20645,
											"end": 20738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20645,
											"end": 20738,
											"name": "tag",
											"source": 11,
											"value": "680"
										},
										{
											"begin": 20645,
											"end": 20738,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20763,
											"end": 20765,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20758,
											"end": 20761,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20754,
											"end": 20766,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20747,
											"end": 20766,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20747,
											"end": 20766,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20406,
											"end": 20772,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20406,
											"end": 20772,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20406,
											"end": 20772,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20406,
											"end": 20772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20778,
											"end": 21197,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 20778,
											"end": 21197,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20944,
											"end": 20948,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20982,
											"end": 20984,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20971,
											"end": 20980,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20967,
											"end": 20985,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20959,
											"end": 20985,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20959,
											"end": 20985,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21031,
											"end": 21040,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21029,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21021,
											"end": 21041,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 21017,
											"end": 21018,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21006,
											"end": 21015,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21002,
											"end": 21019,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20995,
											"end": 21042,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21059,
											"end": 21190,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "682"
										},
										{
											"begin": 21185,
											"end": 21189,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21059,
											"end": 21190,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 21059,
											"end": 21190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21059,
											"end": 21190,
											"name": "tag",
											"source": 11,
											"value": "682"
										},
										{
											"begin": 21059,
											"end": 21190,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21051,
											"end": 21190,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21051,
											"end": 21190,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20778,
											"end": 21197,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20778,
											"end": 21197,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20778,
											"end": 21197,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20778,
											"end": 21197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21203,
											"end": 21535,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 21203,
											"end": 21535,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21324,
											"end": 21328,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21362,
											"end": 21364,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 21351,
											"end": 21360,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21347,
											"end": 21365,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21339,
											"end": 21365,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21339,
											"end": 21365,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21375,
											"end": 21446,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "684"
										},
										{
											"begin": 21443,
											"end": 21444,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21432,
											"end": 21441,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21428,
											"end": 21445,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21419,
											"end": 21425,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 21375,
											"end": 21446,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 21375,
											"end": 21446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21375,
											"end": 21446,
											"name": "tag",
											"source": 11,
											"value": "684"
										},
										{
											"begin": 21375,
											"end": 21446,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21456,
											"end": 21528,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "685"
										},
										{
											"begin": 21524,
											"end": 21526,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21513,
											"end": 21522,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21509,
											"end": 21527,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21500,
											"end": 21506,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 21456,
											"end": 21528,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 21456,
											"end": 21528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21456,
											"end": 21528,
											"name": "tag",
											"source": 11,
											"value": "685"
										},
										{
											"begin": 21456,
											"end": 21528,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21203,
											"end": 21535,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 21203,
											"end": 21535,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 21203,
											"end": 21535,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21203,
											"end": 21535,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21203,
											"end": 21535,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21203,
											"end": 21535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21541,
											"end": 21951,
											"name": "tag",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 21541,
											"end": 21951,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21581,
											"end": 21588,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21604,
											"end": 21624,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "687"
										},
										{
											"begin": 21622,
											"end": 21623,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21604,
											"end": 21624,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 21604,
											"end": 21624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21604,
											"end": 21624,
											"name": "tag",
											"source": 11,
											"value": "687"
										},
										{
											"begin": 21604,
											"end": 21624,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21599,
											"end": 21624,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21599,
											"end": 21624,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21638,
											"end": 21658,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "688"
										},
										{
											"begin": 21656,
											"end": 21657,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21638,
											"end": 21658,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 21638,
											"end": 21658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21638,
											"end": 21658,
											"name": "tag",
											"source": 11,
											"value": "688"
										},
										{
											"begin": 21638,
											"end": 21658,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21633,
											"end": 21658,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 21633,
											"end": 21658,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21693,
											"end": 21694,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21690,
											"end": 21691,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21686,
											"end": 21695,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 21715,
											"end": 21745,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "689"
										},
										{
											"begin": 21733,
											"end": 21744,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21715,
											"end": 21745,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 21715,
											"end": 21745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21715,
											"end": 21745,
											"name": "tag",
											"source": 11,
											"value": "689"
										},
										{
											"begin": 21715,
											"end": 21745,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21704,
											"end": 21745,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21704,
											"end": 21745,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21894,
											"end": 21895,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21885,
											"end": 21892,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21881,
											"end": 21896,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 21878,
											"end": 21879,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 21875,
											"end": 21897,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 21855,
											"end": 21856,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21848,
											"end": 21857,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 21828,
											"end": 21911,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 21805,
											"end": 21944,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "690"
										},
										{
											"begin": 21805,
											"end": 21944,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 21924,
											"end": 21942,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "691"
										},
										{
											"begin": 21924,
											"end": 21942,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 21924,
											"end": 21942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21924,
											"end": 21942,
											"name": "tag",
											"source": 11,
											"value": "691"
										},
										{
											"begin": 21924,
											"end": 21942,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21805,
											"end": 21944,
											"name": "tag",
											"source": 11,
											"value": "690"
										},
										{
											"begin": 21805,
											"end": 21944,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21589,
											"end": 21951,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21541,
											"end": 21951,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 21541,
											"end": 21951,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21541,
											"end": 21951,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21541,
											"end": 21951,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21541,
											"end": 21951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21957,
											"end": 22137,
											"name": "tag",
											"source": 11,
											"value": "470"
										},
										{
											"begin": 21957,
											"end": 22137,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22005,
											"end": 22082,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22002,
											"end": 22003,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21995,
											"end": 22083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 22102,
											"end": 22106,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 22099,
											"end": 22100,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 22092,
											"end": 22107,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 22126,
											"end": 22130,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 22123,
											"end": 22124,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22116,
											"end": 22131,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 22143,
											"end": 22328,
											"name": "tag",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 22143,
											"end": 22328,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22183,
											"end": 22184,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22200,
											"end": 22220,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "694"
										},
										{
											"begin": 22218,
											"end": 22219,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22200,
											"end": 22220,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 22200,
											"end": 22220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22200,
											"end": 22220,
											"name": "tag",
											"source": 11,
											"value": "694"
										},
										{
											"begin": 22200,
											"end": 22220,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22195,
											"end": 22220,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 22195,
											"end": 22220,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22234,
											"end": 22254,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "695"
										},
										{
											"begin": 22252,
											"end": 22253,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 22234,
											"end": 22254,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 22234,
											"end": 22254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22234,
											"end": 22254,
											"name": "tag",
											"source": 11,
											"value": "695"
										},
										{
											"begin": 22234,
											"end": 22254,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22229,
											"end": 22254,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 22229,
											"end": 22254,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22273,
											"end": 22274,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22263,
											"end": 22298,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "696"
										},
										{
											"begin": 22263,
											"end": 22298,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 22278,
											"end": 22296,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "697"
										},
										{
											"begin": 22278,
											"end": 22296,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "470"
										},
										{
											"begin": 22278,
											"end": 22296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22278,
											"end": 22296,
											"name": "tag",
											"source": 11,
											"value": "697"
										},
										{
											"begin": 22278,
											"end": 22296,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22263,
											"end": 22298,
											"name": "tag",
											"source": 11,
											"value": "696"
										},
										{
											"begin": 22263,
											"end": 22298,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22320,
											"end": 22321,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22317,
											"end": 22318,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22313,
											"end": 22322,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 22308,
											"end": 22322,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22308,
											"end": 22322,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22143,
											"end": 22328,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 22143,
											"end": 22328,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 22143,
											"end": 22328,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22143,
											"end": 22328,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22143,
											"end": 22328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22334,
											"end": 22477,
											"name": "tag",
											"source": 11,
											"value": "471"
										},
										{
											"begin": 22334,
											"end": 22477,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22391,
											"end": 22396,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22422,
											"end": 22428,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22416,
											"end": 22429,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 22407,
											"end": 22429,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22407,
											"end": 22429,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22438,
											"end": 22471,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "699"
										},
										{
											"begin": 22465,
											"end": 22470,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22438,
											"end": 22471,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 22438,
											"end": 22471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22438,
											"end": 22471,
											"name": "tag",
											"source": 11,
											"value": "699"
										},
										{
											"begin": 22438,
											"end": 22471,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22334,
											"end": 22477,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 22334,
											"end": 22477,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 22334,
											"end": 22477,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22334,
											"end": 22477,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22334,
											"end": 22477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22483,
											"end": 22834,
											"name": "tag",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 22483,
											"end": 22834,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22553,
											"end": 22559,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22602,
											"end": 22604,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 22590,
											"end": 22599,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22581,
											"end": 22588,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 22577,
											"end": 22600,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 22573,
											"end": 22605,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22689,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22689,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "701"
										},
										{
											"begin": 22570,
											"end": 22689,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 22608,
											"end": 22687,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "702"
										},
										{
											"begin": 22608,
											"end": 22687,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 22608,
											"end": 22687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22608,
											"end": 22687,
											"name": "tag",
											"source": 11,
											"value": "702"
										},
										{
											"begin": 22608,
											"end": 22687,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22689,
											"name": "tag",
											"source": 11,
											"value": "701"
										},
										{
											"begin": 22570,
											"end": 22689,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22728,
											"end": 22729,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22753,
											"end": 22817,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "703"
										},
										{
											"begin": 22809,
											"end": 22816,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 22800,
											"end": 22806,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22789,
											"end": 22798,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 22785,
											"end": 22807,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22753,
											"end": 22817,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "471"
										},
										{
											"begin": 22753,
											"end": 22817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22753,
											"end": 22817,
											"name": "tag",
											"source": 11,
											"value": "703"
										},
										{
											"begin": 22753,
											"end": 22817,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22743,
											"end": 22817,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 22743,
											"end": 22817,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22699,
											"end": 22827,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22483,
											"end": 22834,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 22483,
											"end": 22834,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 22483,
											"end": 22834,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22483,
											"end": 22834,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22483,
											"end": 22834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22840,
											"end": 23282,
											"name": "tag",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 22840,
											"end": 23282,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22989,
											"end": 22993,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23027,
											"end": 23029,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 23016,
											"end": 23025,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 23012,
											"end": 23030,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23004,
											"end": 23030,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 23004,
											"end": 23030,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23040,
											"end": 23111,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "705"
										},
										{
											"begin": 23108,
											"end": 23109,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23097,
											"end": 23106,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 23093,
											"end": 23110,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23084,
											"end": 23090,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 23040,
											"end": 23111,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 23040,
											"end": 23111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23040,
											"end": 23111,
											"name": "tag",
											"source": 11,
											"value": "705"
										},
										{
											"begin": 23040,
											"end": 23111,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23121,
											"end": 23193,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "706"
										},
										{
											"begin": 23189,
											"end": 23191,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 23178,
											"end": 23187,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 23174,
											"end": 23192,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23165,
											"end": 23171,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 23121,
											"end": 23193,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 23121,
											"end": 23193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23121,
											"end": 23193,
											"name": "tag",
											"source": 11,
											"value": "706"
										},
										{
											"begin": 23121,
											"end": 23193,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23203,
											"end": 23275,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "707"
										},
										{
											"begin": 23271,
											"end": 23273,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 23260,
											"end": 23269,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 23256,
											"end": 23274,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23247,
											"end": 23253,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 23203,
											"end": 23275,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 23203,
											"end": 23275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23203,
											"end": 23275,
											"name": "tag",
											"source": 11,
											"value": "707"
										},
										{
											"begin": 23203,
											"end": 23275,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22840,
											"end": 23282,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 22840,
											"end": 23282,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 22840,
											"end": 23282,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22840,
											"end": 23282,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22840,
											"end": 23282,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22840,
											"end": 23282,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22840,
											"end": 23282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23288,
											"end": 23404,
											"name": "tag",
											"source": 11,
											"value": "472"
										},
										{
											"begin": 23288,
											"end": 23404,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23358,
											"end": 23379,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "709"
										},
										{
											"begin": 23373,
											"end": 23378,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 23358,
											"end": 23379,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 23358,
											"end": 23379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23358,
											"end": 23379,
											"name": "tag",
											"source": 11,
											"value": "709"
										},
										{
											"begin": 23358,
											"end": 23379,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23351,
											"end": 23356,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 23348,
											"end": 23380,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 23338,
											"end": 23398,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "710"
										},
										{
											"begin": 23338,
											"end": 23398,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 23394,
											"end": 23395,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23391,
											"end": 23392,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 23384,
											"end": 23396,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 23338,
											"end": 23398,
											"name": "tag",
											"source": 11,
											"value": "710"
										},
										{
											"begin": 23338,
											"end": 23398,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23288,
											"end": 23404,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23288,
											"end": 23404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23410,
											"end": 23547,
											"name": "tag",
											"source": 11,
											"value": "473"
										},
										{
											"begin": 23410,
											"end": 23547,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23464,
											"end": 23469,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23495,
											"end": 23501,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 23489,
											"end": 23502,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 23480,
											"end": 23502,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 23480,
											"end": 23502,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23511,
											"end": 23541,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "712"
										},
										{
											"begin": 23535,
											"end": 23540,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 23511,
											"end": 23541,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "472"
										},
										{
											"begin": 23511,
											"end": 23541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23511,
											"end": 23541,
											"name": "tag",
											"source": 11,
											"value": "712"
										},
										{
											"begin": 23511,
											"end": 23541,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23410,
											"end": 23547,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 23410,
											"end": 23547,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 23410,
											"end": 23547,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23410,
											"end": 23547,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23410,
											"end": 23547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23553,
											"end": 23898,
											"name": "tag",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 23553,
											"end": 23898,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23620,
											"end": 23626,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23669,
											"end": 23671,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 23657,
											"end": 23666,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 23648,
											"end": 23655,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 23644,
											"end": 23667,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 23640,
											"end": 23672,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 23637,
											"end": 23756,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 23637,
											"end": 23756,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "714"
										},
										{
											"begin": 23637,
											"end": 23756,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 23675,
											"end": 23754,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "715"
										},
										{
											"begin": 23675,
											"end": 23754,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 23675,
											"end": 23754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23675,
											"end": 23754,
											"name": "tag",
											"source": 11,
											"value": "715"
										},
										{
											"begin": 23675,
											"end": 23754,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23637,
											"end": 23756,
											"name": "tag",
											"source": 11,
											"value": "714"
										},
										{
											"begin": 23637,
											"end": 23756,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23795,
											"end": 23796,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23820,
											"end": 23881,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "716"
										},
										{
											"begin": 23873,
											"end": 23880,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 23864,
											"end": 23870,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 23853,
											"end": 23862,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 23849,
											"end": 23871,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23820,
											"end": 23881,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "473"
										},
										{
											"begin": 23820,
											"end": 23881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23820,
											"end": 23881,
											"name": "tag",
											"source": 11,
											"value": "716"
										},
										{
											"begin": 23820,
											"end": 23881,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23810,
											"end": 23881,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 23810,
											"end": 23881,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23766,
											"end": 23891,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23553,
											"end": 23898,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 23553,
											"end": 23898,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 23553,
											"end": 23898,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23553,
											"end": 23898,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23553,
											"end": 23898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23904,
											"end": 24133,
											"name": "tag",
											"source": 11,
											"value": "474"
										},
										{
											"begin": 23904,
											"end": 24133,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24044,
											"end": 24078,
											"name": "PUSH",
											"source": 11,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 24040,
											"end": 24041,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 24032,
											"end": 24038,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 24028,
											"end": 24042,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 24021,
											"end": 24079,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 24113,
											"end": 24125,
											"name": "PUSH",
											"source": 11,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 24108,
											"end": 24110,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 24100,
											"end": 24106,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 24096,
											"end": 24111,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 24089,
											"end": 24126,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 23904,
											"end": 24133,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23904,
											"end": 24133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 24139,
											"end": 24505,
											"name": "tag",
											"source": 11,
											"value": "475"
										},
										{
											"begin": 24139,
											"end": 24505,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24281,
											"end": 24284,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 24302,
											"end": 24369,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "719"
										},
										{
											"begin": 24366,
											"end": 24368,
											"name": "PUSH",
											"source": 11,
											"value": "2A"
										},
										{
											"begin": 24361,
											"end": 24364,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 24302,
											"end": 24369,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 24302,
											"end": 24369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 24302,
											"end": 24369,
											"name": "tag",
											"source": 11,
											"value": "719"
										},
										{
											"begin": 24302,
											"end": 24369,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24295,
											"end": 24369,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 24295,
											"end": 24369,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24378,
											"end": 24471,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "720"
										},
										{
											"begin": 24467,
											"end": 24470,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 24378,
											"end": 24471,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "474"
										},
										{
											"begin": 24378,
											"end": 24471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 24378,
											"end": 24471,
											"name": "tag",
											"source": 11,
											"value": "720"
										},
										{
											"begin": 24378,
											"end": 24471,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24496,
											"end": 24498,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 24491,
											"end": 24494,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 24487,
											"end": 24499,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 24480,
											"end": 24499,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 24480,
											"end": 24499,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24139,
											"end": 24505,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 24139,
											"end": 24505,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 24139,
											"end": 24505,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24139,
											"end": 24505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 24511,
											"end": 24930,
											"name": "tag",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 24511,
											"end": 24930,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24677,
											"end": 24681,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 24715,
											"end": 24717,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 24704,
											"end": 24713,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 24700,
											"end": 24718,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 24692,
											"end": 24718,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 24692,
											"end": 24718,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24764,
											"end": 24773,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 24758,
											"end": 24762,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 24754,
											"end": 24774,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 24750,
											"end": 24751,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 24739,
											"end": 24748,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 24735,
											"end": 24752,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 24728,
											"end": 24775,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 24792,
											"end": 24923,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "722"
										},
										{
											"begin": 24918,
											"end": 24922,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 24792,
											"end": 24923,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "475"
										},
										{
											"begin": 24792,
											"end": 24923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 24792,
											"end": 24923,
											"name": "tag",
											"source": 11,
											"value": "722"
										},
										{
											"begin": 24792,
											"end": 24923,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24784,
											"end": 24923,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 24784,
											"end": 24923,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24511,
											"end": 24930,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 24511,
											"end": 24930,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 24511,
											"end": 24930,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24511,
											"end": 24930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 24936,
											"end": 25161,
											"name": "tag",
											"source": 11,
											"value": "476"
										},
										{
											"begin": 24936,
											"end": 25161,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25076,
											"end": 25110,
											"name": "PUSH",
											"source": 11,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 25072,
											"end": 25073,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 25064,
											"end": 25070,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 25060,
											"end": 25074,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 25053,
											"end": 25111,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 25145,
											"end": 25153,
											"name": "PUSH",
											"source": 11,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25140,
											"end": 25142,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 25132,
											"end": 25138,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 25128,
											"end": 25143,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 25121,
											"end": 25154,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 24936,
											"end": 25161,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24936,
											"end": 25161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 25167,
											"end": 25533,
											"name": "tag",
											"source": 11,
											"value": "477"
										},
										{
											"begin": 25167,
											"end": 25533,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25309,
											"end": 25312,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 25330,
											"end": 25397,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "725"
										},
										{
											"begin": 25394,
											"end": 25396,
											"name": "PUSH",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 25389,
											"end": 25392,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 25330,
											"end": 25397,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 25330,
											"end": 25397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 25330,
											"end": 25397,
											"name": "tag",
											"source": 11,
											"value": "725"
										},
										{
											"begin": 25330,
											"end": 25397,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25323,
											"end": 25397,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 25323,
											"end": 25397,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25406,
											"end": 25499,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "726"
										},
										{
											"begin": 25495,
											"end": 25498,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 25406,
											"end": 25499,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "476"
										},
										{
											"begin": 25406,
											"end": 25499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 25406,
											"end": 25499,
											"name": "tag",
											"source": 11,
											"value": "726"
										},
										{
											"begin": 25406,
											"end": 25499,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25524,
											"end": 25526,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 25519,
											"end": 25522,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 25515,
											"end": 25527,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 25508,
											"end": 25527,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 25508,
											"end": 25527,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25167,
											"end": 25533,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 25167,
											"end": 25533,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 25167,
											"end": 25533,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25167,
											"end": 25533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 25539,
											"end": 25958,
											"name": "tag",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 25539,
											"end": 25958,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25705,
											"end": 25709,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 25743,
											"end": 25745,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 25732,
											"end": 25741,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 25728,
											"end": 25746,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 25720,
											"end": 25746,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 25720,
											"end": 25746,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25792,
											"end": 25801,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 25786,
											"end": 25790,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 25782,
											"end": 25802,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 25778,
											"end": 25779,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 25767,
											"end": 25776,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 25763,
											"end": 25780,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 25756,
											"end": 25803,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 25820,
											"end": 25951,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "728"
										},
										{
											"begin": 25946,
											"end": 25950,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 25820,
											"end": 25951,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "477"
										},
										{
											"begin": 25820,
											"end": 25951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 25820,
											"end": 25951,
											"name": "tag",
											"source": 11,
											"value": "728"
										},
										{
											"begin": 25820,
											"end": 25951,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25812,
											"end": 25951,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 25812,
											"end": 25951,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25539,
											"end": 25958,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 25539,
											"end": 25958,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 25539,
											"end": 25958,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25539,
											"end": 25958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 25964,
											"end": 26062,
											"name": "tag",
											"source": 11,
											"value": "478"
										},
										{
											"begin": 25964,
											"end": 26062,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26015,
											"end": 26021,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 26049,
											"end": 26054,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 26043,
											"end": 26055,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 26033,
											"end": 26055,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 26033,
											"end": 26055,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25964,
											"end": 26062,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 25964,
											"end": 26062,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 25964,
											"end": 26062,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25964,
											"end": 26062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 26068,
											"end": 26215,
											"name": "tag",
											"source": 11,
											"value": "479"
										},
										{
											"begin": 26068,
											"end": 26215,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26169,
											"end": 26180,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 26206,
											"end": 26209,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 26191,
											"end": 26209,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 26191,
											"end": 26209,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26068,
											"end": 26215,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 26068,
											"end": 26215,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 26068,
											"end": 26215,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26068,
											"end": 26215,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26068,
											"end": 26215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 26221,
											"end": 26360,
											"name": "tag",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 26221,
											"end": 26360,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26310,
											"end": 26316,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 26305,
											"end": 26308,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 26300,
											"end": 26303,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 26294,
											"end": 26317,
											"name": "MCOPY",
											"source": 11
										},
										{
											"begin": 26351,
											"end": 26352,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 26342,
											"end": 26348,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 26337,
											"end": 26340,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 26333,
											"end": 26349,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 26326,
											"end": 26353,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 26221,
											"end": 26360,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26221,
											"end": 26360,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26221,
											"end": 26360,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26221,
											"end": 26360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 26366,
											"end": 26752,
											"name": "tag",
											"source": 11,
											"value": "481"
										},
										{
											"begin": 26366,
											"end": 26752,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26470,
											"end": 26473,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 26498,
											"end": 26536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "733"
										},
										{
											"begin": 26530,
											"end": 26535,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 26498,
											"end": 26536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "478"
										},
										{
											"begin": 26498,
											"end": 26536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 26498,
											"end": 26536,
											"name": "tag",
											"source": 11,
											"value": "733"
										},
										{
											"begin": 26498,
											"end": 26536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26552,
											"end": 26640,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "734"
										},
										{
											"begin": 26633,
											"end": 26639,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 26628,
											"end": 26631,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 26552,
											"end": 26640,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "479"
										},
										{
											"begin": 26552,
											"end": 26640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 26552,
											"end": 26640,
											"name": "tag",
											"source": 11,
											"value": "734"
										},
										{
											"begin": 26552,
											"end": 26640,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26545,
											"end": 26640,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 26545,
											"end": 26640,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26649,
											"end": 26714,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "735"
										},
										{
											"begin": 26707,
											"end": 26713,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 26702,
											"end": 26705,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 26695,
											"end": 26699,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 26688,
											"end": 26693,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 26684,
											"end": 26700,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 26649,
											"end": 26714,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 26649,
											"end": 26714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 26649,
											"end": 26714,
											"name": "tag",
											"source": 11,
											"value": "735"
										},
										{
											"begin": 26649,
											"end": 26714,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26739,
											"end": 26745,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 26734,
											"end": 26737,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 26730,
											"end": 26746,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 26723,
											"end": 26746,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 26723,
											"end": 26746,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26474,
											"end": 26752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26366,
											"end": 26752,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 26366,
											"end": 26752,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 26366,
											"end": 26752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26366,
											"end": 26752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26366,
											"end": 26752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 26758,
											"end": 27029,
											"name": "tag",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 26758,
											"end": 27029,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26888,
											"end": 26891,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 26910,
											"end": 27003,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "737"
										},
										{
											"begin": 26999,
											"end": 27002,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 26990,
											"end": 26996,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 26910,
											"end": 27003,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "481"
										},
										{
											"begin": 26910,
											"end": 27003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 26910,
											"end": 27003,
											"name": "tag",
											"source": 11,
											"value": "737"
										},
										{
											"begin": 26910,
											"end": 27003,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26903,
											"end": 27003,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 26903,
											"end": 27003,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27020,
											"end": 27023,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 27013,
											"end": 27023,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 27013,
											"end": 27023,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26758,
											"end": 27029,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 26758,
											"end": 27029,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 26758,
											"end": 27029,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26758,
											"end": 27029,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26758,
											"end": 27029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 27035,
											"end": 27214,
											"name": "tag",
											"source": 11,
											"value": "482"
										},
										{
											"begin": 27035,
											"end": 27214,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 27175,
											"end": 27206,
											"name": "PUSH",
											"source": 11,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 27171,
											"end": 27172,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 27163,
											"end": 27169,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 27159,
											"end": 27173,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 27152,
											"end": 27207,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 27035,
											"end": 27214,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27035,
											"end": 27214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 27220,
											"end": 27586,
											"name": "tag",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 27220,
											"end": 27586,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 27362,
											"end": 27365,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 27383,
											"end": 27450,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "740"
										},
										{
											"begin": 27447,
											"end": 27449,
											"name": "PUSH",
											"source": 11,
											"value": "1D"
										},
										{
											"begin": 27442,
											"end": 27445,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 27383,
											"end": 27450,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 27383,
											"end": 27450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 27383,
											"end": 27450,
											"name": "tag",
											"source": 11,
											"value": "740"
										},
										{
											"begin": 27383,
											"end": 27450,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 27376,
											"end": 27450,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 27376,
											"end": 27450,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27459,
											"end": 27552,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "741"
										},
										{
											"begin": 27548,
											"end": 27551,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 27459,
											"end": 27552,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "482"
										},
										{
											"begin": 27459,
											"end": 27552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 27459,
											"end": 27552,
											"name": "tag",
											"source": 11,
											"value": "741"
										},
										{
											"begin": 27459,
											"end": 27552,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 27577,
											"end": 27579,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 27572,
											"end": 27575,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 27568,
											"end": 27580,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 27561,
											"end": 27580,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 27561,
											"end": 27580,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27220,
											"end": 27586,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 27220,
											"end": 27586,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 27220,
											"end": 27586,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27220,
											"end": 27586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 27592,
											"end": 28011,
											"name": "tag",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 27592,
											"end": 28011,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 27758,
											"end": 27762,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 27796,
											"end": 27798,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 27785,
											"end": 27794,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 27781,
											"end": 27799,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 27773,
											"end": 27799,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 27773,
											"end": 27799,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27845,
											"end": 27854,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 27839,
											"end": 27843,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 27835,
											"end": 27855,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 27831,
											"end": 27832,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 27820,
											"end": 27829,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 27816,
											"end": 27833,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 27809,
											"end": 27856,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 27873,
											"end": 28004,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "743"
										},
										{
											"begin": 27999,
											"end": 28003,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 27873,
											"end": 28004,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 27873,
											"end": 28004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 27873,
											"end": 28004,
											"name": "tag",
											"source": 11,
											"value": "743"
										},
										{
											"begin": 27873,
											"end": 28004,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 27865,
											"end": 28004,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 27865,
											"end": 28004,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27592,
											"end": 28011,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 27592,
											"end": 28011,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 27592,
											"end": 28011,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27592,
											"end": 28011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 28017,
											"end": 28116,
											"name": "tag",
											"source": 11,
											"value": "484"
										},
										{
											"begin": 28017,
											"end": 28116,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28069,
											"end": 28075,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 28103,
											"end": 28108,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 28097,
											"end": 28109,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 28087,
											"end": 28109,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 28087,
											"end": 28109,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28017,
											"end": 28116,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 28017,
											"end": 28116,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 28017,
											"end": 28116,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28017,
											"end": 28116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 28122,
											"end": 28224,
											"name": "tag",
											"source": 11,
											"value": "485"
										},
										{
											"begin": 28122,
											"end": 28224,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28163,
											"end": 28169,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 28214,
											"end": 28216,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 28210,
											"end": 28217,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 28205,
											"end": 28207,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 28198,
											"end": 28203,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 28194,
											"end": 28208,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 28190,
											"end": 28218,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 28180,
											"end": 28218,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 28180,
											"end": 28218,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28122,
											"end": 28224,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 28122,
											"end": 28224,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 28122,
											"end": 28224,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28122,
											"end": 28224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 28230,
											"end": 28607,
											"name": "tag",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 28230,
											"end": 28607,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28318,
											"end": 28321,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 28346,
											"end": 28385,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "747"
										},
										{
											"begin": 28379,
											"end": 28384,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 28346,
											"end": 28385,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "484"
										},
										{
											"begin": 28346,
											"end": 28385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 28346,
											"end": 28385,
											"name": "tag",
											"source": 11,
											"value": "747"
										},
										{
											"begin": 28346,
											"end": 28385,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28401,
											"end": 28472,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "748"
										},
										{
											"begin": 28465,
											"end": 28471,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 28460,
											"end": 28463,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 28401,
											"end": 28472,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 28401,
											"end": 28472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 28401,
											"end": 28472,
											"name": "tag",
											"source": 11,
											"value": "748"
										},
										{
											"begin": 28401,
											"end": 28472,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28394,
											"end": 28472,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 28394,
											"end": 28472,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28481,
											"end": 28546,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "749"
										},
										{
											"begin": 28539,
											"end": 28545,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 28534,
											"end": 28537,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 28527,
											"end": 28531,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 28520,
											"end": 28525,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 28516,
											"end": 28532,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 28481,
											"end": 28546,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 28481,
											"end": 28546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 28481,
											"end": 28546,
											"name": "tag",
											"source": 11,
											"value": "749"
										},
										{
											"begin": 28481,
											"end": 28546,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28571,
											"end": 28600,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "750"
										},
										{
											"begin": 28593,
											"end": 28599,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 28571,
											"end": 28600,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "485"
										},
										{
											"begin": 28571,
											"end": 28600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 28571,
											"end": 28600,
											"name": "tag",
											"source": 11,
											"value": "750"
										},
										{
											"begin": 28571,
											"end": 28600,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28566,
											"end": 28569,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 28562,
											"end": 28601,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 28555,
											"end": 28601,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 28555,
											"end": 28601,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28322,
											"end": 28607,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28230,
											"end": 28607,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 28230,
											"end": 28607,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 28230,
											"end": 28607,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28230,
											"end": 28607,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28230,
											"end": 28607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 28613,
											"end": 28926,
											"name": "tag",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 28613,
											"end": 28926,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28726,
											"end": 28730,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 28764,
											"end": 28766,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 28753,
											"end": 28762,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 28749,
											"end": 28767,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 28741,
											"end": 28767,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 28741,
											"end": 28767,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28813,
											"end": 28822,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 28807,
											"end": 28811,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 28803,
											"end": 28823,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 28799,
											"end": 28800,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 28788,
											"end": 28797,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 28784,
											"end": 28801,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 28777,
											"end": 28824,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 28841,
											"end": 28919,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "752"
										},
										{
											"begin": 28914,
											"end": 28918,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 28905,
											"end": 28911,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 28841,
											"end": 28919,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 28841,
											"end": 28919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 28841,
											"end": 28919,
											"name": "tag",
											"source": 11,
											"value": "752"
										},
										{
											"begin": 28841,
											"end": 28919,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28833,
											"end": 28919,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 28833,
											"end": 28919,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28613,
											"end": 28926,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 28613,
											"end": 28926,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 28613,
											"end": 28926,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28613,
											"end": 28926,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28613,
											"end": 28926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"contracts/YieldFarm.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addPool(address,address,uint256,uint256)": "c20632ba",
							"baseRewardRate()": "afbf3440",
							"claimReward(uint256)": "ae169a50",
							"distributeGovernanceTokens(address,uint256)": "dfaae412",
							"emergencyWithdraw(uint256)": "5312ea8e",
							"governanceToken()": "f96dae0a",
							"initialize(address,address,uint256,uint256,uint256,uint256,uint256,uint256)": "8ba796af",
							"maxMultiplier()": "0187aea0",
							"multiplierDuration()": "085cde2d",
							"nftBoostRate()": "e0283faf",
							"nftToken()": "d06fcba8",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"poolInfo(uint256)": "1526fe27",
							"poolStakes(uint256,address)": "381e75eb",
							"refereeBonus()": "ce98f049",
							"referralBonus()": "ce7842f5",
							"referralRewards(address)": "53aaa63b",
							"referrers(address)": "4a3b68cc",
							"renounceOwnership()": "715018a6",
							"setLockDuration(uint256,uint256)": "126796dd",
							"setNftBoostRate(uint256)": "3b1e3eb8",
							"setReferrer(address)": "a18a7bfc",
							"setRewardRate(uint256,uint256)": "3462e0a8",
							"stake(uint256,uint256)": "7b0472f0",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"unstake(uint256,uint256)": "9e2c8a5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"stakingToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockDuration\",\"type\":\"uint256\"}],\"name\":\"PoolAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"}],\"name\":\"ReferrerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockUntil\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lockDuration\",\"type\":\"uint256\"}],\"name\":\"addPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseRewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"distributeGovernanceTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governanceToken\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"_governanceToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC721Upgradeable\",\"name\":\"_nftToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_baseRewardRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_multiplierDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_nftBoostRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_referralBonus\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_refereeBonus\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"multiplierDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftBoostRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftToken\",\"outputs\":[{\"internalType\":\"contract IERC721Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"stakingToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accRewardPerShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"poolStakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockUntil\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refereeBonus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"referralBonus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referralRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referrers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lockDuration\",\"type\":\"uint256\"}],\"name\":\"setLockDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_nftBoostRate\",\"type\":\"uint256\"}],\"name\":\"setNftBoostRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_referrer\",\"type\":\"address\"}],\"name\":\"setReferrer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewardRate\",\"type\":\"uint256\"}],\"name\":\"setRewardRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A yield farming contract where users can stake ERC-20 tokens to earn rewards. It includes support for boosting rewards with NFTs and a referral system.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"addPool(address,address,uint256,uint256)\":{\"details\":\"Adds a new staking pool\",\"params\":{\"_lockDuration\":\"Duration for which stakes are locked\",\"_rewardRate\":\"Rate at which rewards are distributed\",\"_rewardToken\":\"Address of the token given as reward\",\"_stakingToken\":\"Address of the token to be staked\"}},\"claimReward(uint256)\":{\"details\":\"Allows a user to claim their rewards from a specific pool\",\"params\":{\"_pid\":\"Pool ID\"}},\"distributeGovernanceTokens(address,uint256)\":{\"details\":\"Allows the owner to distribute governance tokens\",\"params\":{\"_amount\":\"Amount of tokens to distribute\",\"_user\":\"Address of the user to receive tokens\"}},\"emergencyWithdraw(uint256)\":{\"details\":\"Allows a user to emergency withdraw their stake without caring about rewards\",\"params\":{\"_pid\":\"Pool ID\"}},\"initialize(address,address,uint256,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Initializes the contract with initial values\",\"params\":{\"_baseRewardRate\":\"Base rate for reward calculation\",\"_governanceToken\":\"Address of the governance token\",\"_maxMultiplier\":\"Maximum multiplier for rewards\",\"_multiplierDuration\":\"Duration over which the multiplier increases\",\"_nftBoostRate\":\"Boost rate for holding NFTs\",\"_nftToken\":\"Address of the NFT token for boost mechanism\",\"_refereeBonus\":\"Bonus for being referred\",\"_referralBonus\":\"Bonus for referring new users\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Allows the owner to pause the contract\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setLockDuration(uint256,uint256)\":{\"details\":\"Allows the owner to set the lock duration for a specific pool\",\"params\":{\"_lockDuration\":\"New lock duration\",\"_pid\":\"Pool ID\"}},\"setNftBoostRate(uint256)\":{\"details\":\"Allows the owner to set the NFT boost rate\",\"params\":{\"_nftBoostRate\":\"New NFT boost rate\"}},\"setReferrer(address)\":{\"details\":\"Allows a user to set their referrer\",\"params\":{\"_referrer\":\"Address of the referrer\"}},\"setRewardRate(uint256,uint256)\":{\"details\":\"Allows the owner to set the reward rate for a specific pool\",\"params\":{\"_pid\":\"Pool ID\",\"_rewardRate\":\"New reward rate\"}},\"stake(uint256,uint256)\":{\"details\":\"Allows a user to stake tokens in a specific pool\",\"params\":{\"_amount\":\"Amount of tokens to stake\",\"_pid\":\"Pool ID\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Allows the owner to unpause the contract\"},\"unstake(uint256,uint256)\":{\"details\":\"Allows a user to unstake tokens from a specific pool\",\"params\":{\"_amount\":\"Amount of tokens to unstake\",\"_pid\":\"Pool ID\"}}},\"title\":\"YieldFarm\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/YieldFarm.sol\":\"YieldFarm\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x2025ccf05f6f1f2fd4e078e552836f525a1864e3854ed555047cd732320ab29b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d27f4b23c2dee42394aebaf42bf238285230f472dfd3282a39c3f000ec28214f\",\"dweb:/ipfs/QmQa3DnvccwdWJeWrjgXPnFMTWbzWQWR39hVqC7eEwo2PC\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x07e881de3b9f6d2c07909f193f24b96c7fe4ea60013260f3f25aecd8bab3c2f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fed09b97ccb0ff9ba9b6a94224f1d489026bf6b4b7279bfe64fb6e8749dee4d\",\"dweb:/ipfs/QmcRAzaSP1UnGr4vrGkfJmB2L9aiTYoXfV1Lg9gqrVRWn8\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x23b997be73d3dd46885262704f0f8cfc7273fdadfe303d37969a9561373972b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d03ebe5406134f0c4a017dee625ff615031194493bd1e88504e5c8fae55bc166\",\"dweb:/ipfs/QmUZV5bMbgk2PAkV3coouSeSainHN2jhqaQDJaA7hQRyu2\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0xbe63437e37e32162d5d11ea8f11a44378c092b4bcbb05b51a813fe4bf33297d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68a514febde6ffd8afe3cb5b40815d10c0a926063237d5d167cbaa90239f75ae\",\"dweb:/ipfs/QmVBvYeR6oGBw7K7vu5FMotr8josejtaGwugM68VTZacww\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"contracts/YieldFarm.sol\":{\"keccak256\":\"0x2481e827d942c9e4373a1481f1197e117f1666937d8fcf60ccae5804529b2ddb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57120bbb4d79f7851859035f19d4d11a08788f493b030080c50b6b92d0c43755\",\"dweb:/ipfs/QmddUeGwNSFjSTci8LsdqeFg6GDK6sRFiHJtm12ProWZ4k\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 463,
								"contract": "contracts/YieldFarm.sol:YieldFarm",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 532,
								"contract": "contracts/YieldFarm.sol:YieldFarm",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 1574,
								"contract": "contracts/YieldFarm.sol:YieldFarm",
								"label": "poolInfo",
								"offset": 0,
								"slot": "50",
								"type": "t_array(t_struct(PoolInfo)1570_storage)dyn_storage"
							},
							{
								"astId": 1581,
								"contract": "contracts/YieldFarm.sol:YieldFarm",
								"label": "poolStakes",
								"offset": 0,
								"slot": "51",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(StakeInfo)1553_storage))"
							},
							{
								"astId": 1585,
								"contract": "contracts/YieldFarm.sol:YieldFarm",
								"label": "referrers",
								"offset": 0,
								"slot": "52",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 1589,
								"contract": "contracts/YieldFarm.sol:YieldFarm",
								"label": "referralRewards",
								"offset": 0,
								"slot": "53",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1591,
								"contract": "contracts/YieldFarm.sol:YieldFarm",
								"label": "baseRewardRate",
								"offset": 0,
								"slot": "54",
								"type": "t_uint256"
							},
							{
								"astId": 1593,
								"contract": "contracts/YieldFarm.sol:YieldFarm",
								"label": "maxMultiplier",
								"offset": 0,
								"slot": "55",
								"type": "t_uint256"
							},
							{
								"astId": 1595,
								"contract": "contracts/YieldFarm.sol:YieldFarm",
								"label": "multiplierDuration",
								"offset": 0,
								"slot": "56",
								"type": "t_uint256"
							},
							{
								"astId": 1597,
								"contract": "contracts/YieldFarm.sol:YieldFarm",
								"label": "nftBoostRate",
								"offset": 0,
								"slot": "57",
								"type": "t_uint256"
							},
							{
								"astId": 1599,
								"contract": "contracts/YieldFarm.sol:YieldFarm",
								"label": "referralBonus",
								"offset": 0,
								"slot": "58",
								"type": "t_uint256"
							},
							{
								"astId": 1601,
								"contract": "contracts/YieldFarm.sol:YieldFarm",
								"label": "refereeBonus",
								"offset": 0,
								"slot": "59",
								"type": "t_uint256"
							},
							{
								"astId": 1603,
								"contract": "contracts/YieldFarm.sol:YieldFarm",
								"label": "paused",
								"offset": 0,
								"slot": "60",
								"type": "t_bool"
							},
							{
								"astId": 1606,
								"contract": "contracts/YieldFarm.sol:YieldFarm",
								"label": "nftToken",
								"offset": 1,
								"slot": "60",
								"type": "t_contract(IERC721Upgradeable)1139"
							},
							{
								"astId": 1609,
								"contract": "contracts/YieldFarm.sol:YieldFarm",
								"label": "governanceToken",
								"offset": 0,
								"slot": "61",
								"type": "t_contract(IERC20Upgradeable)611"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(PoolInfo)1570_storage)dyn_storage": {
								"base": "t_struct(PoolInfo)1570_storage",
								"encoding": "dynamic_array",
								"label": "struct YieldFarm.PoolInfo[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20Upgradeable)611": {
								"encoding": "inplace",
								"label": "contract IERC20Upgradeable",
								"numberOfBytes": "20"
							},
							"t_contract(IERC721Upgradeable)1139": {
								"encoding": "inplace",
								"label": "contract IERC721Upgradeable",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_struct(StakeInfo)1553_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct YieldFarm.StakeInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(StakeInfo)1553_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_struct(StakeInfo)1553_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct YieldFarm.StakeInfo))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(StakeInfo)1553_storage)"
							},
							"t_struct(PoolInfo)1570_storage": {
								"encoding": "inplace",
								"label": "struct YieldFarm.PoolInfo",
								"members": [
									{
										"astId": 1556,
										"contract": "contracts/YieldFarm.sol:YieldFarm",
										"label": "stakingToken",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IERC20Upgradeable)611"
									},
									{
										"astId": 1559,
										"contract": "contracts/YieldFarm.sol:YieldFarm",
										"label": "rewardToken",
										"offset": 0,
										"slot": "1",
										"type": "t_contract(IERC20Upgradeable)611"
									},
									{
										"astId": 1561,
										"contract": "contracts/YieldFarm.sol:YieldFarm",
										"label": "rewardRate",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1563,
										"contract": "contracts/YieldFarm.sol:YieldFarm",
										"label": "lockDuration",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1565,
										"contract": "contracts/YieldFarm.sol:YieldFarm",
										"label": "totalStaked",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1567,
										"contract": "contracts/YieldFarm.sol:YieldFarm",
										"label": "accRewardPerShare",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1569,
										"contract": "contracts/YieldFarm.sol:YieldFarm",
										"label": "lastRewardTime",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_struct(StakeInfo)1553_storage": {
								"encoding": "inplace",
								"label": "struct YieldFarm.StakeInfo",
								"members": [
									{
										"astId": 1548,
										"contract": "contracts/YieldFarm.sol:YieldFarm",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1550,
										"contract": "contracts/YieldFarm.sol:YieldFarm",
										"label": "rewardDebt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1552,
										"contract": "contracts/YieldFarm.sol:YieldFarm",
										"label": "lockUntil",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1515
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 1516,
							"src": "128:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1515,
										"src": "136:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 449,
							"src": "196:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "204:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Initializable",
										"nameLocations": [
											"789:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "789:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1515,
										"src": "804:18:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								1515,
								448
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "931:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:0",
									"nodeType": "StructDefinition",
									"scope": 194,
									"src": "899:53:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "1069:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1270:81:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:0",
													"nodeType": "YulBlock",
													"src": "1289:56:0",
													"statements": [
														{
															"nativeSrc": "1303:32:0",
															"nodeType": "YulAssignment",
															"src": "1303:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:0",
																"nodeType": "YulIdentifier",
																"src": "1313:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1280:65:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1244:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "1244:14:0"
													},
													"referencedDeclaration": 14,
													"src": "1244:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:0"
									},
									"scope": 194,
									"src": "1192:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 30,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:0"
									},
									"src": "1447:50:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 35,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1616:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:0"
									},
									"src": "1590:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 41,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1664:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1695:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:0"
									},
									"src": "1637:84:0"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1919:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 50,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "1929:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1902:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1871:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 194,
									"src": "1847:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2062:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2076:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "IfStatement",
												"src": "2072:95:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "2104:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 69,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 68,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "2125:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 73,
															"nodeType": "RevertStatement",
															"src": "2118:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2195:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:0"
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 59,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 58,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2045:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2014:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:0"
									},
									"scope": 194,
									"src": "1980:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:0"
											},
											{
												"id": 87,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 89,
									"name": "onlyOwner",
									"nameLocation": "2312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:0"
									},
									"src": "2303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2496:89:0",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "2506:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 96,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 95,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2506:14:0"
															},
															"referencedDeclaration": 14,
															"src": "2506:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 98,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2533:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 101,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "2570:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 94,
												"id": 103,
												"nodeType": "Return",
												"src": "2563:15:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:0"
									},
									"scope": 194,
									"src": "2441:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2703:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 109,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 111,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1497,
															"src": "2728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2713:101:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2742:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 115,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1497,
																			"src": "2790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 114,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2763:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2756:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:0"
									},
									"scope": 194,
									"src": "2658:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3209:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 128,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3219:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 125,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3199:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:0"
									},
									"scope": 194,
									"src": "3155:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3475:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 144,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "3489:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3485:91:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3513:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 151,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 150,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3534:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3527:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3585:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3465:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3432:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:0"
									},
									"scope": 194,
									"src": "3405:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "3837:185:0",
										"statements": [
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3847:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 171,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 170,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "3847:14:0"
															},
															"referencedDeclaration": 14,
															"src": "3847:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3874:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:0"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3904:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 176,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"expression": {
														"id": 178,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "3923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 181,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "3941:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "3941:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "3952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 188,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3975:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "EmitStatement",
												"src": "3970:45:0"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3802:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:0"
									},
									"scope": 194,
									"src": "3774:248:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 195,
							"src": "749:3275:0",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219
							]
						}
					],
					"src": "102:3923:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							448
						]
					},
					"id": 449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 448,
							"linearizedBaseContracts": [
								448
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 205,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 200,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 203,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 448,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 208,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 448,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 206,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 211,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 214,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 219,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 216,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4092:1081:1",
										"statements": [
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 222,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 205,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 230,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 234,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"expression": {
														"id": 236,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4706:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 241,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4726:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 244,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4746:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:1"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4770:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 249,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4790:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 254,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 252,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:1",
														"subExpression": {
															"id": 262,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4856:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:1",
														"subExpression": {
															"id": 264,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4873:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "4851:91:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "4887:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 267,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "4908:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "4901:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 272,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4951:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "4951:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:1"
											},
											{
												"condition": {
													"id": 278,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "4983:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 286,
												"nodeType": "IfStatement",
												"src": "4979:67:1",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "4999:47:1",
													"statements": [
														{
															"expression": {
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 279,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5013:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5013:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:1"
														}
													]
												}
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:1"
											},
											{
												"condition": {
													"id": 288,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "5070:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "5066:101:1",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "5086:81:1",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 289,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5100:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 295,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5142:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "5137:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 302,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1104:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "6291:392:1",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "6357:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 308,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 307,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "6357:20:1"
															},
															"referencedDeclaration": 205,
															"src": "6357:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "6390:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 313,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6431:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6431:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 315,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6450:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 201,
															"src": "6450:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 317,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "6427:105:1",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "6477:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 320,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "6498:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 322,
															"nodeType": "RevertStatement",
															"src": "6491:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 325,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6541:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "6541:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "6558:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:1"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 331,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6575:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6575:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:1"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 338,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6618:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6618:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 345,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 344,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "6656:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "EmitStatement",
												"src": "6651:25:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 349,
									"name": "reinitializer",
									"nameLocation": "6261:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6275:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 304,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:1"
									},
									"src": "6252:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "6921:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "6931:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:1"
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 357,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:1"
									},
									"src": "6893:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "7136:89:1",
										"statements": [
											{
												"condition": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 361,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7151:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7146:73:1",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7170:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 364,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "7191:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 366,
															"nodeType": "RevertStatement",
															"src": "7184:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:1"
									},
									"scope": 448,
									"src": "7084:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7760:373:1",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "7826:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 375,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 374,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "7826:20:1"
															},
															"referencedDeclaration": 205,
															"src": "7826:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "7859:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 380,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "7900:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "7900:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "7896:76:1",
												"trueBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "7917:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "7938:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 384,
															"nodeType": "RevertStatement",
															"src": "7931:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "7985:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "7985:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 389,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7981:146:1",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "8021:106:1",
													"statements": [
														{
															"expression": {
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 395,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "8035:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "8035:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 399,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 398,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 407,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 406,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 405,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "8087:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "EmitStatement",
															"src": "8082:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:1"
									},
									"scope": 448,
									"src": "7711:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "8308:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 422,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8325:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "8325:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "8318:46:1"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "8300:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 419,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:1"
									},
									"scope": 448,
									"src": "8243:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "8543:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 433,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8560:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "8560:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "8553:47:1"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "8537:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:1"
									},
									"scope": 448,
									"src": "8487:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "8827:80:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:1",
													"nodeType": "YulBlock",
													"src": "8846:55:1",
													"statements": [
														{
															"nativeSrc": "8860:31:1",
															"nodeType": "YulAssignment",
															"src": "8860:31:1",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:1",
																"nodeType": "YulIdentifier",
																"src": "8870:21:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 443,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 208,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:1",
														"valueSize": 1
													}
												],
												"id": 445,
												"nodeType": "InlineAssembly",
												"src": "8837:64:1"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:1"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "8795:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 441,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 205,
														"src": "8795:20:1"
													},
													"referencedDeclaration": 205,
													"src": "8795:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:1"
									},
									"scope": 448,
									"src": "8737:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 449,
							"src": "2349:6560:1",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "113:8797:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
					"exportedSymbols": {
						"Initializable": [
							448
						],
						"ReentrancyGuardUpgradeable": [
							533
						]
					},
					"id": 534,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 450,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 452,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 534,
							"sourceUnit": 449,
							"src": "136:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 451,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "144:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 454,
										"name": "Initializable",
										"nameLocations": [
											"1000:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "1000:13:2"
									},
									"id": 455,
									"nodeType": "InheritanceSpecifier",
									"src": "1000:13:2"
								}
							],
							"canonicalName": "ReentrancyGuardUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 453,
								"nodeType": "StructuredDocumentation",
								"src": "201:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 533,
							"linearizedBaseContracts": [
								533,
								448
							],
							"name": "ReentrancyGuardUpgradeable",
							"nameLocation": "970:26:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 458,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1793:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "1768:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 456,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1768:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 457,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1808:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 461,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1840:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "1815:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 459,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1815:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 460,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1851:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 463,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1875:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "1859:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 462,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1859:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "1949:51:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 468,
														"name": "__ReentrancyGuard_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "1959:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1959:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "1959:34:2"
											}
										]
									},
									"id": 472,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 466,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 465,
												"name": "onlyInitializing",
												"nameLocations": [
													"1932:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1932:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1932:16:2"
										}
									],
									"name": "__ReentrancyGuard_init",
									"nameLocation": "1898:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1920:2:2"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1949:0:2"
									},
									"scope": 533,
									"src": "1889:111:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "2076:39:2",
										"statements": [
											{
												"expression": {
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 477,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "2086:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 478,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "2096:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2086:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 480,
												"nodeType": "ExpressionStatement",
												"src": "2086:22:2"
											}
										]
									},
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 475,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 474,
												"name": "onlyInitializing",
												"nameLocations": [
													"2059:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2059:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2059:16:2"
										}
									],
									"name": "__ReentrancyGuard_init_unchained",
									"nameLocation": "2015:32:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2047:2:2"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2076:0:2"
									},
									"scope": 533,
									"src": "2006:109:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "2516:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 485,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "2526:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2526:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "2526:21:2"
											},
											{
												"id": 488,
												"nodeType": "PlaceholderStatement",
												"src": "2557:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 489,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "2568:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2568:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 491,
												"nodeType": "ExpressionStatement",
												"src": "2568:20:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "2121:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 493,
									"name": "nonReentrant",
									"nameLocation": "2501:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2513:2:2"
									},
									"src": "2492:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "2640:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 497,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 463,
																"src": "2733:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 498,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 461,
																"src": "2744:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2733:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2754:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 496,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2725:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2725:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 502,
												"nodeType": "ExpressionStatement",
												"src": "2725:63:2"
											},
											{
												"expression": {
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 503,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "2863:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 504,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "2873:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2863:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "2863:18:2"
											}
										]
									},
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2610:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2629:2:2"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:0:2"
									},
									"scope": 533,
									"src": "2601:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "2932:171:2",
										"statements": [
											{
												"expression": {
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 511,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "3074:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 512,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "3084:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3074:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "3074:22:2"
											}
										]
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2903:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2921:2:2"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2932:0:2"
									},
									"scope": 533,
									"src": "2894:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "3346:43:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 522,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "3363:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 523,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "3374:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3363:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 521,
												"id": 525,
												"nodeType": "Return",
												"src": "3356:26:2"
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "3109:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3291:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3314:2:2"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "3340:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 519,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3340:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:6:2"
									},
									"scope": 533,
									"src": "3282:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "3395:254:2",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 532,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3674:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "3654:25:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 529,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3654:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 531,
										"length": {
											"hexValue": "3439",
											"id": 530,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3662:2:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3654:11:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 534,
							"src": "952:2730:2",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "112:3571:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
					"exportedSymbols": {
						"IERC20Upgradeable": [
							611
						]
					},
					"id": 612,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 535,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 536,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 611,
							"linearizedBaseContracts": [
								611
							],
							"name": "IERC20Upgradeable",
							"nameLocation": "212:17:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "236:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 545,
									"name": "Transfer",
									"nameLocation": "405:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "430:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "414:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "452:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "436:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "464:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "456:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:57:3"
									},
									"src": "399:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 546,
										"nodeType": "StructuredDocumentation",
										"src": "477:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 554,
									"name": "Approval",
									"nameLocation": "636:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "661:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "645:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "684:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "668:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "701:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "693:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:63:3"
									},
									"src": "630:78:3"
								},
								{
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "714:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 560,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "794:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "805:2:3"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "831:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:9:3"
									},
									"scope": 611,
									"src": "785:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "846:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 568,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "932:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "950:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "942:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:17:3"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "982:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "981:9:3"
									},
									"scope": 611,
									"src": "923:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "997:202:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 578,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1242:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "1234:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:28:3"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "1268:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 575,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:3"
									},
									"scope": 611,
									"src": "1204:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 588,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "1568:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "1583:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:3"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "1623:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:3"
									},
									"scope": 611,
									"src": "1549:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "1638:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 598,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2294:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2310:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "2302:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2302:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2327:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "2319:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:33:3"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "2353:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 595,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2353:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2352:6:3"
									},
									"scope": 611,
									"src": "2285:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "2365:287:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 610,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2666:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "2679:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2701:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "2693:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2713:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "2705:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2678:42:3"
									},
									"returnParameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "2739:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 607,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2739:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2738:6:3"
									},
									"scope": 611,
									"src": "2657:88:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 612,
							"src": "202:2545:3",
							"usedErrors": [],
							"usedEvents": [
								545,
								554
							]
						}
					],
					"src": "106:2642:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol",
					"exportedSymbols": {
						"IERC20PermitUpgradeable": [
							647
						]
					},
					"id": 648,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 613,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "123:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20PermitUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 614,
								"nodeType": "StructuredDocumentation",
								"src": "148:1963:4",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 647,
							"linearizedBaseContracts": [
								647
							],
							"name": "IERC20PermitUpgradeable",
							"nameLocation": "2122:23:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 615,
										"nodeType": "StructuredDocumentation",
										"src": "2152:850:4",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 632,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3016:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3040:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "3032:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3032:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3063:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "3055:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3055:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3088:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "3080:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3080:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3111:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "3103:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3103:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3135:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "3129:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 624,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3129:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3154:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "3146:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 626,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3173:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "3165:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 628,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:158:4"
									},
									"returnParameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3189:0:4"
									},
									"scope": 647,
									"src": "3007:183:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "3196:294:4",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 640,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3504:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3519:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3511:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3511:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3510:15:4"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3549:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3549:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3548:9:4"
									},
									"scope": 647,
									"src": "3495:63:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "3564:128:4",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 646,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3759:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3775:2:4"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "3801:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 643,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3801:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3800:9:4"
									},
									"scope": 647,
									"src": "3750:60:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 648,
							"src": "2112:1700:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3690:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1469
						],
						"IERC20PermitUpgradeable": [
							647
						],
						"IERC20Upgradeable": [
							611
						],
						"SafeERC20Upgradeable": [
							1023
						]
					},
					"id": 1024,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 649,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"file": "../IERC20Upgradeable.sol",
							"id": 650,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1024,
							"sourceUnit": 612,
							"src": "140:34:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol",
							"file": "../extensions/IERC20PermitUpgradeable.sol",
							"id": 651,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1024,
							"sourceUnit": 648,
							"src": "175:51:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../../utils/AddressUpgradeable.sol",
							"id": 652,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1024,
							"sourceUnit": 1470,
							"src": "227:47:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 653,
								"nodeType": "StructuredDocumentation",
								"src": "276:457:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1023,
							"linearizedBaseContracts": [
								1023
							],
							"name": "SafeERC20Upgradeable",
							"nameLocation": "742:20:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 656,
									"libraryName": {
										"id": 654,
										"name": "AddressUpgradeable",
										"nameLocations": [
											"775:18:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1469,
										"src": "775:18:5"
									},
									"nodeType": "UsingForDirective",
									"src": "769:37:5",
									"typeName": {
										"id": 655,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "798:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "1079:103:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 668,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "1109:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 671,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 660,
																			"src": "1139:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1145:8:5",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 578,
																		"src": "1139:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1154:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1139:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 674,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 662,
																	"src": "1164:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 675,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 664,
																	"src": "1168:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 669,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1116:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 670,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1120:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1116:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1116:58:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 667,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "1089:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$611_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1089:86:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 678,
												"nodeType": "ExpressionStatement",
												"src": "1089:86:5"
											}
										]
									},
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "812:179:5",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1005:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1036:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "1018:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 659,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 658,
														"name": "IERC20Upgradeable",
														"nameLocations": [
															"1018:17:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 611,
														"src": "1018:17:5"
													},
													"referencedDeclaration": 611,
													"src": "1018:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1051:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "1043:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1063:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "1055:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:52:5"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1079:0:5"
									},
									"scope": 1023,
									"src": "996:186:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "1522:113:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 694,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "1552:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 697,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 684,
																			"src": "1582:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 698,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1588:12:5",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 610,
																		"src": "1582:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1601:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1582:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 700,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 686,
																	"src": "1611:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 701,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 688,
																	"src": "1617:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 702,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 690,
																	"src": "1621:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 695,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1559:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1563:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1559:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1559:68:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 693,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "1532:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$611_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1532:96:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 705,
												"nodeType": "ExpressionStatement",
												"src": "1532:96:5"
											}
										]
									},
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "1188:228:5",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1430:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1465:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "1447:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 683,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 682,
														"name": "IERC20Upgradeable",
														"nameLocations": [
															"1447:17:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 611,
														"src": "1447:17:5"
													},
													"referencedDeclaration": 611,
													"src": "1447:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1480:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "1472:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1472:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1494:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "1486:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1486:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1506:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "1498:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1498:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1446:66:5"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1522:0:5"
									},
									"scope": 1023,
									"src": "1421:214:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 750,
										"nodeType": "Block",
										"src": "1982:497:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 719,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 715,
																			"src": "2231:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 720,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2240:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2231:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 722,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2230:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 727,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "2271:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$1023",
																								"typeString": "library SafeERC20Upgradeable"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$1023",
																								"typeString": "library SafeERC20Upgradeable"
																							}
																						],
																						"id": 726,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "2263:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 725,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "2263:7:5",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 728,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2263:13:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 729,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 713,
																					"src": "2278:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 723,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 711,
																					"src": "2247:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																						"typeString": "contract IERC20Upgradeable"
																					}
																				},
																				"id": 724,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2253:9:5",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 588,
																				"src": "2247:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2247:39:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2290:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2247:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 733,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2246:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2230:62:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2306:56:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 718,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2209:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2209:163:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 737,
												"nodeType": "ExpressionStatement",
												"src": "2209:163:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 739,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "2402:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 742,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 711,
																			"src": "2432:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2438:7:5",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 598,
																		"src": "2432:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2446:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2432:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 745,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 713,
																	"src": "2456:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 746,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 715,
																	"src": "2465:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 740,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2409:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2413:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2409:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2409:62:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 738,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "2382:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$611_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2382:90:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 749,
												"nodeType": "ExpressionStatement",
												"src": "2382:90:5"
											}
										]
									},
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "1641:249:5",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1904:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1934:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "1916:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 710,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 709,
														"name": "IERC20Upgradeable",
														"nameLocations": [
															"1916:17:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 611,
														"src": "1916:17:5"
													},
													"referencedDeclaration": 611,
													"src": "1916:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1949:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "1941:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1941:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1966:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "1958:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1958:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1915:57:5"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1982:0:5"
									},
									"scope": 1023,
									"src": "1895:584:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 787,
										"nodeType": "Block",
										"src": "2767:194:5",
										"statements": [
											{
												"assignments": [
													763
												],
												"declarations": [
													{
														"constant": false,
														"id": 763,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2785:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 787,
														"src": "2777:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 762,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2777:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 772,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 768,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2824:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$1023",
																		"typeString": "library SafeERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$1023",
																		"typeString": "library SafeERC20Upgradeable"
																	}
																],
																"id": 767,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2816:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 766,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2816:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2816:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 770,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "2831:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 764,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "2800:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 765,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2806:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 588,
														"src": "2800:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2800:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2777:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 774,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "2869:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 777,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 755,
																			"src": "2899:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2905:7:5",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 598,
																		"src": "2899:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2913:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2899:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 780,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "2923:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 781,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 763,
																		"src": "2932:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 782,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 759,
																		"src": "2947:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2932:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 775,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2876:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2880:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2876:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2876:77:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 773,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "2849:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$611_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2849:105:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 786,
												"nodeType": "ExpressionStatement",
												"src": "2849:105:5"
											}
										]
									},
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "2485:180:5",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 788,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2679:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2719:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "2701:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 754,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 753,
														"name": "IERC20Upgradeable",
														"nameLocations": [
															"2701:17:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 611,
														"src": "2701:17:5"
													},
													"referencedDeclaration": 611,
													"src": "2701:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2734:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "2726:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2751:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "2743:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2743:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:57:5"
									},
									"returnParameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2767:0:5"
									},
									"scope": 1023,
									"src": "2670:291:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 832,
										"nodeType": "Block",
										"src": "3249:321:5",
										"statements": [
											{
												"id": 831,
												"nodeType": "UncheckedBlock",
												"src": "3259:305:5",
												"statements": [
													{
														"assignments": [
															800
														],
														"declarations": [
															{
																"constant": false,
																"id": 800,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "3291:12:5",
																"nodeType": "VariableDeclaration",
																"scope": 831,
																"src": "3283:20:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 799,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3283:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 809,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 805,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3330:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$1023",
																				"typeString": "library SafeERC20Upgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$1023",
																				"typeString": "library SafeERC20Upgradeable"
																			}
																		],
																		"id": 804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3322:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 803,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3322:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3322:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 807,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 794,
																	"src": "3337:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 801,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "3306:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																		"typeString": "contract IERC20Upgradeable"
																	}
																},
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3312:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 588,
																"src": "3306:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3306:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3283:62:5"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 813,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 811,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 800,
																		"src": "3367:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 812,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 796,
																		"src": "3383:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3367:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3390:43:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 810,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "3359:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3359:75:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 816,
														"nodeType": "ExpressionStatement",
														"src": "3359:75:5"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 818,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "3468:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																		"typeString": "contract IERC20Upgradeable"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 821,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 792,
																					"src": "3498:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																						"typeString": "contract IERC20Upgradeable"
																					}
																				},
																				"id": 822,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3504:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 598,
																				"src": "3498:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 823,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3512:8:5",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "3498:22:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 824,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 794,
																			"src": "3522:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 827,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 825,
																				"name": "oldAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 800,
																				"src": "3531:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 826,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 796,
																				"src": "3546:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3531:20:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 819,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "3475:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 820,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "3479:18:5",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "3475:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3475:77:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																		"typeString": "contract IERC20Upgradeable"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 817,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 974,
																"src": "3448:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$611_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20Upgradeable,bytes memory)"
																}
															},
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3448:105:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 830,
														"nodeType": "ExpressionStatement",
														"src": "3448:105:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 789,
										"nodeType": "StructuredDocumentation",
										"src": "2967:180:5",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 833,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3161:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3201:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "3183:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 791,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 790,
														"name": "IERC20Upgradeable",
														"nameLocations": [
															"3183:17:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 611,
														"src": "3183:17:5"
													},
													"referencedDeclaration": 611,
													"src": "3183:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3216:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "3208:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3233:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "3225:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3225:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3182:57:5"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3249:0:5"
									},
									"scope": 1023,
									"src": "3152:418:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 879,
										"nodeType": "Block",
										"src": "3977:333:5",
										"statements": [
											{
												"assignments": [
													845
												],
												"declarations": [
													{
														"constant": false,
														"id": 845,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4000:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 879,
														"src": "3987:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 844,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3987:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 854,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 848,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 837,
																	"src": "4038:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																		"typeString": "contract IERC20Upgradeable"
																	}
																},
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4044:7:5",
																"memberName": "approve",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 598,
																"src": "4038:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4052:8:5",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "4038:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"id": 851,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "4062:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 852,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "4071:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 846,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4015:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 847,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4019:18:5",
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"src": "4015:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4015:62:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3987:90:5"
											},
											{
												"condition": {
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4092:45:5",
													"subExpression": {
														"arguments": [
															{
																"id": 856,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 837,
																"src": "4117:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																	"typeString": "contract IERC20Upgradeable"
																}
															},
															{
																"id": 857,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 845,
																"src": "4124:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																	"typeString": "contract IERC20Upgradeable"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 855,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "4093:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$611_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20Upgradeable,bytes memory) returns (bool)"
															}
														},
														"id": 858,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4093:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 878,
												"nodeType": "IfStatement",
												"src": "4088:216:5",
												"trueBody": {
													"id": 877,
													"nodeType": "Block",
													"src": "4139:165:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 861,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 837,
																		"src": "4173:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																			"typeString": "contract IERC20Upgradeable"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"expression": {
																						"id": 864,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 837,
																						"src": "4203:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																							"typeString": "contract IERC20Upgradeable"
																						}
																					},
																					"id": 865,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4209:7:5",
																					"memberName": "approve",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 598,
																					"src": "4203:13:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																						"typeString": "function (address,uint256) external returns (bool)"
																					}
																				},
																				"id": 866,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4217:8:5",
																				"memberName": "selector",
																				"nodeType": "MemberAccess",
																				"src": "4203:22:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			{
																				"id": 867,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 839,
																				"src": "4227:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"hexValue": "30",
																				"id": 868,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4236:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"expression": {
																				"id": 862,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4180:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 863,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4184:18:5",
																			"memberName": "encodeWithSelector",
																			"nodeType": "MemberAccess",
																			"src": "4180:22:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes4) pure returns (bytes memory)"
																			}
																		},
																		"id": 869,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4180:58:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																			"typeString": "contract IERC20Upgradeable"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 860,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 974,
																	"src": "4153:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$611_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20Upgradeable,bytes memory)"
																	}
																},
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4153:86:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 871,
															"nodeType": "ExpressionStatement",
															"src": "4153:86:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 873,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 837,
																		"src": "4273:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																			"typeString": "contract IERC20Upgradeable"
																		}
																	},
																	{
																		"id": 874,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 845,
																		"src": "4280:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																			"typeString": "contract IERC20Upgradeable"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 872,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 974,
																	"src": "4253:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$611_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20Upgradeable,bytes memory)"
																	}
																},
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4253:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 876,
															"nodeType": "ExpressionStatement",
															"src": "4253:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 834,
										"nodeType": "StructuredDocumentation",
										"src": "3576:308:5",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3898:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3929:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "3911:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 836,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 835,
														"name": "IERC20Upgradeable",
														"nameLocations": [
															"3911:17:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 611,
														"src": "3911:17:5"
													},
													"referencedDeclaration": 611,
													"src": "3911:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3944:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "3936:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3961:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "3953:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3953:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3910:57:5"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3977:0:5"
									},
									"scope": 1023,
									"src": "3889:421:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 936,
										"nodeType": "Block",
										"src": "4688:257:5",
										"statements": [
											{
												"assignments": [
													902
												],
												"declarations": [
													{
														"constant": false,
														"id": 902,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "4706:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 936,
														"src": "4698:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 901,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4698:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 907,
												"initialValue": {
													"arguments": [
														{
															"id": 905,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "4733:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 903,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "4720:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20PermitUpgradeable_$647",
																"typeString": "contract IERC20PermitUpgradeable"
															}
														},
														"id": 904,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4726:6:5",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 640,
														"src": "4720:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4720:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4698:41:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 911,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "4762:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 912,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "4769:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 913,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "4778:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 914,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "4785:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 915,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "4795:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 916,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "4798:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 917,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "4801:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 908,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "4749:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20PermitUpgradeable_$647",
																"typeString": "contract IERC20PermitUpgradeable"
															}
														},
														"id": 910,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4755:6:5",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 632,
														"src": "4749:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4749:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "4749:54:5"
											},
											{
												"assignments": [
													921
												],
												"declarations": [
													{
														"constant": false,
														"id": 921,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "4821:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 936,
														"src": "4813:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 920,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4813:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 926,
												"initialValue": {
													"arguments": [
														{
															"id": 924,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "4847:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 922,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "4834:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20PermitUpgradeable_$647",
																"typeString": "contract IERC20PermitUpgradeable"
															}
														},
														"id": 923,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4840:6:5",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 640,
														"src": "4834:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4834:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4813:40:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 928,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 921,
																"src": "4871:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 929,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 902,
																	"src": "4885:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4899:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4885:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4871:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4902:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 927,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4863:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4863:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 935,
												"nodeType": "ExpressionStatement",
												"src": "4863:75:5"
											}
										]
									},
									"documentation": {
										"id": 881,
										"nodeType": "StructuredDocumentation",
										"src": "4316:141:5",
										"text": " @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."
									},
									"id": 937,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "4471:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4515:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "4491:29:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20PermitUpgradeable_$647",
													"typeString": "contract IERC20PermitUpgradeable"
												},
												"typeName": {
													"id": 883,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 882,
														"name": "IERC20PermitUpgradeable",
														"nameLocations": [
															"4491:23:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 647,
														"src": "4491:23:5"
													},
													"referencedDeclaration": 647,
													"src": "4491:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20PermitUpgradeable_$647",
														"typeString": "contract IERC20PermitUpgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4538:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "4530:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4530:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4561:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "4553:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4553:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4586:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "4578:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4578:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "4609:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "4601:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4601:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "4633:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "4627:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 893,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4627:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4652:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "4644:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 895,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4644:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "4671:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "4663:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 897,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4663:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4481:197:5"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4688:0:5"
									},
									"scope": 1023,
									"src": "4462:483:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 973,
										"nodeType": "Block",
										"src": "5409:572:5",
										"statements": [
											{
												"assignments": [
													947
												],
												"declarations": [
													{
														"constant": false,
														"id": 947,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5771:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 973,
														"src": "5758:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 946,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5758:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 956,
												"initialValue": {
													"arguments": [
														{
															"id": 953,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "5812:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5818:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 950,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 941,
																	"src": "5792:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																		"typeString": "contract IERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																		"typeString": "contract IERC20Upgradeable"
																	}
																],
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5784:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 948,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5784:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5784:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 952,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5799:12:5",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1229,
														"src": "5784:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5784:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5758:95:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 958,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "5871:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5882:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5871:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5892:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5871:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 964,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "5908:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"components": [
																			{
																				"id": 966,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5921:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				},
																				"typeName": {
																					"id": 965,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "5921:4:5",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"id": 967,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5920:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	],
																	"expression": {
																		"id": 962,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "5897:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 963,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5901:6:5",
																	"memberName": "decode",
																	"nodeType": "MemberAccess",
																	"src": "5897:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5897:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5871:56:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5929:44:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															},
															"value": "SafeERC20: ERC20 operation did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															}
														],
														"id": 957,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5863:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5863:111:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 972,
												"nodeType": "ExpressionStatement",
												"src": "5863:111:5"
											}
										]
									},
									"documentation": {
										"id": 938,
										"nodeType": "StructuredDocumentation",
										"src": "4951:372:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "5337:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5375:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "5357:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 940,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 939,
														"name": "IERC20Upgradeable",
														"nameLocations": [
															"5357:17:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 611,
														"src": "5357:17:5"
													},
													"referencedDeclaration": 611,
													"src": "5357:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5395:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "5382:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 942,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5382:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5356:44:5"
									},
									"returnParameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5409:0:5"
									},
									"scope": 1023,
									"src": "5328:653:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1021,
										"nodeType": "Block",
										"src": "6582:516:5",
										"statements": [
											{
												"assignments": [
													986,
													988
												],
												"declarations": [
													{
														"constant": false,
														"id": 986,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6883:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1021,
														"src": "6878:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 985,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6878:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 988,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6905:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1021,
														"src": "6892:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 987,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6892:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 996,
												"initialValue": {
													"arguments": [
														{
															"id": 994,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "6939:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 991,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "6927:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																		"typeString": "contract IERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																		"typeString": "contract IERC20Upgradeable"
																	}
																],
																"id": 990,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6919:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 989,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6919:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6919:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 993,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6934:4:5",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "6919:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6919:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6877:67:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1011,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 997,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "6973:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1001,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 998,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 988,
																				"src": "6985:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 999,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6996:6:5",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "6985:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1000,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7006:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "6985:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1004,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 988,
																				"src": "7022:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1006,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "7035:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1005,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "7035:4:5",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1007,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "7034:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1002,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "7011:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1003,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "7015:6:5",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "7011:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7011:30:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6985:56:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 1010,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6984:58:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6973:69:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1016,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 978,
																		"src": "7084:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																			"typeString": "contract IERC20Upgradeable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																			"typeString": "contract IERC20Upgradeable"
																		}
																	],
																	"id": 1015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7076:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1014,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7076:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7076:14:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1012,
																"name": "AddressUpgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1469,
																"src": "7046:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1469_$",
																	"typeString": "type(library AddressUpgradeable)"
																}
															},
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7065:10:5",
															"memberName": "isContract",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1157,
															"src": "7046:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 1018,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7046:45:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6973:118:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 984,
												"id": 1020,
												"nodeType": "Return",
												"src": "6954:137:5"
											}
										]
									},
									"documentation": {
										"id": 975,
										"nodeType": "StructuredDocumentation",
										"src": "5987:490:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 1022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "6491:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6533:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "6515:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 977,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 976,
														"name": "IERC20Upgradeable",
														"nameLocations": [
															"6515:17:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 611,
														"src": "6515:17:5"
													},
													"referencedDeclaration": 611,
													"src": "6515:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6553:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "6540:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 979,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6540:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6514:44:5"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "6576:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 982,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6576:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:6:5"
									},
									"scope": 1023,
									"src": "6482:616:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1024,
							"src": "734:6366:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:6986:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
					"exportedSymbols": {
						"IERC165Upgradeable": [
							1527
						],
						"IERC721Upgradeable": [
							1139
						]
					},
					"id": 1140,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1025,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
							"file": "../../utils/introspection/IERC165Upgradeable.sol",
							"id": 1026,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1140,
							"sourceUnit": 1528,
							"src": "133:58:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1028,
										"name": "IERC165Upgradeable",
										"nameLocations": [
											"293:18:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1527,
										"src": "293:18:6"
									},
									"id": 1029,
									"nodeType": "InheritanceSpecifier",
									"src": "293:18:6"
								}
							],
							"canonicalName": "IERC721Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1027,
								"nodeType": "StructuredDocumentation",
								"src": "193:67:6",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1139,
							"linearizedBaseContracts": [
								1139,
								1527
							],
							"name": "IERC721Upgradeable",
							"nameLocation": "271:18:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1030,
										"nodeType": "StructuredDocumentation",
										"src": "318:88:6",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1038,
									"name": "Transfer",
									"nameLocation": "417:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "442:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "426:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "464:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "448:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "484:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "468:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "468:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:67:6"
									},
									"src": "411:82:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1039,
										"nodeType": "StructuredDocumentation",
										"src": "499:94:6",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1047,
									"name": "Approval",
									"nameLocation": "604:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "629:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "613:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "652:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "636:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "678:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "662:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "662:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "612:74:6"
									},
									"src": "598:89:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1048,
										"nodeType": "StructuredDocumentation",
										"src": "693:117:6",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1056,
									"name": "ApprovalForAll",
									"nameLocation": "821:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "852:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "836:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1049,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "859:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1051,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "890:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "885:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1053,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "885:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "835:64:6"
									},
									"src": "815:85:6"
								},
								{
									"documentation": {
										"id": 1057,
										"nodeType": "StructuredDocumentation",
										"src": "906:76:6",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1064,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "996:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1014:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "1006:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1006:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1005:15:6"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1052:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "1044:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1043:17:6"
									},
									"scope": 1139,
									"src": "987:74:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1065,
										"nodeType": "StructuredDocumentation",
										"src": "1067:131:6",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1072,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1212:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1228:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "1220:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1220:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1219:17:6"
									},
									"returnParameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1268:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "1260:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1069,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1260:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1259:15:6"
									},
									"scope": 1139,
									"src": "1203:72:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1073,
										"nodeType": "StructuredDocumentation",
										"src": "1281:556:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1084,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1851:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1876:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "1868:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1868:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1890:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "1882:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1076,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1882:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1902:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "1894:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1894:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "1911:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1080,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1867:64:6"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1940:0:6"
									},
									"scope": 1139,
									"src": "1842:99:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "1947:687:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1094,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2648:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2673:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "2665:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2665:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2687:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "2679:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2699:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "2691:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2691:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2664:43:6"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2716:0:6"
									},
									"scope": 1139,
									"src": "2639:78:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1095,
										"nodeType": "StructuredDocumentation",
										"src": "2723:732:6",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3469:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3490:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "3482:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1096,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3482:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3504:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "3496:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3496:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3516:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "3508:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3508:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3481:43:6"
									},
									"returnParameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3533:0:6"
									},
									"scope": 1139,
									"src": "3460:74:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1105,
										"nodeType": "StructuredDocumentation",
										"src": "3540:452:6",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4006:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4022:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "4014:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4014:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4034:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "4026:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4026:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4013:29:6"
									},
									"returnParameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4051:0:6"
									},
									"scope": 1139,
									"src": "3997:55:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1113,
										"nodeType": "StructuredDocumentation",
										"src": "4058:309:6",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4381:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4407:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "4399:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4399:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4422:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "4417:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1116,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4417:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4398:33:6"
									},
									"returnParameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4440:0:6"
									},
									"scope": 1139,
									"src": "4372:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1121,
										"nodeType": "StructuredDocumentation",
										"src": "4447:139:6",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1128,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4600:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4620:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "4612:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4611:17:6"
									},
									"returnParameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4660:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "4652:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4652:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4651:18:6"
									},
									"scope": 1139,
									"src": "4591:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1129,
										"nodeType": "StructuredDocumentation",
										"src": "4676:138:6",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1138,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4828:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4853:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "4845:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4845:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4868:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "4860:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4844:33:6"
									},
									"returnParameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "4901:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1135,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4901:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4900:6:6"
									},
									"scope": 1139,
									"src": "4819:88:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1140,
							"src": "261:4648:6",
							"usedErrors": [],
							"usedEvents": [
								1038,
								1047,
								1056
							]
						}
					],
					"src": "108:4802:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1469
						]
					},
					"id": 1470,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1141,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1142,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:7",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1469,
							"linearizedBaseContracts": [
								1469
							],
							"name": "AddressUpgradeable",
							"nameLocation": "202:18:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1156,
										"nodeType": "Block",
										"src": "1489:254:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1150,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1145,
																"src": "1713:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1721:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1713:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1152,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1726:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1713:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1153,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1735:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1713:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1149,
												"id": 1155,
												"nodeType": "Return",
												"src": "1706:30:7"
											}
										]
									},
									"documentation": {
										"id": 1143,
										"nodeType": "StructuredDocumentation",
										"src": "227:1191:7",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1432:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1451:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "1443:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1443:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1442:17:7"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "1483:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1483:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1482:6:7"
									},
									"scope": 1469,
									"src": "1423:320:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1190,
										"nodeType": "Block",
										"src": "2729:241:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1168,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2755:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1469",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1469",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2747:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1166,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2747:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2747:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2761:7:7",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2747:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1171,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1162,
																"src": "2772:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2747:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2780:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1165,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2739:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2739:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1175,
												"nodeType": "ExpressionStatement",
												"src": "2739:73:7"
											},
											{
												"assignments": [
													1177,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1177,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2829:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1190,
														"src": "2824:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1176,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2824:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1184,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2872:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1178,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1160,
																"src": "2842:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2852:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2842:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1181,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1180,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1162,
																"src": "2864:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2842:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2842:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2823:52:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1186,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "2893:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2902:60:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1185,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2885:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2885:78:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1189,
												"nodeType": "ExpressionStatement",
												"src": "2885:78:7"
											}
										]
									},
									"documentation": {
										"id": 1158,
										"nodeType": "StructuredDocumentation",
										"src": "1749:904:7",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2667:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2693:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "2677:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2712:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "2704:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:7"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:0:7"
									},
									"scope": 1469,
									"src": "2658:312:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1208,
										"nodeType": "Block",
										"src": "3801:96:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1202,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1194,
															"src": "3840:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1203,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1196,
															"src": "3848:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3854:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1205,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3857:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1201,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1249,
															1293
														],
														"referencedDeclaration": 1293,
														"src": "3818:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3818:72:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1200,
												"id": 1207,
												"nodeType": "Return",
												"src": "3811:79:7"
											}
										]
									},
									"documentation": {
										"id": 1192,
										"nodeType": "StructuredDocumentation",
										"src": "2976:731:7",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3721:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3742:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "3734:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3734:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3763:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "3750:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1195,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3750:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3733:35:7"
									},
									"returnParameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "3787:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1198,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3787:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3786:14:7"
									},
									"scope": 1469,
									"src": "3712:185:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1228,
										"nodeType": "Block",
										"src": "4266:76:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1222,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "4305:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1223,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1214,
															"src": "4313:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4319:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1225,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1216,
															"src": "4322:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1221,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1249,
															1293
														],
														"referencedDeclaration": 1293,
														"src": "4283:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4283:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1220,
												"id": 1227,
												"nodeType": "Return",
												"src": "4276:59:7"
											}
										]
									},
									"documentation": {
										"id": 1210,
										"nodeType": "StructuredDocumentation",
										"src": "3903:211:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4128:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4158:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "4150:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4150:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4187:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "4174:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1213,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4174:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4215:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "4201:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1215,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4201:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4140:93:7"
									},
									"returnParameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "4252:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1218,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4252:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4251:14:7"
									},
									"scope": 1469,
									"src": "4119:223:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1248,
										"nodeType": "Block",
										"src": "4817:111:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1242,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "4856:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1243,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "4864:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1244,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1236,
															"src": "4870:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4877:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1241,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1249,
															1293
														],
														"referencedDeclaration": 1293,
														"src": "4834:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4834:87:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1240,
												"id": 1247,
												"nodeType": "Return",
												"src": "4827:94:7"
											}
										]
									},
									"documentation": {
										"id": 1230,
										"nodeType": "StructuredDocumentation",
										"src": "4348:351:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4713:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4743:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "4735:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4735:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4764:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "4751:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1233,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4751:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4778:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "4770:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4770:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4734:50:7"
									},
									"returnParameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "4803:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4803:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4802:14:7"
									},
									"scope": 1469,
									"src": "4704:224:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1292,
										"nodeType": "Block",
										"src": "5355:267:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1266,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5381:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1469",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1469",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5373:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1264,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5373:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5373:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5387:7:7",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5373:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1269,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1256,
																"src": "5398:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5373:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5405:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1263,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5365:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5365:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1273,
												"nodeType": "ExpressionStatement",
												"src": "5365:81:7"
											},
											{
												"assignments": [
													1275,
													1277
												],
												"declarations": [
													{
														"constant": false,
														"id": 1275,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5462:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1292,
														"src": "5457:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1274,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5457:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1277,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5484:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1292,
														"src": "5471:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1276,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5471:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1284,
												"initialValue": {
													"arguments": [
														{
															"id": 1282,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "5524:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1278,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1252,
																"src": "5498:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5505:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5498:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1280,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1256,
																"src": "5517:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5498:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5498:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5456:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1286,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "5573:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1287,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1275,
															"src": "5581:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1288,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "5590:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1289,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "5602:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1285,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1424,
														"src": "5546:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5546:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1262,
												"id": 1291,
												"nodeType": "Return",
												"src": "5539:76:7"
											}
										]
									},
									"documentation": {
										"id": 1250,
										"nodeType": "StructuredDocumentation",
										"src": "4934:237:7",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5185:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5224:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "5216:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5216:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5253:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "5240:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1253,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5240:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5275:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "5267:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5267:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5304:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "5290:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1257,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5290:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5206:116:7"
									},
									"returnParameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "5341:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5341:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5340:14:7"
									},
									"scope": 1469,
									"src": "5176:446:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1309,
										"nodeType": "Block",
										"src": "5899:97:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1304,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1296,
															"src": "5935:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1305,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1298,
															"src": "5943:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5949:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1303,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1310,
															1339
														],
														"referencedDeclaration": 1339,
														"src": "5916:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5916:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1302,
												"id": 1308,
												"nodeType": "Return",
												"src": "5909:80:7"
											}
										]
									},
									"documentation": {
										"id": 1294,
										"nodeType": "StructuredDocumentation",
										"src": "5628:166:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5808:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5835:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "5827:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5827:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5856:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "5843:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1297,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5843:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5826:35:7"
									},
									"returnParameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "5885:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1300,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5885:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5884:14:7"
									},
									"scope": 1469,
									"src": "5799:197:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1338,
										"nodeType": "Block",
										"src": "6338:168:7",
										"statements": [
											{
												"assignments": [
													1323,
													1325
												],
												"declarations": [
													{
														"constant": false,
														"id": 1323,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6354:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1338,
														"src": "6349:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1322,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6349:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1325,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6376:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1338,
														"src": "6363:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1324,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6363:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1330,
												"initialValue": {
													"arguments": [
														{
															"id": 1328,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1315,
															"src": "6408:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1326,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "6390:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6397:10:7",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6390:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6348:65:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1332,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "6457:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1333,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "6465:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1334,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "6474:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1335,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1317,
															"src": "6486:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1331,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1424,
														"src": "6430:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6430:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1321,
												"id": 1337,
												"nodeType": "Return",
												"src": "6423:76:7"
											}
										]
									},
									"documentation": {
										"id": 1311,
										"nodeType": "StructuredDocumentation",
										"src": "6002:173:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6189:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6225:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "6217:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6217:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6254:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "6241:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1314,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6241:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6282:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "6268:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1316,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6268:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6207:93:7"
									},
									"returnParameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "6324:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1319,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6324:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6323:14:7"
									},
									"scope": 1469,
									"src": "6180:326:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1355,
										"nodeType": "Block",
										"src": "6782:101:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1350,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1342,
															"src": "6820:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1351,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1344,
															"src": "6828:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6834:41:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1349,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1356,
															1385
														],
														"referencedDeclaration": 1385,
														"src": "6799:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6799:77:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1348,
												"id": 1354,
												"nodeType": "Return",
												"src": "6792:84:7"
											}
										]
									},
									"documentation": {
										"id": 1340,
										"nodeType": "StructuredDocumentation",
										"src": "6512:168:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6694:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6723:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "6715:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6715:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6744:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "6731:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1343,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6731:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6714:35:7"
									},
									"returnParameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "6768:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1346,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6768:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:14:7"
									},
									"scope": 1469,
									"src": "6685:198:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1384,
										"nodeType": "Block",
										"src": "7224:170:7",
										"statements": [
											{
												"assignments": [
													1369,
													1371
												],
												"declarations": [
													{
														"constant": false,
														"id": 1369,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7240:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1384,
														"src": "7235:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1368,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7235:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1371,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7262:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1384,
														"src": "7249:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1370,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7249:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1376,
												"initialValue": {
													"arguments": [
														{
															"id": 1374,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1361,
															"src": "7296:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1372,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1359,
															"src": "7276:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7283:12:7",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7276:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7276:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7234:67:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1378,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1359,
															"src": "7345:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1379,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1369,
															"src": "7353:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1380,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "7362:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1381,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1363,
															"src": "7374:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1377,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1424,
														"src": "7318:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7318:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1367,
												"id": 1383,
												"nodeType": "Return",
												"src": "7311:76:7"
											}
										]
									},
									"documentation": {
										"id": 1357,
										"nodeType": "StructuredDocumentation",
										"src": "6889:175:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7078:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7116:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "7108:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7145:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "7132:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1360,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7132:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7173:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "7159:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1362,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7159:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7098:93:7"
									},
									"returnParameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "7210:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1365,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7210:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7209:14:7"
									},
									"scope": 1469,
									"src": "7069:325:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1423,
										"nodeType": "Block",
										"src": "7876:434:7",
										"statements": [
											{
												"condition": {
													"id": 1399,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1390,
													"src": "7890:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1421,
													"nodeType": "Block",
													"src": "8246:58:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1417,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1392,
																		"src": "8268:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1418,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1394,
																		"src": "8280:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1416,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1468,
																	"src": "8260:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8260:33:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1420,
															"nodeType": "ExpressionStatement",
															"src": "8260:33:7"
														}
													]
												},
												"id": 1422,
												"nodeType": "IfStatement",
												"src": "7886:418:7",
												"trueBody": {
													"id": 1415,
													"nodeType": "Block",
													"src": "7899:341:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1400,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1392,
																		"src": "7917:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7928:6:7",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7917:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7938:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7917:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1412,
															"nodeType": "IfStatement",
															"src": "7913:286:7",
															"trueBody": {
																"id": 1411,
																"nodeType": "Block",
																"src": "7941:258:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1406,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1388,
																							"src": "8143:6:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1405,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1157,
																						"src": "8132:10:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1407,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8132:18:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8152:31:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1404,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8124:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8124:60:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1410,
																		"nodeType": "ExpressionStatement",
																		"src": "8124:60:7"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1413,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1392,
																"src": "8219:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1398,
															"id": 1414,
															"nodeType": "Return",
															"src": "8212:17:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1386,
										"nodeType": "StructuredDocumentation",
										"src": "7400:277:7",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7691:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7735:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "7727:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7727:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7756:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "7751:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1389,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7751:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7786:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "7773:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1391,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7773:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7820:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "7806:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1393,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7806:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7717:121:7"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "7862:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1396,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7862:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7861:14:7"
									},
									"scope": 1469,
									"src": "7682:628:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1447,
										"nodeType": "Block",
										"src": "8691:135:7",
										"statements": [
											{
												"condition": {
													"id": 1436,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1427,
													"src": "8705:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1445,
													"nodeType": "Block",
													"src": "8762:58:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1441,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1429,
																		"src": "8784:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1442,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1431,
																		"src": "8796:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1440,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1468,
																	"src": "8776:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8776:33:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1444,
															"nodeType": "ExpressionStatement",
															"src": "8776:33:7"
														}
													]
												},
												"id": 1446,
												"nodeType": "IfStatement",
												"src": "8701:119:7",
												"trueBody": {
													"id": 1439,
													"nodeType": "Block",
													"src": "8714:42:7",
													"statements": [
														{
															"expression": {
																"id": 1437,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1429,
																"src": "8735:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1435,
															"id": 1438,
															"nodeType": "Return",
															"src": "8728:17:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1425,
										"nodeType": "StructuredDocumentation",
										"src": "8316:210:7",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8540:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8571:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "8566:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1426,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8566:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8601:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "8588:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1428,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8588:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8635:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "8621:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1430,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8621:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8556:97:7"
									},
									"returnParameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "8677:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1433,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8677:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8676:14:7"
									},
									"scope": 1469,
									"src": "8531:295:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1467,
										"nodeType": "Block",
										"src": "8915:457:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1455,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "8991:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1456,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9002:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8991:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1457,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9011:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8991:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1465,
													"nodeType": "Block",
													"src": "9321:45:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1462,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1452,
																		"src": "9342:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1461,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9335:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1463,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9335:20:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1464,
															"nodeType": "ExpressionStatement",
															"src": "9335:20:7"
														}
													]
												},
												"id": 1466,
												"nodeType": "IfStatement",
												"src": "8987:379:7",
												"trueBody": {
													"id": 1460,
													"nodeType": "Block",
													"src": "9014:301:7",
													"statements": [
														{
															"AST": {
																"nativeSrc": "9172:133:7",
																"nodeType": "YulBlock",
																"src": "9172:133:7",
																"statements": [
																	{
																		"nativeSrc": "9190:40:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9190:40:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "9219:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "9219:10:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "9213:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9213:5:7"
																			},
																			"nativeSrc": "9213:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9213:17:7"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "9194:15:7",
																				"nodeType": "YulTypedName",
																				"src": "9194:15:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9258:2:7",
																							"nodeType": "YulLiteral",
																							"src": "9258:2:7",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "9262:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "9262:10:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "9254:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "9254:3:7"
																					},
																					"nativeSrc": "9254:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9254:19:7"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "9275:15:7",
																					"nodeType": "YulIdentifier",
																					"src": "9275:15:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9247:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9247:6:7"
																			},
																			"nativeSrc": "9247:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9247:44:7"
																		},
																		"nativeSrc": "9247:44:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9247:44:7"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1450,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9219:10:7",
																	"valueSize": 1
																},
																{
																	"declaration": 1450,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9262:10:7",
																	"valueSize": 1
																}
															],
															"id": 1459,
															"nodeType": "InlineAssembly",
															"src": "9163:142:7"
														}
													]
												}
											}
										]
									},
									"id": 1468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8841:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8862:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "8849:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8849:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8888:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "8874:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1451,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8874:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8848:53:7"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8915:0:7"
									},
									"scope": 1469,
									"src": "8832:540:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1470,
							"src": "194:9180:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:9274:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1515
						],
						"Initializable": [
							448
						]
					},
					"id": 1516,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1471,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1473,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1516,
							"sourceUnit": 449,
							"src": "126:63:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1472,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "134:13:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1475,
										"name": "Initializable",
										"nameLocations": [
											"728:13:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "728:13:8"
									},
									"id": 1476,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:8"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1474,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1515,
							"linearizedBaseContracts": [
								1515,
								448
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1481,
										"nodeType": "Block",
										"src": "800:7:8",
										"statements": []
									},
									"id": 1482,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1479,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1478,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "783:16:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:8"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:8"
									},
									"returnParameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:8"
									},
									"scope": 1515,
									"src": "748:59:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1487,
										"nodeType": "Block",
										"src": "875:7:8",
										"statements": []
									},
									"id": 1488,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1485,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1484,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "858:16:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:8"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:8"
									},
									"returnParameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:8"
									},
									"scope": 1515,
									"src": "813:69:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1496,
										"nodeType": "Block",
										"src": "949:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1493,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1492,
												"id": 1495,
												"nodeType": "Return",
												"src": "959:17:8"
											}
										]
									},
									"id": 1497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:8"
									},
									"returnParameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1497,
												"src": "940:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:8"
									},
									"scope": 1515,
									"src": "887:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1505,
										"nodeType": "Block",
										"src": "1056:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1502,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1501,
												"id": 1504,
												"nodeType": "Return",
												"src": "1066:15:8"
											}
										]
									},
									"id": 1506,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:8"
									},
									"returnParameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "1040:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1499,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:8"
									},
									"scope": 1515,
									"src": "989:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1513,
										"nodeType": "Block",
										"src": "1166:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1511,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1510,
												"id": 1512,
												"nodeType": "Return",
												"src": "1176:8:8"
											}
										]
									},
									"id": 1514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:8"
									},
									"returnParameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "1157:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:8"
									},
									"scope": 1515,
									"src": "1094:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1516,
							"src": "688:505:8",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "101:1093:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
					"exportedSymbols": {
						"IERC165Upgradeable": [
							1527
						]
					},
					"id": 1528,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1517,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1518,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1527,
							"linearizedBaseContracts": [
								1527
							],
							"name": "IERC165Upgradeable",
							"nameLocation": "415:18:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1519,
										"nodeType": "StructuredDocumentation",
										"src": "440:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1526,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "794:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "819:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "812:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1520,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "812:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "811:20:9"
									},
									"returnParameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "855:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1523,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "855:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:6:9"
									},
									"scope": 1527,
									"src": "785:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1528,
							"src": "405:458:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:764:9"
				},
				"id": 9
			},
			"contracts/YieldFarm.sol": {
				"ast": {
					"absolutePath": "contracts/YieldFarm.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1469
						],
						"ContextUpgradeable": [
							1515
						],
						"IERC165Upgradeable": [
							1527
						],
						"IERC20PermitUpgradeable": [
							647
						],
						"IERC20Upgradeable": [
							611
						],
						"IERC721Upgradeable": [
							1139
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						],
						"ReentrancyGuardUpgradeable": [
							533
						],
						"SafeERC20Upgradeable": [
							1023
						],
						"YieldFarm": [
							2409
						]
					},
					"id": 2410,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1529,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"id": 1530,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2410,
							"sourceUnit": 612,
							"src": "58:79:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
							"id": 1531,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2410,
							"sourceUnit": 1140,
							"src": "138:81:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
							"id": 1532,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2410,
							"sourceUnit": 1024,
							"src": "220:88:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1533,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2410,
							"sourceUnit": 195,
							"src": "309:75:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
							"id": 1534,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2410,
							"sourceUnit": 534,
							"src": "385:85:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 1535,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2410,
							"sourceUnit": 449,
							"src": "471:75:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1537,
										"name": "Initializable",
										"nameLocations": [
											"761:13:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "761:13:10"
									},
									"id": 1538,
									"nodeType": "InheritanceSpecifier",
									"src": "761:13:10"
								},
								{
									"baseName": {
										"id": 1539,
										"name": "ReentrancyGuardUpgradeable",
										"nameLocations": [
											"776:26:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 533,
										"src": "776:26:10"
									},
									"id": 1540,
									"nodeType": "InheritanceSpecifier",
									"src": "776:26:10"
								},
								{
									"baseName": {
										"id": 1541,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"804:18:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "804:18:10"
									},
									"id": 1542,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:10"
								}
							],
							"canonicalName": "YieldFarm",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1536,
								"nodeType": "StructuredDocumentation",
								"src": "548:190:10",
								"text": " @title YieldFarm\n @dev A yield farming contract where users can stake ERC-20 tokens to earn rewards.\n It includes support for boosting rewards with NFTs and a referral system."
							},
							"fullyImplemented": true,
							"id": 2409,
							"linearizedBaseContracts": [
								2409,
								194,
								1515,
								533,
								448
							],
							"name": "YieldFarm",
							"nameLocation": "748:9:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1546,
									"libraryName": {
										"id": 1543,
										"name": "SafeERC20Upgradeable",
										"nameLocations": [
											"835:20:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1023,
										"src": "835:20:10"
									},
									"nodeType": "UsingForDirective",
									"src": "829:49:10",
									"typeName": {
										"id": 1545,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1544,
											"name": "IERC20Upgradeable",
											"nameLocations": [
												"860:17:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 611,
											"src": "860:17:10"
										},
										"referencedDeclaration": 611,
										"src": "860:17:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
											"typeString": "contract IERC20Upgradeable"
										}
									}
								},
								{
									"canonicalName": "YieldFarm.StakeInfo",
									"id": 1553,
									"members": [
										{
											"constant": false,
											"id": 1548,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "976:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 1553,
											"src": "968:14:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1547,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "968:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1550,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nameLocation": "1032:10:10",
											"nodeType": "VariableDeclaration",
											"scope": 1553,
											"src": "1024:18:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1549,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1024:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1552,
											"mutability": "mutable",
											"name": "lockUntil",
											"nameLocation": "1108:9:10",
											"nodeType": "VariableDeclaration",
											"scope": 1553,
											"src": "1100:17:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1551,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1100:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakeInfo",
									"nameLocation": "948:9:10",
									"nodeType": "StructDefinition",
									"scope": 2409,
									"src": "941:230:10",
									"visibility": "public"
								},
								{
									"canonicalName": "YieldFarm.PoolInfo",
									"id": 1570,
									"members": [
										{
											"constant": false,
											"id": 1556,
											"mutability": "mutable",
											"name": "stakingToken",
											"nameLocation": "1280:12:10",
											"nodeType": "VariableDeclaration",
											"scope": 1570,
											"src": "1262:30:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
												"typeString": "contract IERC20Upgradeable"
											},
											"typeName": {
												"id": 1555,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1554,
													"name": "IERC20Upgradeable",
													"nameLocations": [
														"1262:17:10"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 611,
													"src": "1262:17:10"
												},
												"referencedDeclaration": 611,
												"src": "1262:17:10",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
													"typeString": "contract IERC20Upgradeable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1559,
											"mutability": "mutable",
											"name": "rewardToken",
											"nameLocation": "1343:11:10",
											"nodeType": "VariableDeclaration",
											"scope": 1570,
											"src": "1325:29:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
												"typeString": "contract IERC20Upgradeable"
											},
											"typeName": {
												"id": 1558,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1557,
													"name": "IERC20Upgradeable",
													"nameLocations": [
														"1325:17:10"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 611,
													"src": "1325:17:10"
												},
												"referencedDeclaration": 611,
												"src": "1325:17:10",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
													"typeString": "contract IERC20Upgradeable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1561,
											"mutability": "mutable",
											"name": "rewardRate",
											"nameLocation": "1399:10:10",
											"nodeType": "VariableDeclaration",
											"scope": 1570,
											"src": "1391:18:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1560,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1391:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1563,
											"mutability": "mutable",
											"name": "lockDuration",
											"nameLocation": "1481:12:10",
											"nodeType": "VariableDeclaration",
											"scope": 1570,
											"src": "1473:20:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1562,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1473:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1565,
											"mutability": "mutable",
											"name": "totalStaked",
											"nameLocation": "1562:11:10",
											"nodeType": "VariableDeclaration",
											"scope": 1570,
											"src": "1554:19:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1564,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1554:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1567,
											"mutability": "mutable",
											"name": "accRewardPerShare",
											"nameLocation": "1649:17:10",
											"nodeType": "VariableDeclaration",
											"scope": 1570,
											"src": "1641:25:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1566,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1641:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1569,
											"mutability": "mutable",
											"name": "lastRewardTime",
											"nameLocation": "1739:14:10",
											"nodeType": "VariableDeclaration",
											"scope": 1570,
											"src": "1731:22:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1568,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1731:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolInfo",
									"nameLocation": "1243:8:10",
									"nodeType": "StructDefinition",
									"scope": 2409,
									"src": "1236:571:10",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1526fe27",
									"id": 1574,
									"mutability": "mutable",
									"name": "poolInfo",
									"nameLocation": "1831:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 2409,
									"src": "1813:26:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1570_storage_$dyn_storage",
										"typeString": "struct YieldFarm.PoolInfo[]"
									},
									"typeName": {
										"baseType": {
											"id": 1572,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1571,
												"name": "PoolInfo",
												"nameLocations": [
													"1813:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1570,
												"src": "1813:8:10"
											},
											"referencedDeclaration": 1570,
											"src": "1813:8:10",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolInfo_$1570_storage_ptr",
												"typeString": "struct YieldFarm.PoolInfo"
											}
										},
										"id": 1573,
										"nodeType": "ArrayTypeName",
										"src": "1813:10:10",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1570_storage_$dyn_storage_ptr",
											"typeString": "struct YieldFarm.PoolInfo[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "381e75eb",
									"id": 1581,
									"mutability": "mutable",
									"name": "poolStakes",
									"nameLocation": "1942:10:10",
									"nodeType": "VariableDeclaration",
									"scope": 2409,
									"src": "1885:67:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_StakeInfo_$1553_storage_$_$",
										"typeString": "mapping(uint256 => mapping(address => struct YieldFarm.StakeInfo))"
									},
									"typeName": {
										"id": 1580,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1575,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1893:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1885:49:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_StakeInfo_$1553_storage_$_$",
											"typeString": "mapping(uint256 => mapping(address => struct YieldFarm.StakeInfo))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1579,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1576,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1912:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1904:29:10",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$1553_storage_$",
												"typeString": "mapping(address => struct YieldFarm.StakeInfo)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1578,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1577,
													"name": "StakeInfo",
													"nameLocations": [
														"1923:9:10"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1553,
													"src": "1923:9:10"
												},
												"referencedDeclaration": 1553,
												"src": "1923:9:10",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakeInfo_$1553_storage_ptr",
													"typeString": "struct YieldFarm.StakeInfo"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4a3b68cc",
									"id": 1585,
									"mutability": "mutable",
									"name": "referrers",
									"nameLocation": "2046:9:10",
									"nodeType": "VariableDeclaration",
									"scope": 2409,
									"src": "2011:44:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 1584,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1582,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2019:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2011:27:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1583,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2030:7:10",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "53aaa63b",
									"id": 1589,
									"mutability": "mutable",
									"name": "referralRewards",
									"nameLocation": "2152:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 2409,
									"src": "2117:50:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1588,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1586,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2125:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2117:27:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1587,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2136:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "afbf3440",
									"id": 1591,
									"mutability": "mutable",
									"name": "baseRewardRate",
									"nameLocation": "2243:14:10",
									"nodeType": "VariableDeclaration",
									"scope": 2409,
									"src": "2228:29:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1590,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2228:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0187aea0",
									"id": 1593,
									"mutability": "mutable",
									"name": "maxMultiplier",
									"nameLocation": "2317:13:10",
									"nodeType": "VariableDeclaration",
									"scope": 2409,
									"src": "2302:28:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1592,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2302:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "085cde2d",
									"id": 1595,
									"mutability": "mutable",
									"name": "multiplierDuration",
									"nameLocation": "2389:18:10",
									"nodeType": "VariableDeclaration",
									"scope": 2409,
									"src": "2374:33:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1594,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2374:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e0283faf",
									"id": 1597,
									"mutability": "mutable",
									"name": "nftBoostRate",
									"nameLocation": "2477:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 2409,
									"src": "2462:27:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1596,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2462:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ce7842f5",
									"id": 1599,
									"mutability": "mutable",
									"name": "referralBonus",
									"nameLocation": "2546:13:10",
									"nodeType": "VariableDeclaration",
									"scope": 2409,
									"src": "2531:28:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1598,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2531:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ce98f049",
									"id": 1601,
									"mutability": "mutable",
									"name": "refereeBonus",
									"nameLocation": "2617:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 2409,
									"src": "2602:27:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1600,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2602:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5c975abb",
									"id": 1603,
									"mutability": "mutable",
									"name": "paused",
									"nameLocation": "2680:6:10",
									"nodeType": "VariableDeclaration",
									"scope": 2409,
									"src": "2668:18:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1602,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2668:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d06fcba8",
									"id": 1606,
									"mutability": "mutable",
									"name": "nftToken",
									"nameLocation": "2786:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 2409,
									"src": "2760:34:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721Upgradeable_$1139",
										"typeString": "contract IERC721Upgradeable"
									},
									"typeName": {
										"id": 1605,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1604,
											"name": "IERC721Upgradeable",
											"nameLocations": [
												"2760:18:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1139,
											"src": "2760:18:10"
										},
										"referencedDeclaration": 1139,
										"src": "2760:18:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721Upgradeable_$1139",
											"typeString": "contract IERC721Upgradeable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f96dae0a",
									"id": 1609,
									"mutability": "mutable",
									"name": "governanceToken",
									"nameLocation": "2859:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 2409,
									"src": "2834:40:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
										"typeString": "contract IERC20Upgradeable"
									},
									"typeName": {
										"id": 1608,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1607,
											"name": "IERC20Upgradeable",
											"nameLocations": [
												"2834:17:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 611,
											"src": "2834:17:10"
										},
										"referencedDeclaration": 611,
										"src": "2834:17:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
											"typeString": "contract IERC20Upgradeable"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "b4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed",
									"id": 1619,
									"name": "Staked",
									"nameLocation": "2938:6:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2961:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "2945:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2945:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1613,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "2983:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "2967:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2967:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1615,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2996:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "2988:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2988:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1617,
												"indexed": false,
												"mutability": "mutable",
												"name": "lockUntil",
												"nameLocation": "3012:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "3004:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2944:78:10"
									},
									"src": "2932:91:10"
								},
								{
									"anonymous": false,
									"eventSelector": "7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e",
									"id": 1627,
									"name": "Unstaked",
									"nameLocation": "3034:8:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1621,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3059:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "3043:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3043:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1623,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "3081:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "3065:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3065:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1625,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3094:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "3086:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3086:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3042:59:10"
									},
									"src": "3028:74:10"
								},
								{
									"anonymous": false,
									"eventSelector": "d6f2c8500df5b44f11e9e48b91ff9f1b9d81bc496d55570c2b1b75bf65243f51",
									"id": 1635,
									"name": "RewardPaid",
									"nameLocation": "3113:10:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3140:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "3124:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3124:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1631,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "3162:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "3146:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1633,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "3175:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "3167:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3167:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3123:59:10"
									},
									"src": "3107:76:10"
								},
								{
									"anonymous": false,
									"eventSelector": "bb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595",
									"id": 1643,
									"name": "EmergencyWithdraw",
									"nameLocation": "3194:17:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1637,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3228:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "3212:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3212:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1639,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "3250:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "3234:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3234:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1641,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3263:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "3255:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3255:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3211:59:10"
									},
									"src": "3188:83:10"
								},
								{
									"anonymous": false,
									"eventSelector": "5f7165288eef601591cf549e15ff19ef9060b7f71b9c115be946fa1fe7ebf68a",
									"id": 1649,
									"name": "ReferrerSet",
									"nameLocation": "3282:11:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3310:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "3294:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1647,
												"indexed": true,
												"mutability": "mutable",
												"name": "referrer",
												"nameLocation": "3332:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "3316:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3316:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:48:10"
									},
									"src": "3276:66:10"
								},
								{
									"anonymous": false,
									"eventSelector": "e1111ad6e2ccaf57d3d9aa458493b64bcf6a66c2028304b95772fe72e1fc3612",
									"id": 1661,
									"name": "PoolAdded",
									"nameLocation": "3353:9:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1651,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "3379:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "3363:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3363:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1653,
												"indexed": false,
												"mutability": "mutable",
												"name": "stakingToken",
												"nameLocation": "3392:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "3384:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3384:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1655,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardToken",
												"nameLocation": "3414:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "3406:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1657,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardRate",
												"nameLocation": "3435:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "3427:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3427:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1659,
												"indexed": false,
												"mutability": "mutable",
												"name": "lockDuration",
												"nameLocation": "3455:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "3447:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3362:106:10"
									},
									"src": "3347:122:10"
								},
								{
									"body": {
										"id": 1670,
										"nodeType": "Block",
										"src": "3584:66:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3602:7:10",
															"subExpression": {
																"id": 1664,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1603,
																"src": "3603:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e747261637420697320706175736564",
															"id": 1666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3611:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d",
																"typeString": "literal_string \"Contract is paused\""
															},
															"value": "Contract is paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d",
																"typeString": "literal_string \"Contract is paused\""
															}
														],
														"id": 1663,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3594:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3594:38:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1668,
												"nodeType": "ExpressionStatement",
												"src": "3594:38:10"
											},
											{
												"id": 1669,
												"nodeType": "PlaceholderStatement",
												"src": "3642:1:10"
											}
										]
									},
									"id": 1671,
									"name": "whenNotPaused",
									"nameLocation": "3568:13:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3581:2:10"
									},
									"src": "3559:91:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1735,
										"nodeType": "Block",
										"src": "4556:399:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1696,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4581:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4585:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4581:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1695,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "4566:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4566:26:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1699,
												"nodeType": "ExpressionStatement",
												"src": "4566:26:10"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1700,
														"name": "__ReentrancyGuard_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "4602:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4602:24:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1702,
												"nodeType": "ExpressionStatement",
												"src": "4602:24:10"
											},
											{
												"expression": {
													"id": 1705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1703,
														"name": "governanceToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1609,
														"src": "4636:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1704,
														"name": "_governanceToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1675,
														"src": "4654:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"src": "4636:34:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"id": 1706,
												"nodeType": "ExpressionStatement",
												"src": "4636:34:10"
											},
											{
												"expression": {
													"id": 1709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1707,
														"name": "nftToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1606,
														"src": "4680:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721Upgradeable_$1139",
															"typeString": "contract IERC721Upgradeable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1708,
														"name": "_nftToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1678,
														"src": "4691:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721Upgradeable_$1139",
															"typeString": "contract IERC721Upgradeable"
														}
													},
													"src": "4680:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721Upgradeable_$1139",
														"typeString": "contract IERC721Upgradeable"
													}
												},
												"id": 1710,
												"nodeType": "ExpressionStatement",
												"src": "4680:20:10"
											},
											{
												"expression": {
													"id": 1713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1711,
														"name": "baseRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1591,
														"src": "4710:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1712,
														"name": "_baseRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1680,
														"src": "4727:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4710:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1714,
												"nodeType": "ExpressionStatement",
												"src": "4710:32:10"
											},
											{
												"expression": {
													"id": 1717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1715,
														"name": "maxMultiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1593,
														"src": "4752:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1716,
														"name": "_maxMultiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1682,
														"src": "4768:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4752:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1718,
												"nodeType": "ExpressionStatement",
												"src": "4752:30:10"
											},
											{
												"expression": {
													"id": 1721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1719,
														"name": "multiplierDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1595,
														"src": "4792:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1720,
														"name": "_multiplierDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1684,
														"src": "4813:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4792:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1722,
												"nodeType": "ExpressionStatement",
												"src": "4792:40:10"
											},
											{
												"expression": {
													"id": 1725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1723,
														"name": "nftBoostRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1597,
														"src": "4842:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1724,
														"name": "_nftBoostRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1686,
														"src": "4857:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4842:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1726,
												"nodeType": "ExpressionStatement",
												"src": "4842:28:10"
											},
											{
												"expression": {
													"id": 1729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1727,
														"name": "referralBonus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1599,
														"src": "4880:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1728,
														"name": "_referralBonus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1688,
														"src": "4896:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4880:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1730,
												"nodeType": "ExpressionStatement",
												"src": "4880:30:10"
											},
											{
												"expression": {
													"id": 1733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1731,
														"name": "refereeBonus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1601,
														"src": "4920:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1732,
														"name": "_refereeBonus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1690,
														"src": "4935:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4920:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1734,
												"nodeType": "ExpressionStatement",
												"src": "4920:28:10"
											}
										]
									},
									"documentation": {
										"id": 1672,
										"nodeType": "StructuredDocumentation",
										"src": "3656:570:10",
										"text": " @dev Initializes the contract with initial values\n @param _governanceToken Address of the governance token\n @param _nftToken Address of the NFT token for boost mechanism\n @param _baseRewardRate Base rate for reward calculation\n @param _maxMultiplier Maximum multiplier for rewards\n @param _multiplierDuration Duration over which the multiplier increases\n @param _nftBoostRate Boost rate for holding NFTs\n @param _referralBonus Bonus for referring new users\n @param _refereeBonus Bonus for being referred"
									},
									"functionSelector": "8ba796af",
									"id": 1736,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1693,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1692,
												"name": "initializer",
												"nameLocations": [
													"4544:11:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "4544:11:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "4544:11:10"
										}
									],
									"name": "initialize",
									"nameLocation": "4240:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "_governanceToken",
												"nameLocation": "4278:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "4260:34:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1674,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1673,
														"name": "IERC20Upgradeable",
														"nameLocations": [
															"4260:17:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 611,
														"src": "4260:17:10"
													},
													"referencedDeclaration": 611,
													"src": "4260:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "_nftToken",
												"nameLocation": "4323:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "4304:28:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC721Upgradeable_$1139",
													"typeString": "contract IERC721Upgradeable"
												},
												"typeName": {
													"id": 1677,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1676,
														"name": "IERC721Upgradeable",
														"nameLocations": [
															"4304:18:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1139,
														"src": "4304:18:10"
													},
													"referencedDeclaration": 1139,
													"src": "4304:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721Upgradeable_$1139",
														"typeString": "contract IERC721Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "_baseRewardRate",
												"nameLocation": "4350:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "4342:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4342:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "_maxMultiplier",
												"nameLocation": "4383:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "4375:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4375:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "_multiplierDuration",
												"nameLocation": "4415:19:10",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "4407:27:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4407:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "_nftBoostRate",
												"nameLocation": "4452:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "4444:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4444:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "_referralBonus",
												"nameLocation": "4483:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "4475:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4475:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "_refereeBonus",
												"nameLocation": "4515:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "4507:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4507:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4250:284:10"
									},
									"returnParameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4556:0:10"
									},
									"scope": 2409,
									"src": "4231:724:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1784,
										"nodeType": "Block",
										"src": "5451:437:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1756,
																	"name": "_stakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1740,
																	"src": "5512:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																		"typeString": "contract IERC20Upgradeable"
																	}
																},
																{
																	"id": 1757,
																	"name": "_rewardToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1743,
																	"src": "5552:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																		"typeString": "contract IERC20Upgradeable"
																	}
																},
																{
																	"id": 1758,
																	"name": "_rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1745,
																	"src": "5590:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1759,
																	"name": "_lockDuration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1747,
																	"src": "5629:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1760,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5669:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"hexValue": "30",
																	"id": 1761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5703:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"expression": {
																		"id": 1762,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "5734:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1763,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5740:9:10",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "5734:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																		"typeString": "contract IERC20Upgradeable"
																	},
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																		"typeString": "contract IERC20Upgradeable"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1755,
																"name": "PoolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1570,
																"src": "5475:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_PoolInfo_$1570_storage_ptr_$",
																	"typeString": "type(struct YieldFarm.PoolInfo storage pointer)"
																}
															},
															"id": 1764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"5498:12:10",
																"5539:11:10",
																"5578:10:10",
																"5615:12:10",
																"5656:11:10",
																"5684:17:10",
																"5718:14:10"
															],
															"names": [
																"stakingToken",
																"rewardToken",
																"rewardRate",
																"lockDuration",
																"totalStaked",
																"accRewardPerShare",
																"lastRewardTime"
															],
															"nodeType": "FunctionCall",
															"src": "5475:285:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1570_memory_ptr",
																"typeString": "struct YieldFarm.PoolInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PoolInfo_$1570_memory_ptr",
																"typeString": "struct YieldFarm.PoolInfo memory"
															}
														],
														"expression": {
															"id": 1752,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1574,
															"src": "5461:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1570_storage_$dyn_storage",
																"typeString": "struct YieldFarm.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 1754,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5470:4:10",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "5461:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$1570_storage_$dyn_storage_ptr_$_t_struct$_PoolInfo_$1570_storage_$returns$__$attached_to$_t_array$_t_struct$_PoolInfo_$1570_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct YieldFarm.PoolInfo storage ref[] storage pointer,struct YieldFarm.PoolInfo storage ref)"
														}
													},
													"id": 1765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5461:300:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1766,
												"nodeType": "ExpressionStatement",
												"src": "5461:300:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1768,
																	"name": "poolInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1574,
																	"src": "5786:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1570_storage_$dyn_storage",
																		"typeString": "struct YieldFarm.PoolInfo storage ref[] storage ref"
																	}
																},
																"id": 1769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5795:6:10",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "5786:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 1770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5804:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "5786:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1774,
																	"name": "_stakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1740,
																	"src": "5815:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																		"typeString": "contract IERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																		"typeString": "contract IERC20Upgradeable"
																	}
																],
																"id": 1773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5807:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1772,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5807:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5807:22:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1778,
																	"name": "_rewardToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1743,
																	"src": "5839:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																		"typeString": "contract IERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																		"typeString": "contract IERC20Upgradeable"
																	}
																],
																"id": 1777,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5831:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1776,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5831:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5831:21:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1780,
															"name": "_rewardRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1745,
															"src": "5854:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1781,
															"name": "_lockDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1747,
															"src": "5867:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1767,
														"name": "PoolAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1661,
														"src": "5776:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,address,uint256,uint256)"
														}
													},
													"id": 1782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5776:105:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1783,
												"nodeType": "EmitStatement",
												"src": "5771:110:10"
											}
										]
									},
									"documentation": {
										"id": 1737,
										"nodeType": "StructuredDocumentation",
										"src": "4961:302:10",
										"text": " @dev Adds a new staking pool\n @param _stakingToken Address of the token to be staked\n @param _rewardToken Address of the token given as reward\n @param _rewardRate Rate at which rewards are distributed\n @param _lockDuration Duration for which stakes are locked"
									},
									"functionSelector": "c20632ba",
									"id": 1785,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1750,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1749,
												"name": "onlyOwner",
												"nameLocations": [
													"5441:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "5441:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "5441:9:10"
										}
									],
									"name": "addPool",
									"nameLocation": "5277:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "_stakingToken",
												"nameLocation": "5312:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "5294:31:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1739,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1738,
														"name": "IERC20Upgradeable",
														"nameLocations": [
															"5294:17:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 611,
														"src": "5294:17:10"
													},
													"referencedDeclaration": 611,
													"src": "5294:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "_rewardToken",
												"nameLocation": "5353:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "5335:30:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1742,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1741,
														"name": "IERC20Upgradeable",
														"nameLocations": [
															"5335:17:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 611,
														"src": "5335:17:10"
													},
													"referencedDeclaration": 611,
													"src": "5335:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "_rewardRate",
												"nameLocation": "5383:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "5375:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5375:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "_lockDuration",
												"nameLocation": "5412:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "5404:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5404:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5284:147:10"
									},
									"returnParameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5451:0:10"
									},
									"scope": 2409,
									"src": "5268:620:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1876,
										"nodeType": "Block",
										"src": "6128:534:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1798,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1790,
																"src": "6146:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1799,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6156:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6146:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207374616b652030",
															"id": 1801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6159:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															},
															"value": "Cannot stake 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															}
														],
														"id": 1797,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6138:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6138:38:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1803,
												"nodeType": "ExpressionStatement",
												"src": "6138:38:10"
											},
											{
												"assignments": [
													1806
												],
												"declarations": [
													{
														"constant": false,
														"id": 1806,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "6204:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1876,
														"src": "6187:21:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1570_storage_ptr",
															"typeString": "struct YieldFarm.PoolInfo"
														},
														"typeName": {
															"id": 1805,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1804,
																"name": "PoolInfo",
																"nameLocations": [
																	"6187:8:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1570,
																"src": "6187:8:10"
															},
															"referencedDeclaration": 1570,
															"src": "6187:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1570_storage_ptr",
																"typeString": "struct YieldFarm.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1810,
												"initialValue": {
													"baseExpression": {
														"id": 1807,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1574,
														"src": "6211:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1570_storage_$dyn_storage",
															"typeString": "struct YieldFarm.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1809,
													"indexExpression": {
														"id": 1808,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1788,
														"src": "6220:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6211:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1570_storage",
														"typeString": "struct YieldFarm.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6187:38:10"
											},
											{
												"assignments": [
													1813
												],
												"declarations": [
													{
														"constant": false,
														"id": 1813,
														"mutability": "mutable",
														"name": "userStake",
														"nameLocation": "6253:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 1876,
														"src": "6235:27:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$1553_storage_ptr",
															"typeString": "struct YieldFarm.StakeInfo"
														},
														"typeName": {
															"id": 1812,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1811,
																"name": "StakeInfo",
																"nameLocations": [
																	"6235:9:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1553,
																"src": "6235:9:10"
															},
															"referencedDeclaration": 1553,
															"src": "6235:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$1553_storage_ptr",
																"typeString": "struct YieldFarm.StakeInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1820,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1814,
															"name": "poolStakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1581,
															"src": "6265:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_StakeInfo_$1553_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct YieldFarm.StakeInfo storage ref))"
															}
														},
														"id": 1816,
														"indexExpression": {
															"id": 1815,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1788,
															"src": "6276:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6265:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$1553_storage_$",
															"typeString": "mapping(address => struct YieldFarm.StakeInfo storage ref)"
														}
													},
													"id": 1819,
													"indexExpression": {
														"expression": {
															"id": 1817,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6282:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1818,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6286:6:10",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "6282:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6265:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$1553_storage",
														"typeString": "struct YieldFarm.StakeInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6235:58:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1822,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1788,
															"src": "6315:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1821,
														"name": "_updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2310,
														"src": "6303:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6303:17:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1824,
												"nodeType": "ExpressionStatement",
												"src": "6303:17:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1826,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1788,
															"src": "6345:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1827,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6351:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6355:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6351:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1825,
														"name": "_updateRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2408,
														"src": "6330:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 1829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6330:32:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1830,
												"nodeType": "ExpressionStatement",
												"src": "6330:32:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1836,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6408:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6412:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6408:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1840,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6428:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_YieldFarm_$2409",
																		"typeString": "contract YieldFarm"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_YieldFarm_$2409",
																		"typeString": "contract YieldFarm"
																	}
																],
																"id": 1839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6420:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1838,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6420:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6420:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1842,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1790,
															"src": "6435:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1831,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1806,
																"src": "6373:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1570_storage_ptr",
																	"typeString": "struct YieldFarm.PoolInfo storage pointer"
																}
															},
															"id": 1834,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6378:12:10",
															"memberName": "stakingToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1556,
															"src": "6373:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 1835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6391:16:10",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 707,
														"src": "6373:34:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$611_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20Upgradeable_$611_$",
															"typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
														}
													},
													"id": 1843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6373:70:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1844,
												"nodeType": "ExpressionStatement",
												"src": "6373:70:10"
											},
											{
												"expression": {
													"id": 1849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1845,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1813,
															"src": "6454:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$1553_storage_ptr",
																"typeString": "struct YieldFarm.StakeInfo storage pointer"
															}
														},
														"id": 1847,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6464:6:10",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1548,
														"src": "6454:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1848,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1790,
														"src": "6474:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6454:27:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1850,
												"nodeType": "ExpressionStatement",
												"src": "6454:27:10"
											},
											{
												"expression": {
													"id": 1859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1851,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1813,
															"src": "6491:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$1553_storage_ptr",
																"typeString": "struct YieldFarm.StakeInfo storage pointer"
															}
														},
														"id": 1853,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6501:9:10",
														"memberName": "lockUntil",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1552,
														"src": "6491:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1858,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1854,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "6513:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6519:9:10",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "6513:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"expression": {
																"id": 1856,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1806,
																"src": "6531:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1570_storage_ptr",
																	"typeString": "struct YieldFarm.PoolInfo storage pointer"
																}
															},
															"id": 1857,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6536:12:10",
															"memberName": "lockDuration",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1563,
															"src": "6531:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6513:35:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6491:57:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1860,
												"nodeType": "ExpressionStatement",
												"src": "6491:57:10"
											},
											{
												"expression": {
													"id": 1865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1861,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1806,
															"src": "6558:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1570_storage_ptr",
																"typeString": "struct YieldFarm.PoolInfo storage pointer"
															}
														},
														"id": 1863,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6563:11:10",
														"memberName": "totalStaked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1565,
														"src": "6558:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1864,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1790,
														"src": "6578:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6558:27:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1866,
												"nodeType": "ExpressionStatement",
												"src": "6558:27:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1868,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6608:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6612:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6608:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1870,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1788,
															"src": "6620:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1871,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1790,
															"src": "6626:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1872,
																"name": "userStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1813,
																"src": "6635:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeInfo_$1553_storage_ptr",
																	"typeString": "struct YieldFarm.StakeInfo storage pointer"
																}
															},
															"id": 1873,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6645:9:10",
															"memberName": "lockUntil",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1552,
															"src": "6635:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1867,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1619,
														"src": "6601:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 1874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6601:54:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1875,
												"nodeType": "EmitStatement",
												"src": "6596:59:10"
											}
										]
									},
									"documentation": {
										"id": 1786,
										"nodeType": "StructuredDocumentation",
										"src": "5894:147:10",
										"text": " @dev Allows a user to stake tokens in a specific pool\n @param _pid Pool ID\n @param _amount Amount of tokens to stake"
									},
									"functionSelector": "7b0472f0",
									"id": 1877,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1793,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1792,
												"name": "nonReentrant",
												"nameLocations": [
													"6101:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 493,
												"src": "6101:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6101:12:10"
										},
										{
											"id": 1795,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1794,
												"name": "whenNotPaused",
												"nameLocations": [
													"6114:13:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1671,
												"src": "6114:13:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6114:13:10"
										}
									],
									"name": "stake",
									"nameLocation": "6055:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "6069:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "6061:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6061:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "6083:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "6075:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6075:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6060:31:10"
									},
									"returnParameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6128:0:10"
									},
									"scope": 2409,
									"src": "6046:616:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1960,
										"nodeType": "Block",
										"src": "6896:539:10",
										"statements": [
											{
												"assignments": [
													1889
												],
												"declarations": [
													{
														"constant": false,
														"id": 1889,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "6923:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1960,
														"src": "6906:21:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1570_storage_ptr",
															"typeString": "struct YieldFarm.PoolInfo"
														},
														"typeName": {
															"id": 1888,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1887,
																"name": "PoolInfo",
																"nameLocations": [
																	"6906:8:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1570,
																"src": "6906:8:10"
															},
															"referencedDeclaration": 1570,
															"src": "6906:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1570_storage_ptr",
																"typeString": "struct YieldFarm.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1893,
												"initialValue": {
													"baseExpression": {
														"id": 1890,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1574,
														"src": "6930:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1570_storage_$dyn_storage",
															"typeString": "struct YieldFarm.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1892,
													"indexExpression": {
														"id": 1891,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1880,
														"src": "6939:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6930:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1570_storage",
														"typeString": "struct YieldFarm.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6906:38:10"
											},
											{
												"assignments": [
													1896
												],
												"declarations": [
													{
														"constant": false,
														"id": 1896,
														"mutability": "mutable",
														"name": "userStake",
														"nameLocation": "6972:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 1960,
														"src": "6954:27:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$1553_storage_ptr",
															"typeString": "struct YieldFarm.StakeInfo"
														},
														"typeName": {
															"id": 1895,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1894,
																"name": "StakeInfo",
																"nameLocations": [
																	"6954:9:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1553,
																"src": "6954:9:10"
															},
															"referencedDeclaration": 1553,
															"src": "6954:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$1553_storage_ptr",
																"typeString": "struct YieldFarm.StakeInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1903,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1897,
															"name": "poolStakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1581,
															"src": "6984:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_StakeInfo_$1553_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct YieldFarm.StakeInfo storage ref))"
															}
														},
														"id": 1899,
														"indexExpression": {
															"id": 1898,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1880,
															"src": "6995:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6984:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$1553_storage_$",
															"typeString": "mapping(address => struct YieldFarm.StakeInfo storage ref)"
														}
													},
													"id": 1902,
													"indexExpression": {
														"expression": {
															"id": 1900,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7001:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1901,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7005:6:10",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7001:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6984:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$1553_storage",
														"typeString": "struct YieldFarm.StakeInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6954:58:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1905,
																	"name": "userStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1896,
																	"src": "7030:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeInfo_$1553_storage_ptr",
																		"typeString": "struct YieldFarm.StakeInfo storage pointer"
																	}
																},
																"id": 1906,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7040:6:10",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1548,
																"src": "7030:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1907,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1882,
																"src": "7050:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7030:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74207374616b656420616d6f756e74",
															"id": 1909,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7059:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16",
																"typeString": "literal_string \"Insufficient staked amount\""
															},
															"value": "Insufficient staked amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16",
																"typeString": "literal_string \"Insufficient staked amount\""
															}
														],
														"id": 1904,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7022:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7022:66:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1911,
												"nodeType": "ExpressionStatement",
												"src": "7022:66:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1917,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1913,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "7106:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1914,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7112:9:10",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "7106:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 1915,
																	"name": "userStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1896,
																	"src": "7125:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeInfo_$1553_storage_ptr",
																		"typeString": "struct YieldFarm.StakeInfo storage pointer"
																	}
																},
																"id": 1916,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7135:9:10",
																"memberName": "lockUntil",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1552,
																"src": "7125:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7106:38:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b65206973207374696c6c206c6f636b6564",
															"id": 1918,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7146:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_70a4a744132fc9399c082f0c459154fe3f5ba22b57af6b69242ec317d0c935a9",
																"typeString": "literal_string \"Stake is still locked\""
															},
															"value": "Stake is still locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_70a4a744132fc9399c082f0c459154fe3f5ba22b57af6b69242ec317d0c935a9",
																"typeString": "literal_string \"Stake is still locked\""
															}
														],
														"id": 1912,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7098:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7098:72:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1920,
												"nodeType": "ExpressionStatement",
												"src": "7098:72:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1922,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1880,
															"src": "7193:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1921,
														"name": "_updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2310,
														"src": "7181:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7181:17:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1924,
												"nodeType": "ExpressionStatement",
												"src": "7181:17:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1926,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1880,
															"src": "7223:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1927,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7229:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1928,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7233:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7229:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1925,
														"name": "_updateRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2408,
														"src": "7208:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 1929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7208:32:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1930,
												"nodeType": "ExpressionStatement",
												"src": "7208:32:10"
											},
											{
												"expression": {
													"id": 1935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1931,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1896,
															"src": "7251:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$1553_storage_ptr",
																"typeString": "struct YieldFarm.StakeInfo storage pointer"
															}
														},
														"id": 1933,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7261:6:10",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1548,
														"src": "7251:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1934,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1882,
														"src": "7271:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7251:27:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1936,
												"nodeType": "ExpressionStatement",
												"src": "7251:27:10"
											},
											{
												"expression": {
													"id": 1941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1937,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1889,
															"src": "7288:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1570_storage_ptr",
																"typeString": "struct YieldFarm.PoolInfo storage pointer"
															}
														},
														"id": 1939,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7293:11:10",
														"memberName": "totalStaked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1565,
														"src": "7288:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1940,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1882,
														"src": "7308:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7288:27:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1942,
												"nodeType": "ExpressionStatement",
												"src": "7288:27:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1948,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7357:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7361:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7357:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1950,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1882,
															"src": "7369:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1943,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1889,
																"src": "7326:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1570_storage_ptr",
																	"typeString": "struct YieldFarm.PoolInfo storage pointer"
																}
															},
															"id": 1946,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7331:12:10",
															"memberName": "stakingToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1556,
															"src": "7326:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 1947,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7344:12:10",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 680,
														"src": "7326:30:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$611_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20Upgradeable_$611_$",
															"typeString": "function (contract IERC20Upgradeable,address,uint256)"
														}
													},
													"id": 1951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7326:51:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1952,
												"nodeType": "ExpressionStatement",
												"src": "7326:51:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1954,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7402:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7406:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7402:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1956,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1880,
															"src": "7414:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1957,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1882,
															"src": "7420:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1953,
														"name": "Unstaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1627,
														"src": "7393:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7393:35:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1959,
												"nodeType": "EmitStatement",
												"src": "7388:40:10"
											}
										]
									},
									"documentation": {
										"id": 1878,
										"nodeType": "StructuredDocumentation",
										"src": "6668:153:10",
										"text": " @dev Allows a user to unstake tokens from a specific pool\n @param _pid Pool ID\n @param _amount Amount of tokens to unstake"
									},
									"functionSelector": "9e2c8a5b",
									"id": 1961,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1885,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1884,
												"name": "nonReentrant",
												"nameLocations": [
													"6883:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 493,
												"src": "6883:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6883:12:10"
										}
									],
									"name": "unstake",
									"nameLocation": "6835:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "6851:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "6843:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6843:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "6865:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "6857:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6857:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6842:31:10"
									},
									"returnParameters": {
										"id": 1886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6896:0:10"
									},
									"scope": 2409,
									"src": "6826:609:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2016,
										"nodeType": "Block",
										"src": "7611:317:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1970,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1964,
															"src": "7633:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1969,
														"name": "_updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2310,
														"src": "7621:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7621:17:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1972,
												"nodeType": "ExpressionStatement",
												"src": "7621:17:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1974,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1964,
															"src": "7663:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1975,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7669:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7673:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7669:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1973,
														"name": "_updateRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2408,
														"src": "7648:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 1977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7648:32:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1978,
												"nodeType": "ExpressionStatement",
												"src": "7648:32:10"
											},
											{
												"assignments": [
													1980
												],
												"declarations": [
													{
														"constant": false,
														"id": 1980,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "7698:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2016,
														"src": "7690:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1979,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7690:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1988,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1981,
																"name": "poolStakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1581,
																"src": "7707:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_StakeInfo_$1553_storage_$_$",
																	"typeString": "mapping(uint256 => mapping(address => struct YieldFarm.StakeInfo storage ref))"
																}
															},
															"id": 1983,
															"indexExpression": {
																"id": 1982,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1964,
																"src": "7718:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7707:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$1553_storage_$",
																"typeString": "mapping(address => struct YieldFarm.StakeInfo storage ref)"
															}
														},
														"id": 1986,
														"indexExpression": {
															"expression": {
																"id": 1984,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7724:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7728:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7724:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7707:28:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$1553_storage",
															"typeString": "struct YieldFarm.StakeInfo storage ref"
														}
													},
													"id": 1987,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7736:10:10",
													"memberName": "rewardDebt",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1550,
													"src": "7707:39:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7690:56:10"
											},
											{
												"expression": {
													"id": 1997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1989,
																	"name": "poolStakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1581,
																	"src": "7756:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_StakeInfo_$1553_storage_$_$",
																		"typeString": "mapping(uint256 => mapping(address => struct YieldFarm.StakeInfo storage ref))"
																	}
																},
																"id": 1993,
																"indexExpression": {
																	"id": 1990,
																	"name": "_pid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1964,
																	"src": "7767:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7756:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$1553_storage_$",
																	"typeString": "mapping(address => struct YieldFarm.StakeInfo storage ref)"
																}
															},
															"id": 1994,
															"indexExpression": {
																"expression": {
																	"id": 1991,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7773:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7777:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7773:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7756:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$1553_storage",
																"typeString": "struct YieldFarm.StakeInfo storage ref"
															}
														},
														"id": 1995,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7785:10:10",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1550,
														"src": "7756:39:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1996,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7798:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7756:43:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1998,
												"nodeType": "ExpressionStatement",
												"src": "7756:43:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2004,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7850:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7854:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7850:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2006,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1980,
															"src": "7862:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 1999,
																	"name": "poolInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1574,
																	"src": "7810:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1570_storage_$dyn_storage",
																		"typeString": "struct YieldFarm.PoolInfo storage ref[] storage ref"
																	}
																},
																"id": 2001,
																"indexExpression": {
																	"id": 2000,
																	"name": "_pid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1964,
																	"src": "7819:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7810:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1570_storage",
																	"typeString": "struct YieldFarm.PoolInfo storage ref"
																}
															},
															"id": 2002,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7825:11:10",
															"memberName": "rewardToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1559,
															"src": "7810:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2003,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7837:12:10",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 680,
														"src": "7810:39:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$611_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20Upgradeable_$611_$",
															"typeString": "function (contract IERC20Upgradeable,address,uint256)"
														}
													},
													"id": 2007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7810:59:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2008,
												"nodeType": "ExpressionStatement",
												"src": "7810:59:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2010,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7896:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2011,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7900:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7896:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2012,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1964,
															"src": "7908:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2013,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1980,
															"src": "7914:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2009,
														"name": "RewardPaid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1635,
														"src": "7885:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7885:36:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2015,
												"nodeType": "EmitStatement",
												"src": "7880:41:10"
											}
										]
									},
									"documentation": {
										"id": 1962,
										"nodeType": "StructuredDocumentation",
										"src": "7441:108:10",
										"text": " @dev Allows a user to claim their rewards from a specific pool\n @param _pid Pool ID"
									},
									"functionSelector": "ae169a50",
									"id": 2017,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1967,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1966,
												"name": "nonReentrant",
												"nameLocations": [
													"7598:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 493,
												"src": "7598:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "7598:12:10"
										}
									],
									"name": "claimReward",
									"nameLocation": "7563:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1964,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "7583:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "7575:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7575:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7574:14:10"
									},
									"returnParameters": {
										"id": 1968,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7611:0:10"
									},
									"scope": 2409,
									"src": "7554:374:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2090,
										"nodeType": "Block",
										"src": "8129:446:10",
										"statements": [
											{
												"assignments": [
													2027
												],
												"declarations": [
													{
														"constant": false,
														"id": 2027,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "8156:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 2090,
														"src": "8139:21:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1570_storage_ptr",
															"typeString": "struct YieldFarm.PoolInfo"
														},
														"typeName": {
															"id": 2026,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2025,
																"name": "PoolInfo",
																"nameLocations": [
																	"8139:8:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1570,
																"src": "8139:8:10"
															},
															"referencedDeclaration": 1570,
															"src": "8139:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1570_storage_ptr",
																"typeString": "struct YieldFarm.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2031,
												"initialValue": {
													"baseExpression": {
														"id": 2028,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1574,
														"src": "8163:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1570_storage_$dyn_storage",
															"typeString": "struct YieldFarm.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2030,
													"indexExpression": {
														"id": 2029,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2020,
														"src": "8172:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8163:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1570_storage",
														"typeString": "struct YieldFarm.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8139:38:10"
											},
											{
												"assignments": [
													2034
												],
												"declarations": [
													{
														"constant": false,
														"id": 2034,
														"mutability": "mutable",
														"name": "userStake",
														"nameLocation": "8205:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 2090,
														"src": "8187:27:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$1553_storage_ptr",
															"typeString": "struct YieldFarm.StakeInfo"
														},
														"typeName": {
															"id": 2033,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2032,
																"name": "StakeInfo",
																"nameLocations": [
																	"8187:9:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1553,
																"src": "8187:9:10"
															},
															"referencedDeclaration": 1553,
															"src": "8187:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$1553_storage_ptr",
																"typeString": "struct YieldFarm.StakeInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2041,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2035,
															"name": "poolStakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1581,
															"src": "8217:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_StakeInfo_$1553_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct YieldFarm.StakeInfo storage ref))"
															}
														},
														"id": 2037,
														"indexExpression": {
															"id": 2036,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2020,
															"src": "8228:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8217:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$1553_storage_$",
															"typeString": "mapping(address => struct YieldFarm.StakeInfo storage ref)"
														}
													},
													"id": 2040,
													"indexExpression": {
														"expression": {
															"id": 2038,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "8234:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2039,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8238:6:10",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "8234:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8217:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$1553_storage",
														"typeString": "struct YieldFarm.StakeInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8187:58:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2043,
																	"name": "userStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2034,
																	"src": "8263:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeInfo_$1553_storage_ptr",
																		"typeString": "struct YieldFarm.StakeInfo storage pointer"
																	}
																},
																"id": 2044,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8273:6:10",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1548,
																"src": "8263:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2045,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8282:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8263:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207374616b656420616d6f756e74",
															"id": 2047,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e731ba893c68928f02781756791066f23259e50b4884778db05599c2eb032f36",
																"typeString": "literal_string \"No staked amount\""
															},
															"value": "No staked amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e731ba893c68928f02781756791066f23259e50b4884778db05599c2eb032f36",
																"typeString": "literal_string \"No staked amount\""
															}
														],
														"id": 2042,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8255:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8255:49:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2049,
												"nodeType": "ExpressionStatement",
												"src": "8255:49:10"
											},
											{
												"assignments": [
													2051
												],
												"declarations": [
													{
														"constant": false,
														"id": 2051,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "8323:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2090,
														"src": "8315:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2050,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8315:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2054,
												"initialValue": {
													"expression": {
														"id": 2052,
														"name": "userStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2034,
														"src": "8332:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$1553_storage_ptr",
															"typeString": "struct YieldFarm.StakeInfo storage pointer"
														}
													},
													"id": 2053,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8342:6:10",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1548,
													"src": "8332:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8315:33:10"
											},
											{
												"expression": {
													"id": 2059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2055,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2034,
															"src": "8358:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$1553_storage_ptr",
																"typeString": "struct YieldFarm.StakeInfo storage pointer"
															}
														},
														"id": 2057,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8368:6:10",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1548,
														"src": "8358:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2058,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8377:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8358:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2060,
												"nodeType": "ExpressionStatement",
												"src": "8358:20:10"
											},
											{
												"expression": {
													"id": 2065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2061,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2034,
															"src": "8388:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$1553_storage_ptr",
																"typeString": "struct YieldFarm.StakeInfo storage pointer"
															}
														},
														"id": 2063,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8398:10:10",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1550,
														"src": "8388:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2064,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8411:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8388:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2066,
												"nodeType": "ExpressionStatement",
												"src": "8388:24:10"
											},
											{
												"expression": {
													"id": 2071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2067,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2027,
															"src": "8423:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1570_storage_ptr",
																"typeString": "struct YieldFarm.PoolInfo storage pointer"
															}
														},
														"id": 2069,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8428:11:10",
														"memberName": "totalStaked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1565,
														"src": "8423:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2070,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2051,
														"src": "8443:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8423:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2072,
												"nodeType": "ExpressionStatement",
												"src": "8423:26:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2078,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8490:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8494:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8490:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2080,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2051,
															"src": "8502:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 2073,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2027,
																"src": "8459:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1570_storage_ptr",
																	"typeString": "struct YieldFarm.PoolInfo storage pointer"
																}
															},
															"id": 2076,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8464:12:10",
															"memberName": "stakingToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1556,
															"src": "8459:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2077,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8477:12:10",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 680,
														"src": "8459:30:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$611_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20Upgradeable_$611_$",
															"typeString": "function (contract IERC20Upgradeable,address,uint256)"
														}
													},
													"id": 2081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8459:50:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2082,
												"nodeType": "ExpressionStatement",
												"src": "8459:50:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2084,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8543:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8547:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8543:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2086,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2020,
															"src": "8555:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2087,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2051,
															"src": "8561:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2083,
														"name": "EmergencyWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1643,
														"src": "8525:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8525:43:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2089,
												"nodeType": "EmitStatement",
												"src": "8520:48:10"
											}
										]
									},
									"documentation": {
										"id": 2018,
										"nodeType": "StructuredDocumentation",
										"src": "7934:127:10",
										"text": " @dev Allows a user to emergency withdraw their stake without caring about rewards\n @param _pid Pool ID"
									},
									"functionSelector": "5312ea8e",
									"id": 2091,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2023,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2022,
												"name": "nonReentrant",
												"nameLocations": [
													"8116:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 493,
												"src": "8116:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "8116:12:10"
										}
									],
									"name": "emergencyWithdraw",
									"nameLocation": "8075:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2020,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "8101:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2091,
												"src": "8093:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8093:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8092:14:10"
									},
									"returnParameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8129:0:10"
									},
									"scope": 2409,
									"src": "8066:509:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2144,
										"nodeType": "Block",
										"src": "8742:350:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 2098,
																	"name": "referrers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1585,
																	"src": "8760:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																		"typeString": "mapping(address => address)"
																	}
																},
																"id": 2101,
																"indexExpression": {
																	"expression": {
																		"id": 2099,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8770:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8774:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "8770:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8760:21:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8793:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8785:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2102,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8785:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 2105,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8785:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8760:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526566657272657220616c726561647920736574",
															"id": 2107,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8797:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6e5308c76c16e443e61e6f371a85ac036d94edcc9d74e3b3746b595a2d6481ab",
																"typeString": "literal_string \"Referrer already set\""
															},
															"value": "Referrer already set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6e5308c76c16e443e61e6f371a85ac036d94edcc9d74e3b3746b595a2d6481ab",
																"typeString": "literal_string \"Referrer already set\""
															}
														],
														"id": 2097,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8752:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8752:68:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2109,
												"nodeType": "ExpressionStatement",
												"src": "8752:68:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2111,
																"name": "_referrer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2094,
																"src": "8838:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"id": 2112,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "8851:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8855:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "8851:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8838:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f7420726566657220796f757273656c66",
															"id": 2115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8863:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51",
																"typeString": "literal_string \"Cannot refer yourself\""
															},
															"value": "Cannot refer yourself"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51",
																"typeString": "literal_string \"Cannot refer yourself\""
															}
														],
														"id": 2110,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8830:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8830:57:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2117,
												"nodeType": "ExpressionStatement",
												"src": "8830:57:10"
											},
											{
												"expression": {
													"id": 2123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2118,
															"name": "referrers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1585,
															"src": "8897:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 2121,
														"indexExpression": {
															"expression": {
																"id": 2119,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8907:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8911:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8907:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8897:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2122,
														"name": "_referrer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2094,
														"src": "8921:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8897:33:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2124,
												"nodeType": "ExpressionStatement",
												"src": "8897:33:10"
											},
											{
												"expression": {
													"id": 2129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2125,
															"name": "referralRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1589,
															"src": "8940:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2127,
														"indexExpression": {
															"id": 2126,
															"name": "_referrer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2094,
															"src": "8956:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8940:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2128,
														"name": "referralBonus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1599,
														"src": "8970:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8940:43:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2130,
												"nodeType": "ExpressionStatement",
												"src": "8940:43:10"
											},
											{
												"expression": {
													"id": 2136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2131,
															"name": "referralRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1589,
															"src": "8993:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2134,
														"indexExpression": {
															"expression": {
																"id": 2132,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9009:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9013:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9009:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8993:27:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2135,
														"name": "refereeBonus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1601,
														"src": "9024:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8993:43:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2137,
												"nodeType": "ExpressionStatement",
												"src": "8993:43:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2139,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9063:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9067:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9063:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2141,
															"name": "_referrer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2094,
															"src": "9075:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2138,
														"name": "ReferrerSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1649,
														"src": "9051:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9051:34:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2143,
												"nodeType": "EmitStatement",
												"src": "9046:39:10"
											}
										]
									},
									"documentation": {
										"id": 2092,
										"nodeType": "StructuredDocumentation",
										"src": "8581:107:10",
										"text": " @dev Allows a user to set their referrer\n @param _referrer Address of the referrer"
									},
									"functionSelector": "a18a7bfc",
									"id": 2145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setReferrer",
									"nameLocation": "8702:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2094,
												"mutability": "mutable",
												"name": "_referrer",
												"nameLocation": "8722:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2145,
												"src": "8714:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8714:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8713:19:10"
									},
									"returnParameters": {
										"id": 2096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8742:0:10"
									},
									"scope": 2409,
									"src": "8693:399:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2162,
										"nodeType": "Block",
										"src": "9332:56:10",
										"statements": [
											{
												"expression": {
													"id": 2160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2155,
																"name": "poolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1574,
																"src": "9342:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1570_storage_$dyn_storage",
																	"typeString": "struct YieldFarm.PoolInfo storage ref[] storage ref"
																}
															},
															"id": 2157,
															"indexExpression": {
																"id": 2156,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2148,
																"src": "9351:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9342:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1570_storage",
																"typeString": "struct YieldFarm.PoolInfo storage ref"
															}
														},
														"id": 2158,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9357:10:10",
														"memberName": "rewardRate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1561,
														"src": "9342:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2159,
														"name": "_rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2150,
														"src": "9370:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9342:39:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2161,
												"nodeType": "ExpressionStatement",
												"src": "9342:39:10"
											}
										]
									},
									"documentation": {
										"id": 2146,
										"nodeType": "StructuredDocumentation",
										"src": "9098:152:10",
										"text": " @dev Allows the owner to set the reward rate for a specific pool\n @param _pid Pool ID\n @param _rewardRate New reward rate"
									},
									"functionSelector": "3462e0a8",
									"id": 2163,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2153,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2152,
												"name": "onlyOwner",
												"nameLocations": [
													"9322:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "9322:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "9322:9:10"
										}
									],
									"name": "setRewardRate",
									"nameLocation": "9264:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2148,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "9286:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2163,
												"src": "9278:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9278:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2150,
												"mutability": "mutable",
												"name": "_rewardRate",
												"nameLocation": "9300:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2163,
												"src": "9292:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9292:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9277:35:10"
									},
									"returnParameters": {
										"id": 2154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9332:0:10"
									},
									"scope": 2409,
									"src": "9255:133:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2180,
										"nodeType": "Block",
										"src": "9638:60:10",
										"statements": [
											{
												"expression": {
													"id": 2178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2173,
																"name": "poolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1574,
																"src": "9648:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1570_storage_$dyn_storage",
																	"typeString": "struct YieldFarm.PoolInfo storage ref[] storage ref"
																}
															},
															"id": 2175,
															"indexExpression": {
																"id": 2174,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2166,
																"src": "9657:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9648:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1570_storage",
																"typeString": "struct YieldFarm.PoolInfo storage ref"
															}
														},
														"id": 2176,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9663:12:10",
														"memberName": "lockDuration",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1563,
														"src": "9648:27:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2177,
														"name": "_lockDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2168,
														"src": "9678:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9648:43:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2179,
												"nodeType": "ExpressionStatement",
												"src": "9648:43:10"
											}
										]
									},
									"documentation": {
										"id": 2164,
										"nodeType": "StructuredDocumentation",
										"src": "9394:158:10",
										"text": " @dev Allows the owner to set the lock duration for a specific pool\n @param _pid Pool ID\n @param _lockDuration New lock duration"
									},
									"functionSelector": "126796dd",
									"id": 2181,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2171,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2170,
												"name": "onlyOwner",
												"nameLocations": [
													"9628:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "9628:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "9628:9:10"
										}
									],
									"name": "setLockDuration",
									"nameLocation": "9566:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "9590:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "9582:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9582:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "_lockDuration",
												"nameLocation": "9604:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "9596:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9596:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9581:37:10"
									},
									"returnParameters": {
										"id": 2172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9638:0:10"
									},
									"scope": 2409,
									"src": "9557:141:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2193,
										"nodeType": "Block",
										"src": "9889:45:10",
										"statements": [
											{
												"expression": {
													"id": 2191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2189,
														"name": "nftBoostRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1597,
														"src": "9899:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2190,
														"name": "_nftBoostRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2184,
														"src": "9914:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9899:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2192,
												"nodeType": "ExpressionStatement",
												"src": "9899:28:10"
											}
										]
									},
									"documentation": {
										"id": 2182,
										"nodeType": "StructuredDocumentation",
										"src": "9704:113:10",
										"text": " @dev Allows the owner to set the NFT boost rate\n @param _nftBoostRate New NFT boost rate"
									},
									"functionSelector": "3b1e3eb8",
									"id": 2194,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2187,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2186,
												"name": "onlyOwner",
												"nameLocations": [
													"9879:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "9879:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "9879:9:10"
										}
									],
									"name": "setNftBoostRate",
									"nameLocation": "9831:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2184,
												"mutability": "mutable",
												"name": "_nftBoostRate",
												"nameLocation": "9855:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 2194,
												"src": "9847:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9847:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9846:23:10"
									},
									"returnParameters": {
										"id": 2188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9889:0:10"
									},
									"scope": 2409,
									"src": "9822:112:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2211,
										"nodeType": "Block",
										"src": "10215:61:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2207,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2197,
															"src": "10254:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2208,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2199,
															"src": "10261:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2204,
															"name": "governanceToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1609,
															"src": "10225:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$611",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2206,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10241:12:10",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 680,
														"src": "10225:28:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$611_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20Upgradeable_$611_$",
															"typeString": "function (contract IERC20Upgradeable,address,uint256)"
														}
													},
													"id": 2209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10225:44:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2210,
												"nodeType": "ExpressionStatement",
												"src": "10225:44:10"
											}
										]
									},
									"documentation": {
										"id": 2195,
										"nodeType": "StructuredDocumentation",
										"src": "9940:183:10",
										"text": " @dev Allows the owner to distribute governance tokens\n @param _user Address of the user to receive tokens\n @param _amount Amount of tokens to distribute"
									},
									"functionSelector": "dfaae412",
									"id": 2212,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2202,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2201,
												"name": "onlyOwner",
												"nameLocations": [
													"10205:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "10205:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "10205:9:10"
										}
									],
									"name": "distributeGovernanceTokens",
									"nameLocation": "10137:26:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2197,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "10172:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2212,
												"src": "10164:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10164:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2199,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "10187:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2212,
												"src": "10179:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10179:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10163:32:10"
									},
									"returnParameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10215:0:10"
									},
									"scope": 2409,
									"src": "10128:148:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2222,
										"nodeType": "Block",
										"src": "10385:30:10",
										"statements": [
											{
												"expression": {
													"id": 2220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2218,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1603,
														"src": "10395:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2219,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10404:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "10395:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2221,
												"nodeType": "ExpressionStatement",
												"src": "10395:13:10"
											}
										]
									},
									"documentation": {
										"id": 2213,
										"nodeType": "StructuredDocumentation",
										"src": "10282:62:10",
										"text": " @dev Allows the owner to pause the contract"
									},
									"functionSelector": "8456cb59",
									"id": 2223,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2216,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2215,
												"name": "onlyOwner",
												"nameLocations": [
													"10375:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "10375:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "10375:9:10"
										}
									],
									"name": "pause",
									"nameLocation": "10358:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10363:2:10"
									},
									"returnParameters": {
										"id": 2217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10385:0:10"
									},
									"scope": 2409,
									"src": "10349:66:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2233,
										"nodeType": "Block",
										"src": "10528:31:10",
										"statements": [
											{
												"expression": {
													"id": 2231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2229,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1603,
														"src": "10538:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2230,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10547:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "10538:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2232,
												"nodeType": "ExpressionStatement",
												"src": "10538:14:10"
											}
										]
									},
									"documentation": {
										"id": 2224,
										"nodeType": "StructuredDocumentation",
										"src": "10421:64:10",
										"text": " @dev Allows the owner to unpause the contract"
									},
									"functionSelector": "3f4ba83a",
									"id": 2234,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2227,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2226,
												"name": "onlyOwner",
												"nameLocations": [
													"10518:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "10518:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "10518:9:10"
										}
									],
									"name": "unpause",
									"nameLocation": "10499:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10506:2:10"
									},
									"returnParameters": {
										"id": 2228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10528:0:10"
									},
									"scope": 2409,
									"src": "10490:69:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2255,
										"nodeType": "Block",
										"src": "10853:145:10",
										"statements": [
											{
												"assignments": [
													2243
												],
												"declarations": [
													{
														"constant": false,
														"id": 2243,
														"mutability": "mutable",
														"name": "multiplier",
														"nameLocation": "10871:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 2255,
														"src": "10863:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2242,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10863:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2247,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2244,
														"name": "stakedDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2237,
														"src": "10884:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2245,
														"name": "multiplierDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1595,
														"src": "10901:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10884:35:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10863:56:10"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2248,
															"name": "multiplier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2243,
															"src": "10936:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2249,
															"name": "maxMultiplier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1593,
															"src": "10949:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10936:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2252,
														"name": "multiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2243,
														"src": "10981:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "10936:55:10",
													"trueExpression": {
														"id": 2251,
														"name": "maxMultiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1593,
														"src": "10965:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2241,
												"id": 2254,
												"nodeType": "Return",
												"src": "10929:62:10"
											}
										]
									},
									"documentation": {
										"id": 2235,
										"nodeType": "StructuredDocumentation",
										"src": "10565:191:10",
										"text": " @dev Calculates the reward multiplier based on staking duration\n @param stakedDuration Duration for which tokens have been staked\n @return Calculated multiplier"
									},
									"id": 2256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateRewardMultiplier",
									"nameLocation": "10770:26:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "stakedDuration",
												"nameLocation": "10805:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "10797:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10797:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10796:24:10"
									},
									"returnParameters": {
										"id": 2241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "10844:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10844:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10843:9:10"
									},
									"scope": 2409,
									"src": "10761:237:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2309,
										"nodeType": "Block",
										"src": "11150:353:10",
										"statements": [
											{
												"assignments": [
													2264
												],
												"declarations": [
													{
														"constant": false,
														"id": 2264,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "11177:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 2309,
														"src": "11160:21:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1570_storage_ptr",
															"typeString": "struct YieldFarm.PoolInfo"
														},
														"typeName": {
															"id": 2263,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2262,
																"name": "PoolInfo",
																"nameLocations": [
																	"11160:8:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1570,
																"src": "11160:8:10"
															},
															"referencedDeclaration": 1570,
															"src": "11160:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1570_storage_ptr",
																"typeString": "struct YieldFarm.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2268,
												"initialValue": {
													"baseExpression": {
														"id": 2265,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1574,
														"src": "11184:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1570_storage_$dyn_storage",
															"typeString": "struct YieldFarm.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2267,
													"indexExpression": {
														"id": 2266,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2259,
														"src": "11193:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11184:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1570_storage",
														"typeString": "struct YieldFarm.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11160:38:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2269,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2264,
															"src": "11212:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1570_storage_ptr",
																"typeString": "struct YieldFarm.PoolInfo storage pointer"
															}
														},
														"id": 2270,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11217:11:10",
														"memberName": "totalStaked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1565,
														"src": "11212:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2271,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11231:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11212:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2301,
												"nodeType": "IfStatement",
												"src": "11208:242:10",
												"trueBody": {
													"id": 2300,
													"nodeType": "Block",
													"src": "11234:216:10",
													"statements": [
														{
															"assignments": [
																2274
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2274,
																	"mutability": "mutable",
																	"name": "multiplier",
																	"nameLocation": "11256:10:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 2300,
																	"src": "11248:18:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2273,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11248:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2280,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2275,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "11269:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11275:9:10",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "11269:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 2277,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2264,
																		"src": "11287:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1570_storage_ptr",
																			"typeString": "struct YieldFarm.PoolInfo storage pointer"
																		}
																	},
																	"id": 2278,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11292:14:10",
																	"memberName": "lastRewardTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1569,
																	"src": "11287:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11269:37:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11248:58:10"
														},
														{
															"assignments": [
																2282
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2282,
																	"mutability": "mutable",
																	"name": "reward",
																	"nameLocation": "11328:6:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 2300,
																	"src": "11320:14:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2281,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11320:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2287,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2283,
																	"name": "multiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2274,
																	"src": "11337:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"expression": {
																		"id": 2284,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2264,
																		"src": "11350:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1570_storage_ptr",
																			"typeString": "struct YieldFarm.PoolInfo storage pointer"
																		}
																	},
																	"id": 2285,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11355:10:10",
																	"memberName": "rewardRate",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1561,
																	"src": "11350:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11337:28:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11320:45:10"
														},
														{
															"expression": {
																"id": 2298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2288,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2264,
																		"src": "11379:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1570_storage_ptr",
																			"typeString": "struct YieldFarm.PoolInfo storage pointer"
																		}
																	},
																	"id": 2290,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "11384:17:10",
																	"memberName": "accRewardPerShare",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1567,
																	"src": "11379:22:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2293,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2291,
																					"name": "reward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2282,
																					"src": "11406:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "31653132",
																					"id": 2292,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "11415:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000000000000_by_1",
																						"typeString": "int_const 1000000000000"
																					},
																					"value": "1e12"
																				},
																				"src": "11406:13:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2294,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "11405:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"expression": {
																			"id": 2295,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2264,
																			"src": "11423:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1570_storage_ptr",
																				"typeString": "struct YieldFarm.PoolInfo storage pointer"
																			}
																		},
																		"id": 2296,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "11428:11:10",
																		"memberName": "totalStaked",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1565,
																		"src": "11423:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11405:34:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11379:60:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2299,
															"nodeType": "ExpressionStatement",
															"src": "11379:60:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2302,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2264,
															"src": "11459:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1570_storage_ptr",
																"typeString": "struct YieldFarm.PoolInfo storage pointer"
															}
														},
														"id": 2304,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "11464:14:10",
														"memberName": "lastRewardTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1569,
														"src": "11459:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2305,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "11481:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11487:9:10",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "11481:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11459:37:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2308,
												"nodeType": "ExpressionStatement",
												"src": "11459:37:10"
											}
										]
									},
									"documentation": {
										"id": 2257,
										"nodeType": "StructuredDocumentation",
										"src": "11004:97:10",
										"text": " @dev Updates the reward variables of the given pool\n @param _pid Pool ID"
									},
									"id": 2310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updatePool",
									"nameLocation": "11115:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2259,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "11135:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2310,
												"src": "11127:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11127:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11126:14:10"
									},
									"returnParameters": {
										"id": 2261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11150:0:10"
									},
									"scope": 2409,
									"src": "11106:397:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2407,
										"nodeType": "Block",
										"src": "11724:731:10",
										"statements": [
											{
												"assignments": [
													2320
												],
												"declarations": [
													{
														"constant": false,
														"id": 2320,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "11751:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 2407,
														"src": "11734:21:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1570_storage_ptr",
															"typeString": "struct YieldFarm.PoolInfo"
														},
														"typeName": {
															"id": 2319,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2318,
																"name": "PoolInfo",
																"nameLocations": [
																	"11734:8:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1570,
																"src": "11734:8:10"
															},
															"referencedDeclaration": 1570,
															"src": "11734:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1570_storage_ptr",
																"typeString": "struct YieldFarm.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2324,
												"initialValue": {
													"baseExpression": {
														"id": 2321,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1574,
														"src": "11758:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1570_storage_$dyn_storage",
															"typeString": "struct YieldFarm.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2323,
													"indexExpression": {
														"id": 2322,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2313,
														"src": "11767:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11758:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1570_storage",
														"typeString": "struct YieldFarm.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11734:38:10"
											},
											{
												"assignments": [
													2327
												],
												"declarations": [
													{
														"constant": false,
														"id": 2327,
														"mutability": "mutable",
														"name": "userStake",
														"nameLocation": "11800:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 2407,
														"src": "11782:27:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$1553_storage_ptr",
															"typeString": "struct YieldFarm.StakeInfo"
														},
														"typeName": {
															"id": 2326,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2325,
																"name": "StakeInfo",
																"nameLocations": [
																	"11782:9:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1553,
																"src": "11782:9:10"
															},
															"referencedDeclaration": 1553,
															"src": "11782:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$1553_storage_ptr",
																"typeString": "struct YieldFarm.StakeInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2333,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2328,
															"name": "poolStakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1581,
															"src": "11812:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_StakeInfo_$1553_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct YieldFarm.StakeInfo storage ref))"
															}
														},
														"id": 2330,
														"indexExpression": {
															"id": 2329,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2313,
															"src": "11823:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11812:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$1553_storage_$",
															"typeString": "mapping(address => struct YieldFarm.StakeInfo storage ref)"
														}
													},
													"id": 2332,
													"indexExpression": {
														"id": 2331,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2315,
														"src": "11829:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11812:23:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$1553_storage",
														"typeString": "struct YieldFarm.StakeInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11782:53:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2334,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2327,
															"src": "11849:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$1553_storage_ptr",
																"typeString": "struct YieldFarm.StakeInfo storage pointer"
															}
														},
														"id": 2335,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11859:6:10",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1548,
														"src": "11849:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2336,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11868:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11849:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2406,
												"nodeType": "IfStatement",
												"src": "11845:604:10",
												"trueBody": {
													"id": 2405,
													"nodeType": "Block",
													"src": "11871:578:10",
													"statements": [
														{
															"assignments": [
																2339
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2339,
																	"mutability": "mutable",
																	"name": "pendingReward",
																	"nameLocation": "11893:13:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 2405,
																	"src": "11885:21:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2338,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11885:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2351,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2344,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 2340,
																						"name": "userStake",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2327,
																						"src": "11910:9:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_StakeInfo_$1553_storage_ptr",
																							"typeString": "struct YieldFarm.StakeInfo storage pointer"
																						}
																					},
																					"id": 2341,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "11920:6:10",
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1548,
																					"src": "11910:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"expression": {
																						"id": 2342,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2320,
																						"src": "11929:4:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PoolInfo_$1570_storage_ptr",
																							"typeString": "struct YieldFarm.PoolInfo storage pointer"
																						}
																					},
																					"id": 2343,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "11934:17:10",
																					"memberName": "accRewardPerShare",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1567,
																					"src": "11929:22:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11910:41:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2345,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "11909:43:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "31653132",
																		"id": 2346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11955:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000_by_1",
																			"typeString": "int_const 1000000000000"
																		},
																		"value": "1e12"
																	},
																	"src": "11909:50:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 2348,
																		"name": "userStake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2327,
																		"src": "11962:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeInfo_$1553_storage_ptr",
																			"typeString": "struct YieldFarm.StakeInfo storage pointer"
																		}
																	},
																	"id": 2349,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11972:10:10",
																	"memberName": "rewardDebt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1550,
																	"src": "11962:20:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11909:73:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11885:97:10"
														},
														{
															"assignments": [
																2353
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2353,
																	"mutability": "mutable",
																	"name": "stakedDuration",
																	"nameLocation": "12004:14:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 2405,
																	"src": "11996:22:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2352,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11996:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2363,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2354,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "12021:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12027:9:10",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "12021:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2360,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2356,
																					"name": "userStake",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2327,
																					"src": "12040:9:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_StakeInfo_$1553_storage_ptr",
																						"typeString": "struct YieldFarm.StakeInfo storage pointer"
																					}
																				},
																				"id": 2357,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "12050:9:10",
																				"memberName": "lockUntil",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1552,
																				"src": "12040:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"expression": {
																					"id": 2358,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2320,
																					"src": "12062:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$1570_storage_ptr",
																						"typeString": "struct YieldFarm.PoolInfo storage pointer"
																					}
																				},
																				"id": 2359,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "12067:12:10",
																				"memberName": "lockDuration",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1563,
																				"src": "12062:17:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12040:39:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2361,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "12039:41:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12021:59:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11996:84:10"
														},
														{
															"assignments": [
																2365
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2365,
																	"mutability": "mutable",
																	"name": "multiplier",
																	"nameLocation": "12102:10:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 2405,
																	"src": "12094:18:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2364,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12094:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2369,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2367,
																		"name": "stakedDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2353,
																		"src": "12142:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2366,
																	"name": "_calculateRewardMultiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2256,
																	"src": "12115:26:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256)"
																	}
																},
																"id": 2368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12115:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12094:63:10"
														},
														{
															"expression": {
																"id": 2379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2370,
																	"name": "pendingReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2339,
																	"src": "12171:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2371,
																			"name": "pendingReward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2339,
																			"src": "12187:13:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2374,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2372,
																						"name": "baseRewardRate",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1591,
																						"src": "12204:14:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"id": 2373,
																						"name": "multiplier",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2365,
																						"src": "12221:10:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12204:27:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2375,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "12203:29:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12187:45:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2377,
																		"name": "baseRewardRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1591,
																		"src": "12235:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12187:62:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12171:78:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2380,
															"nodeType": "ExpressionStatement",
															"src": "12171:78:10"
														},
														{
															"expression": {
																"id": 2385,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2381,
																		"name": "userStake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2327,
																		"src": "12263:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeInfo_$1553_storage_ptr",
																			"typeString": "struct YieldFarm.StakeInfo storage pointer"
																		}
																	},
																	"id": 2383,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "12273:10:10",
																	"memberName": "rewardDebt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1550,
																	"src": "12263:20:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2384,
																	"name": "pendingReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2339,
																	"src": "12286:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12263:36:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2386,
															"nodeType": "ExpressionStatement",
															"src": "12263:36:10"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2389,
																			"name": "_user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2315,
																			"src": "12336:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"id": 2387,
																			"name": "nftToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1606,
																			"src": "12317:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC721Upgradeable_$1139",
																				"typeString": "contract IERC721Upgradeable"
																			}
																		},
																		"id": 2388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "12326:9:10",
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1064,
																		"src": "12317:18:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 2390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12317:25:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12345:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "12317:29:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2404,
															"nodeType": "IfStatement",
															"src": "12313:126:10",
															"trueBody": {
																"id": 2403,
																"nodeType": "Block",
																"src": "12348:91:10",
																"statements": [
																	{
																		"expression": {
																			"id": 2401,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 2393,
																					"name": "userStake",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2327,
																					"src": "12366:9:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_StakeInfo_$1553_storage_ptr",
																						"typeString": "struct YieldFarm.StakeInfo storage pointer"
																					}
																				},
																				"id": 2395,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "12376:10:10",
																				"memberName": "rewardDebt",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1550,
																				"src": "12366:20:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2398,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2396,
																						"name": "pendingReward",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2339,
																						"src": "12390:13:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2397,
																						"name": "nftBoostRate",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1597,
																						"src": "12406:12:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12390:28:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "313030",
																					"id": 2399,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "12421:3:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100_by_1",
																						"typeString": "int_const 100"
																					},
																					"value": "100"
																				},
																				"src": "12390:34:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12366:58:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2402,
																		"nodeType": "ExpressionStatement",
																		"src": "12366:58:10"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2311,
										"nodeType": "StructuredDocumentation",
										"src": "11509:148:10",
										"text": " @dev Updates the reward variables for a user on the given pool\n @param _pid Pool ID\n @param _user Address of the user"
									},
									"id": 2408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateRewards",
									"nameLocation": "11671:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2313,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "11694:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "11686:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11686:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2315,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "11708:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "11700:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11700:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11685:29:10"
									},
									"returnParameters": {
										"id": 2317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11724:0:10"
									},
									"scope": 2409,
									"src": "11662:793:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2410,
							"src": "739:11718:10",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219,
								1619,
								1627,
								1635,
								1643,
								1649,
								1661
							]
						}
					],
					"src": "32:12425:10"
				},
				"id": 10
			}
		}
	}
}